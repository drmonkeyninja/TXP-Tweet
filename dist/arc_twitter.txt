# arc_twitter v4.4.0
# <a href="http://www.twitter.com">Twitter</a> for Textpattern
# Andy Carter
# http://andy-carter.com/

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YToxMTp7czo0OiJuYW1lIjtzOjExOiJhcmNfdHdpdHRlciI7czo3OiJ2ZXJzaW9uIjtzOjU6
IjQuNC4wIjtzOjY6ImF1dGhvciI7czoxMToiQW5keSBDYXJ0ZXIiO3M6MTA6ImF1dGhvcl91
cmkiO3M6MjM6Imh0dHA6Ly9hbmR5LWNhcnRlci5jb20vIjtzOjExOiJkZXNjcmlwdGlvbiI7
czo2MDoiPGEgaHJlZj0iaHR0cDovL3d3dy50d2l0dGVyLmNvbSI+VHdpdHRlcjwvYT4gZm9y
IFRleHRwYXR0ZXJuIjtzOjU6Im9yZGVyIjtzOjE6IjUiO3M6NDoidHlwZSI7czoxOiI1Ijtz
OjU6ImZsYWdzIjtzOjE6IjMiO3M6NDoiaGVscCI7czoxNTM2NjoiCTxoMT48c3BhbiBjbGFz
cz0iY2FwcyI+VFhQPC9zcGFuPiBUd2VldCAoYXJjX3R3aXR0ZXIgZm9yIFRleHRwYXR0ZXJu
KTwvaDE+CgoJPHA+PHNwYW4gY2xhc3M9ImNhcHMiPlRYUDwvc3Bhbj4gVHdlZXQgcHJvdmlk
ZXMgYWNjZXNzIHRvIHlvdXIgVHdpdHRlciBhY2NvdW50IHRocm91Z2ggYm90aCB0aGUgYWRt
aW4gaW50ZXJmYWNlIGFuZCB0aGUgcHVibGljIHNpZGUgb2YgeW91ciBzaXRlLiBVcGRhdGUg
VHdpdHRlciB3aGVuIHlvdSBwb3N0IGEgbmV3IGFydGljbGUgKHdpdGggYXJ0aWNsZS1ieS1h
cnRpY2xlIG9wdCBvdXQgb3B0aW9uKSwgdXBkYXRlIGFuZCB2aWV3IHlvdXIgVHdpdHRlciBm
ZWVkIHRocm91Z2ggdGhlIGFkbWluIFR3aXR0ZXIgdGFiLCBhbmQgZGlzcGxheSBUd2l0dGVy
IGZlZWRzIG9uIHlvdXIgc2l0ZS48L3A+CgoJPGgyPlRhYmxlIG9mIGNvbnRlbnRzPC9oMj4K
Cgk8b2w+CgkJPGxpPjxhIGhyZWY9IiNhcmNfdHdpdHRlcl9yZXF1aXJlbWVudHMiPlBsdWdp
biByZXF1aXJlbWVudHM8L2E+PC9saT4KCQk8bGk+PGEgaHJlZj0iI2FyY190d2l0dGVyX2lu
c3RhbGxhdGlvbiI+SW5zdGFsbGF0aW9uIC8gVW5pbnN0YWxsYXRpb248L2E+PC9saT4KCQk8
bGk+PGEgaHJlZj0iI2FyY190d2l0dGVyX3RhZ3MiPlRhZ3M8L2E+PC9saT4KCQk8bGk+PGEg
aHJlZj0iI2FyY190d2l0dGVyX2NhY2hpbmciPkNhY2hpbmc8L2E+PC9saT4KCQk8bGk+PGEg
aHJlZj0iI2FyY190d2l0dGVyX3ByZWZzIj5QcmVmZXJlbmNlczwvYT48L2xpPgoJCTxsaT48
YSBocmVmPSIjYXJjX3R3aXR0ZXJfYXJ0aWNsZSI+VHdlZXRpbmcgYXJ0aWNsZXM8L2E+PC9s
aT4KCQk8bGk+PGEgaHJlZj0iI2FyY190d2l0dGVyX2FkbWluIj5UaGUgVHdpdHRlciB0YWI8
L2E+PC9saT4KCQk8bGk+PGEgaHJlZj0iI2FyY190d2l0dGVyX2F1dGhvciI+QXV0aG9yPC9h
PjwvbGk+Cgk8L29sPgoKCTxoMiBpZD0iYXJjX3R3aXR0ZXJfcmVxdWlyZW1lbnRzIj5QbHVn
aW4gcmVxdWlyZW1lbnRzPC9oMj4KCgk8cD5hcmNfdHdpdHRlciYjODIxNztzIG1pbnVtdW0g
cmVxdWlyZW1lbnRzOjwvcD4KCgk8dWw+CgkJPGxpPlRleHRwYXR0ZXJuIDQuNSs8L2xpPgoJ
CTxsaT48c3BhbiBjbGFzcz0iY2FwcyI+UEhQPC9zcGFuPiA1IGFuZCBjVVJMPC9saT4KCTwv
dWw+CgoJPGgyIGlkPSJhcmNfdHdpdHRlcl9pbnN0YWxsYXRpb24iPkluc3RhbGxhdGlvbiAv
IFVuaW5zdGFsbGF0aW9uPC9oMj4KCgk8cD5UbyBpbnN0YWxsIGdvIHRvIHRoZSAmIzgyMTY7
cGx1Z2lucyYjODIxNzsgdGFiIHVuZGVyICYjODIxNjthZG1pbiYjODIxNzsgYW5kIHBhc3Rl
IHRoZSBwbHVnaW4gY29kZSBpbnRvIHRoZSAmIzgyMTY7SW5zdGFsbCBwbHVnaW4mIzgyMTc7
IGJveCwgJiM4MjE2O3VwbG9hZCYjODIxNzsgYW5kIHRoZW4gJiM4MjE2O2luc3RhbGwmIzgy
MTc7LiBUaGUgcGx1Z2luIHdpbGwgYmUgYXV0b21hdGljYWxseSBhY3RpdmF0ZWQuPC9wPgoK
CTxwPkJlZm9yZSB5b3Ugc3RhcnQgdXNpbmcgPHNwYW4gY2xhc3M9InRhZyI+YXJjX3R3aXR0
ZXI8L3NwYW4+IHlvdSB3aWxsIG5lZWQgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIGNhY2hlIGRp
cmVjdG9yeSBpcyB3cml0YWJsZS4gU2VlIHRoZSAmIzgyMTY7Q2FjaGluZyYjODIxNzsgc3Vi
c2VjdGlvbiBiZWxvdyBmb3IgZnVydGhlciBpbmZvcm1hdGlvbi48L3A+CgoJPHA+WW91IHdp
bGwgbmVlZCB0byBhc3NvY2lhdGUgeW91ciBzaXRlIHdpdGggYSBUd2l0dGVyIGFjY291bnQg
YnkgY29ubmVjdGluZyB0byBUd2l0dGVyIGZyb20gdGhlIHBsdWdpbiYjODIxNztzIG9wdGlv
bnMgc2NyZWVuLiBDbGljayBvbiB0aGUgbGluayB0byBjb25uZWN0IHRvIFR3aXR0ZXIsIHlv
dSB3aWxsIGJlIGFza2VkIHRvIGxvZ2luIHRvIFR3aXR0ZXIsIGNsaWNraW5nIHRoaXMgbGlu
ayB3aWxsIHRlbXBvcmFyaWx5IHRha2UgeW91IHRvIHRoZSBUd2l0dGVyIHNpdGUgd2hlcmUg
eW91IHdpbGwgYmUgYXNrZWQgdG8gbG9naW4gYW5kIGFwcHJvdmUgYWNjZXNzIGZvciA8c3Bh
biBjbGFzcz0iY2FwcyI+VFhQPC9zcGFuPiBUd2VldCB0byByZWFkIGFuZCB3cml0ZSB0byB5
b3VyIFR3aXR0ZXIgYWNjb3VudC4gSWYgYWxsIGlzIHN1Y2Nlc3NmdWwgeW91IHdpbGwgYmUg
cmV0dXJuZWQgdG8gdGhlIG9wdGlvbnMgc2NyZWVuIGFuZCB5b3VyIHVzZXIgbmFtZSB3aWxs
IGFwcGVhci48L3A+CgoJPHA+QXQgYW55IHRpbWUgeW91IGNhbiBkaXNhc3NvY2lhdGUgeW91
ciBUd2l0dGVyIGFjY291bnQgd2l0aCA8c3BhbiBjbGFzcz0iY2FwcyI+VFhQPC9zcGFuPiBU
d2VldCB2aWEgeW91ciBUd2l0dGVyIGFjY291bnQgcHJlZmVyZW5jZXMgb24gdGhlIDxhIGhy
ZWY9Imh0dHA6Ly93d3cudHdpdHRlci5jb20iPlR3aXR0ZXIgd2Vic2l0ZTwvYT4uPC9wPgoK
CTxwPlRvIHVuaW5zdGFsbCA8c3BhbiBjbGFzcz0idGFnIj5hcmNfdHdpdHRlcjwvc3Bhbj4g
c2ltcGx5IGRlbGV0ZSB0aGUgcGx1Z2luIGZyb20gdGhlICYjODIxNjtQbHVnaW5zJiM4MjE3
OyB0YWIuICBUaGlzIHdpbGwgcmVtb3ZlIHRoZSBwbHVnaW4gY29kZSwgZGVsZXRlIHJlbGF0
ZWQgcHJlZmVyZW5jZXMgYW5kIGRyb3AgdGhlIDxzcGFuIGNsYXNzPSJ0YWciPmFyY190d2l0
dGVyPC9zcGFuPiB0YWJsZSBmcm9tIHlvdXIgVGV4dHBhdHRlcm4gZGF0YWJhc2UuPC9wPgoK
CTxoMiBpZD0iYXJjX3R3aXR0ZXJfdGFncyI+VGFnczwvaDI+CgoJPGgzIGlkPSJhcmNfdHdp
dHRlcl90YWciPmFyY190d2l0dGVyPC9oMz4KCjxwcmU+PGNvZGU+Jmx0O3R4cDogYXJjX3R3
aXR0ZXIgLyZndDsKPC9jb2RlPjwvcHJlPgoKCTxoND5BdHRyaWJ1dGVzPC9oND4KCgk8dWw+
CgkJPGxpPjxlbT51c2VyPC9lbT4gJiM4MjEyOyBUd2l0dGVyIHVzZXIgbmFtZS4gRGVmYXVs
dDogPGVtPmFyY190d2l0dGVyIHVzZXJuYW1lPC9lbT4uPC9saT4KCQk8bGk+PGVtPnJldHdl
ZXRzPC9lbT4gJiM4MjEyOyAxIHRvIGluY2x1ZGUgcmV0d2VldHMsIDAgdG8gZXhjbHVkZSB0
aGVtIGZyb20gdGhlIGZlZWQuIERlZmF1bHQ6ICYjODIxNjswJiM4MjE3Oy48L2xpPgoJCTxs
aT48ZW0+cmVwbGllczwvZW0+ICYjODIxMjsgMSB0byBpbmNsdWRlIHJlcGxpZXMsIDAgdG8g
ZXhjbHVkZSB0aGVtIGZyb20gdGhlIGZlZWQuIERlZmF1bHQ6ICYjODIxNjsxJiM4MjE3Oy48
L2xpPgoJCTxsaT48ZW0+bGltaXQ8L2VtPiAmIzgyMTI7IG1heGltdW0gbnVtYmVyIG9mIHR3
ZWV0cyB0byBkaXNwbGF5IChtYXguIDIwMCkuIERlZmF1bHQ6ICYjODIxNjsyNSYjODIxNzsu
PC9saT4KCQk8bGk+PGVtPmZldGNoPC9lbT4gJiM4MjEyOyBtYXhpbXVtIG51bWJlciBvZiB0
d2VldHMgdG8gcmV0cmlldmUgZnJvbSBUd2l0dGVyIChtYXguIDIwMCk8c3VwIGNsYXNzPSJm
b290bm90ZSI+PGEgaHJlZj0iI2ZuNTQxMjU2NDEwNWE3OGNkYjk1OTk2NCI+MTwvYT48L3N1
cD4uIERlZmF1bHQ6ICYjODIxNjswJiM4MjE3Oy48L2xpPgoJCTxsaT48ZW0+ZnVsbF91cmxz
PC9lbT4gJiM4MjEyOyAxIHRvIGRpc3BsYXkgZnVsbCA8c3BhbiBjbGFzcz0iY2FwcyI+VVJM
PC9zcGFuPnMsIDAgZm9yIHQuY28gPHNwYW4gY2xhc3M9ImNhcHMiPlVSTDwvc3Bhbj5zLiBE
ZWZhdWx0OiAmIzgyMTY7MCYjODIxNzsuPC9saT4KCQk8bGk+PGVtPmRhdGVmb3JtYXQ8L2Vt
PiAmIzgyMTI7IGZvcm1hdCB0aGF0IHVwZGF0ZSBkYXRlcyB3aWxsIGFwcGVhciBhcy4gRGVm
YXVsdDogPGVtPkFyY2hpdmUgZGF0ZSBmb3JtYXQ8L2VtPi48L2xpPgoJCTxsaT48ZW0+bGFi
ZWw8L2VtPiAmIzgyMTI7IGxhYmVsIGZvciB0aGUgdG9wIG9mIHRoZSBsaXN0LjwvbGk+CgkJ
PGxpPjxlbT5sYWJlbHRhZzwvZW0+ICYjODIxMjsgaW5kZXBlbmRlbnQgd3JhcHRhZyBmb3Ig
bGFiZWwuPC9saT4KCQk8bGk+PGVtPmJyZWFrPC9lbT4gJiM4MjEyOyA8c3BhbiBjbGFzcz0i
Y2FwcyI+SFRNTDwvc3Bhbj4gdGFnICh3aXRob3V0IGJyYWNrZXRzKSwgb3Igc3RyaW5nLCB1
c2VkIHRvIHNlcGFyYXRlIHRoZSB1cGRhdGVzLiBEZWZhdWx0OiAmIzgyMTY7bGkmIzgyMTc7
LjwvbGk+CgkJPGxpPjxlbT53cmFwdGFnPC9lbT4gJiM4MjEyOyA8c3BhbiBjbGFzcz0iY2Fw
cyI+SFRNTDwvc3Bhbj4gdGFnIHRvIGJlIHVzZWQgYXMgdGhlIHdyYXB0YWcsIHdpdGhvdXQg
YnJhY2tldHMuPC9saT4KCQk8bGk+PGVtPmNsYXNzPC9lbT4gJiM4MjEyOyA8c3BhbiBjbGFz
cz0iY2FwcyI+Q1NTPC9zcGFuPiBjbGFzcyBhdHRyaWJ1dGUgZm9yIHdyYXB0YWcuIERlZmF1
bHQ6ICYjODIxNjthcmNfdHdpdHRlciYjODIxNzsuPC9saT4KCQk8bGk+PGVtPmNsYXNzX3Bv
c3RlZDwvZW0+ICYjODIxMjsgPHNwYW4gY2xhc3M9ImNhcHMiPkNTUzwvc3Bhbj4gY2xhc3Mg
YXR0cmlidXRlIGFwcGxpZWQgdG8gc3BhbiB0YWcgYXJvdW5kIHBvc3RlZCBkYXRlLiBEZWZh
dWx0OiAmIzgyMTY7YXJjX3R3aXR0ZXItcG9zdGVkJiM4MjE3Oy48L2xpPgoJPC91bD4KCgk8
cCBpZD0iZm41NDEyNTY0MTA1YTc4Y2RiOTU5OTY0IiBjbGFzcz0iZm9vdG5vdGUiPjxzdXA+
MTwvc3VwPiBUd2l0dGVyJiM4MjE3O3MgPHNwYW4gY2xhc3M9ImNhcHMiPkFQSTwvc3Bhbj4g
Y291bnRzIHRoZSBudW1iZXIgb2YgdHdlZXRzIHRvIHJldHVybiBiZWZvcmUgYXBwbHlpbmcg
c29tZSBvZiB0aGUgZmlsdGVycywgc28gdGhlIHJlc3BvbnNlIGNhbiBiZSBmZXdlciB0d2Vl
dHMgdGhhbiBleHBlY3RlZC4gVG8gaGVscCBhdm9pZCB0aGlzIHlvdSBjYW4gc2V0IGEgPGVt
PmZldGNoPC9lbT4gbGltaXQgdGhhdCBpcyBoaWdoZXIgdGhhbiB0aGUgZGlzcGxheSA8ZW0+
bGltaXQ8L2VtPiB0aGF0IHlvdSB3YW50IHRvIG91dHB1dC4gSWYgPGVtPmZldGNoPC9lbT4g
aXMgbGVzcyB0aGFuIDxlbT5saW1pdDwvZW0+IHRoZSBsYXR0ZXIgd2lsbCBiZSB1c2VkIGlu
c3RlYWQuPC9wPgoKCTxoND5FeGFtcGxlIHVzYWdlPC9oND4KCjxwcmU+PGNvZGU+Jmx0O3R4
cDphcmNfdHdpdHRlciB1c2VyPSZxdW90O2RybW9ua2V5bmluamEmcXVvdDsgbGltaXQ9JnF1
b3Q7NSZxdW90OyB3cmFwdGFnPSZxdW90O3VsJnF1b3Q7IGJyZWFrPSZxdW90O2xpJnF1b3Q7
IGRhdGVmb3JtYXQ9JnF1b3Q7JWIgJU9lLCAlSTolTSAlcCZxdW90OyAvJmd0Owo8L2NvZGU+
PC9wcmU+CgoJPHA+UHJvZHVjZXMgYSBidWxsZXQgcG9pbnQgbGlzdCBvZiB0aGUgbGFzdCA1
IFR3aXR0ZXIgdXBkYXRlcyBmcm9tIGRybW9ua2V5bmluamEmIzgyMTc7cyBUd2l0dGVyIGZl
ZWQgd2l0aCBhIGRlZmluZWQgZGF0ZSBmb3JtYXQgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQg
YXJjaGl2ZSBkYXRlIGZvcm1hdC48L3A+CgoJPGgzIGlkPSJhcmNfdHdpdHRlcl9zZWFyY2hf
dGFnIj5hcmNfdHdpdHRlcl9zZWFyY2g8L2gzPgoKPHByZT48Y29kZT4mbHQ7dHhwOmFyY190
d2l0dGVyX3NlYXJjaCBoYXNodGFncz0mcXVvdDt0eHAmcXVvdDsgLyZndDsKPC9jb2RlPjwv
cHJlPgoKCTxoND5BdHRyaWJ1dGVzPC9oND4KCgk8dWw+CgkJPGxpPjxlbT5zZWFyY2g8L2Vt
PiAmIzgyMTI7IGNvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIHNlYXJjaCB3b3Jkcy48L2xpPgoJ
CTxsaT48ZW0+aGFzaHRhZ3M8L2VtPiAmIzgyMTI7IGNvbW1hIHNlcGFyYXRlZCBsaXN0IG9m
IGhhc2h0YWdzIHRvIHNlYXJjaCBmb3IgKG5vdCBpbmNsdWRpbmcgdGhlIGhhc2gpLjwvbGk+
CgkJPGxpPjxlbT5yZXBseTwvZW0+ICYjODIxMjsgdXNlcm5hbWUgb2YgdHdlZXRzIGluIHJl
cGx5IHRvLjwvbGk+CgkJPGxpPjxlbT5tZW50aW9uPC9lbT4gJiM4MjEyOyB1c2VybmFtZSBv
ZiB1c2VyIG1lbnRpb25lZCBpbiB0d2VldHMgKDxpPmkuZS48L2k+IHR3ZWV0cyBjb250YWlu
aW5nIEB1c2VybmFtZSkuPC9saT4KCQk8bGk+PGVtPmxpbWl0PC9lbT4gJiM4MjEyOyBtYXhp
bXVtIG51bWJlciBvZiB0d2VldHMgdG8gZGlzcGxheSAobWF4LiAyMDApLiBEZWZhdWx0OiAm
IzgyMTY7MTAmIzgyMTc7LjwvbGk+CgkJPGxpPjxlbT5mdWxsX3VybHM8L2VtPiAmIzgyMTI7
IDEgdG8gZGlzcGxheSBmdWxsIDxzcGFuIGNsYXNzPSJjYXBzIj5VUkw8L3NwYW4+cywgMCBm
b3IgdC5jbyA8c3BhbiBjbGFzcz0iY2FwcyI+VVJMPC9zcGFuPnMuIERlZmF1bHQ6ICYjODIx
NjswJiM4MjE3Oy48L2xpPgoJCTxsaT48ZW0+ZGF0ZWZvcm1hdDwvZW0+ICYjODIxMjsgZm9y
bWF0IHRoYXQgdXBkYXRlIGRhdGVzIHdpbGwgYXBwZWFyIGFzLiBEZWZhdWx0OiA8ZW0+QXJj
aGl2ZSBkYXRlIGZvcm1hdDwvZW0+LjwvbGk+CgkJPGxpPjxlbT5sYWJlbDwvZW0+ICYjODIx
MjsgbGFiZWwgZm9yIHRoZSB0b3Agb2YgdGhlIGxpc3QuPC9saT4KCQk8bGk+PGVtPmxhYmVs
dGFnPC9lbT4gJiM4MjEyOyBpbmRlcGVuZGVudCB3cmFwdGFnIGZvciBsYWJlbC48L2xpPgoJ
CTxsaT48ZW0+YnJlYWs8L2VtPiAmIzgyMTI7IDxzcGFuIGNsYXNzPSJjYXBzIj5IVE1MPC9z
cGFuPiB0YWcgKHdpdGhvdXQgYnJhY2tldHMpLCBvciBzdHJpbmcsIHVzZWQgdG8gc2VwYXJh
dGUgdGhlIHVwZGF0ZXMuIERlZmF1bHQ6ICYjODIxNjtsaSYjODIxNzsuPC9saT4KCQk8bGk+
PGVtPndyYXB0YWc8L2VtPiAmIzgyMTI7IDxzcGFuIGNsYXNzPSJjYXBzIj5IVE1MPC9zcGFu
PiB0YWcgdG8gYmUgdXNlZCBhcyB0aGUgd3JhcHRhZywgd2l0aG91dCBicmFja2V0cy48L2xp
PgoJCTxsaT48ZW0+Y2xhc3M8L2VtPiAmIzgyMTI7IDxzcGFuIGNsYXNzPSJjYXBzIj5DU1M8
L3NwYW4+IGNsYXNzIGF0dHJpYnV0ZSBmb3Igd3JhcHRhZy4gRGVmYXVsdDogJiM4MjE2O2Fy
Y190d2l0dGVyX3NlYXJjaCYjODIxNzsuPC9saT4KCQk8bGk+PGVtPmNsYXNzX3VzZXI8L2Vt
PiAmIzgyMTI7IDxzcGFuIGNsYXNzPSJjYXBzIj5DU1M8L3NwYW4+IGNsYXNzIGF0dHJpYnV0
ZSBhcHBsaWVkIHRvIHNwYW4gdGFnIGFyb3VuZCB1c2VyIG5hbWUuIERlZmF1bHQ6ICYjODIx
NjthcmNfdHdpdHRlci11c2VyJiM4MjE3Oy48L2xpPgoJCTxsaT48ZW0+Y2xhc3NfcG9zdGVk
PC9lbT4gJiM4MjEyOyA8c3BhbiBjbGFzcz0iY2FwcyI+Q1NTPC9zcGFuPiBjbGFzcyBhdHRy
aWJ1dGUgYXBwbGllZCB0byBzcGFuIHRhZyBhcm91bmQgcG9zdGVkIGRhdGUuIERlZmF1bHQ6
ICYjODIxNjthcmNfdHdpdHRlci1wb3N0ZWQmIzgyMTc7LjwvbGk+Cgk8L3VsPgoKCTxoND5F
eGFtcGxlIHVzYWdlPC9oND4KCjxwcmU+PGNvZGU+Jmx0O3R4cDphcmNfdHdpdHRlcl9zZWFy
Y2ggc2VhcmNoPSZxdW90O3BsdWdpbiZxdW90OyBoYXNodGFncz0mcXVvdDt0eHAsdGV4dHBh
dHRlcm4mcXVvdDsgbGltaXQ9JnF1b3Q7MjUmcXVvdDsgLyZndDsKPC9jb2RlPjwvcHJlPgoK
CTxwPlByb2R1Y2VzIGEgbGlzdCBvZiB0d2VldHMgY29udGFpbmluZyB0aGUgd29yZCAmIzgy
MTY7cGx1Z2luJiM4MjE3OyBhbmQgdGhlIGhhc2h0YWdzICYjODIxNjsjdHhwJiM4MjE3OyBh
bmQgJiM4MjE2OyN0ZXh0cGF0dGVybiYjODIxNzsuIFRoZSB0YWcgd2lsbCByZXR1cm4gYSBt
YXhpbXVtIG9mIDI1IHR3ZWV0cy48L3A+CgoJPGgzIGlkPSJhcmNfdHdpdHRlcl9yZXR3ZWV0
X3RhZyI+YXJjX3R3aXR0ZXJfdHdlZXRfYnV0dG9uPC9oMz4KCgk8cD5PdXRwdXRzIHRoZSBU
d2l0dGVyIHR3ZWV0IGJ1dHRvbiAoZm9ybWVybHkgPGNvZGU+Jmx0O3R4cDphcmNfdHdpdHRl
cl9yZXR3ZWV0IC8mZ3Q7PC9jb2RlPikuPC9wPgoKPHByZT48Y29kZT4mbHQ7dHhwOmFyY190
d2l0dGVyX3R3ZWV0X2J1dHRvbiAvJmd0Owo8L2NvZGU+PC9wcmU+CgoJPGg0PkF0dHJpYnV0
ZXM8L2g0PgoKCTx1bD4KCQk8bGk+PGVtPnVzZXI8L2VtPiAmIzgyMTI7IFR3aXR0ZXIgdXNl
ciBuYW1lIHRvIHF1b3RlLiBEZWZhdWx0OiA8ZW0+YXJjX3R3aXR0ZXIgdXNlcm5hbWU8L2Vt
Pi48L2xpPgoJCTxsaT48ZW0+dXJsPC9lbT4gJiM4MjEyOyA8c3BhbiBjbGFzcz0iY2FwcyI+
VVJMPC9zcGFuPiB0byB0d2VldC48L2xpPgoJCTxsaT48ZW0+dGV4dDwvZW0+ICYjODIxMjsg
dHdlZXQgdGV4dC48L2xpPgoJCTxsaT48ZW0+Zm9sbG93MTwvZW0+ICYjODIxMjsgc3VnZ2Vz
dGVkIFR3aXR0ZXIgYWNjb3VudCB0byBmb2xsb3cuPC9saT4KCQk8bGk+PGVtPmZvbGxvdzI8
L2VtPiAmIzgyMTI7IGFzIDxlbT5mb2xsb3cxPC9lbT4uPC9saT4KCQk8bGk+PGVtPmxhbmc8
L2VtPiAmIzgyMTI7IGxhbmdhdWdlLiBEZWZhdWx0OiAmIzgyMTY7ZW4mIzgyMTc7LjwvbGk+
CgkJPGxpPjxlbT5jb3VudDwvZW0+ICYjODIxMjsgY291bnQgYm94IHBvc2l0aW9uLCBvcHRp
b25zOiBub25lLCBob3Jpem9udGFsIG9yIHZlcnRpY2FsLiBEZWZhdWx0OiAmIzgyMTY7aG9y
aXpvbnRhbCYjODIxNzsuPC9saT4KCQk8bGk+PGVtPmluY2x1ZGVfanM8L2VtPiAmIzgyMTI7
IHdoZXRoZXIgb3Igbm90IHRvIGluY2x1ZGUgdGhlIHdpZGdldCBKYXZhU2NyaXB0LiBEZWZh
dWx0OiAmIzgyMTY7MSYjODIxNzsuPC9saT4KCQk8bGk+PGVtPm9wdGltaXNlX2pzPC9lbT4g
JiM4MjEyOyBvcHRpbWlzZSB0aGUgSmF2YVNjcmlwdCBieSB1c2luZyBhIGxvY2FsIHNjcmlw
dCByYXRoZXIgdGhhbiB0aGF0IGhvc3RlZCBvbiB0aGVUd2l0dGVyIHNpdGUuIERlZmF1bHQ6
ICYjODIxNjswJiM4MjE3Oy48L2xpPgoJCTxsaT48ZW0+Y2xhc3M8L2VtPiAmIzgyMTI7IDxz
cGFuIGNsYXNzPSJjYXBzIj5DU1M8L3NwYW4+IGNsYXNzIGF0dHJpYnV0ZSBhcHBsaWVkIHRv
IHRoZSB0d2VldCBidXR0b24uIERlZmF1bHQ6ICYjODIxNjt0d2l0dGVyLXNoYXJlLWJ1dHRv
biYjODIxNzsuPC9saT4KCTwvdWw+CgoJPGgzIGlkPSJhcmNfdHdpdHRlcl9mb2xsb3dfYnV0
dG9uX3RhZyI+YXJjX3R3aXR0ZXJfZm9sbG93X2J1dHRvbjwvaDM+CgoJPHA+T3V0cHV0cyB0
aGUgVHdpdHRlciBmb2xsb3cgYnV0dG9uIChhbiBhbHRlcm5hdGl2ZSB2ZXJzaW9uIGlzIGlu
Y2x1ZGVkIGluIHRoZSA8YSBocmVmPSJodHRwOi8vYW5keS1jYXJ0ZXIuY29tL3R4cC9hcmNf
dHdpdHRlcl9pbnRlbnRzLXR4cC10d2VldC1hZGQtb24iPmFyY190d2l0dGVyX2ludGVudHMg
ZXh0ZW5zaW9uIHBsdWdpbjwvYT4pLjwvcD4KCjxwcmU+PGNvZGU+Jmx0O3R4cDphcmNfdHdp
dHRlcl9mb2xsb3dfYnV0dG9uIC8mZ3Q7CjwvY29kZT48L3ByZT4KCgk8aDQ+QXR0cmlidXRl
czwvaDQ+CgoJPHVsPgoJCTxsaT48ZW0+dXNlcjwvZW0+ICYjODIxMjsgVHdpdHRlciB1c2Vy
IG5hbWUgdG8gZm9sbG93LiBEZWZhdWx0OiA8ZW0+YXJjX3R3aXR0ZXIgdXNlcm5hbWU8L2Vt
Pi48L2xpPgoJCTxsaT48ZW0+bGFuZzwvZW0+ICYjODIxMjsgbGFuZ3VhZ2UuIERlZmF1bHQ6
ICYjODIxNjtlbiYjODIxNzsuPC9saT4KCQk8bGk+PGVtPmNvdW50PC9lbT4gJiM4MjEyOyB3
aGV0aGVyIG9yIG5vdCB0aGUgZm9sbG93ZXIgY291bnQgaXMgc2hvd24uIERlZmF1bHQ6ICYj
ODIxNjsxJiM4MjE3Oy48L2xpPgoJCTxsaT48ZW0+aW5jbHVkZV9qczwvZW0+ICYjODIxMjsg
d2hldGhlciBvciBub3QgdG8gaW5jbHVkZSB0aGUgd2lkZ2V0IEphdmFTY3JpcHQuIERlZmF1
bHQ6ICYjODIxNjsxJiM4MjE3Oy48L2xpPgoJCTxsaT48ZW0+b3B0aW1pc2VfanM8L2VtPiAm
IzgyMTI7IG9wdGltaXNlIHRoZSBKYXZhU2NyaXB0IGJ5IHVzaW5nIGEgbG9jYWwgc2NyaXB0
IHJhdGhlciB0aGFuIHRoYXQgaG9zdGVkIG9uIHRoZSBUd2l0dGVyIHNpdGUuIERlZmF1bHQ6
ICYjODIxNjswJiM4MjE3Oy48L2xpPgoJCTxsaT48ZW0+Y2xhc3M8L2VtPiAmIzgyMTI7IDxz
cGFuIGNsYXNzPSJjYXBzIj5DU1M8L3NwYW4+IGNsYXNzIGF0dHJpYnV0ZSBhcHBsaWVkIHRv
IHRoZSBmb2xsb3cgYnV0dG9uLiBEZWZhdWx0OiAmIzgyMTY7dHdpdHRlci1mb2xsb3ctYnV0
dG9uJiM4MjE3Oy48L2xpPgoJPC91bD4KCgk8aDMgaWQ9ImFyY190d2l0dGVyX3R3ZWV0X3Vy
bCI+YXJjX3R3aXR0ZXJfdHdlZXRfdXJsPC9oMz4KCgk8cD5SZXR1cm5zIHRoZSA8c3BhbiBj
bGFzcz0iY2FwcyI+VVJMPC9zcGFuPiBvZiB0aGUgVHdpdHRlciBzdGF0dXMgZm9yIGFuIGFy
dGljbGUuPC9wPgoKPHByZT48Y29kZT4mbHQ7dHhwOmFyY190d2l0dGVyX3R3ZWV0X3VybCAv
Jmd0Owo8L2NvZGU+Cjxjb2RlPiZsdDt0eHA6YXJjX3R3aXR0ZXJfdHdlZXRfdXJsJmd0O0xp
bmsgdGV4dCZsdDsvdHhwOmFyY190d2l0dGVyX3R3ZWV0X3VybCZndDsKPC9jb2RlPjwvcHJl
PgoKCTxoND5BdHRyaWJ1dGVzPC9oND4KCgk8dWw+CgkJPGxpPjxlbT5pZDwvZW0+ICYjODIx
MjsgVGV4dHBhdHRlcm4gYXJ0aWNsZSBJRC4gRGVmYXVsdDogPGVtPmN1cnJlbnQgYXJ0aWNs
ZTwvZW0+LjwvbGk+CgkJPGxpPjxlbT50aXRsZTwvZW0+ICYjODIxMjsgdGl0bGUgYXR0cmli
dXRlIG9mIHRoZSBsaW5rLjwvbGk+CgkJPGxpPjxlbT5jbGFzczwvZW0+ICYjODIxMjsgPHNw
YW4gY2xhc3M9ImNhcHMiPkNTUzwvc3Bhbj4gY2xhc3MgYXR0cmlidXRlIGFwcGxpZWQgdG8g
dGhlIGxpbmsuPC9saT4KCTwvdWw+CgoJPGgzIGlkPSJhcmNfdHdpdHRlcl90aW55dXJsIj5h
cmNfdHdpdHRlcl90aW55dXJsPC9oMz4KCgk8cD5SZXR1cm5zIHRoZSBzaG9ydGVuZWQgPHNw
YW4gY2xhc3M9ImNhcHMiPlVSTDwvc3Bhbj4gb2YgdGhlIGFydGljbGUgdXNlZCBmb3IgdGhl
IFR3aXR0ZXIgdXBkYXRlLjwvcD4KCjxwcmU+PGNvZGU+Jmx0O3R4cDphcmNfdHdpdHRlcl90
aW55dXJsIC8mZ3Q7CjwvY29kZT4KPGNvZGU+Jmx0O3R4cDphcmNfdHdpdHRlcl90aW55dXJs
Jmd0O0xpbmsgdGV4dCZsdDsvdHhwOmFyY190d2l0dGVyX3Rpbnl1cmwmZ3Q7CjwvY29kZT48
L3ByZT4KCgk8aDQ+QXR0cmlidXRlczwvaDQ+CgoJPHVsPgoJCTxsaT48ZW0+aWQ8L2VtPiAm
IzgyMTI7IFRleHRwYXR0ZXJuIGFydGljbGUgSUQuIERlZmF1bHQ6IDxlbT5jdXJyZW50IGFy
dGljbGU8L2VtPi48L2xpPgoJCTxsaT48ZW0+dGl0bGU8L2VtPiAmIzgyMTI7IHRpdGxlIGF0
dHJpYnV0ZSBvZiB0aGUgbGluay48L2xpPgoJCTxsaT48ZW0+Y2xhc3M8L2VtPiAmIzgyMTI7
IDxzcGFuIGNsYXNzPSJjYXBzIj5DU1M8L3NwYW4+IGNsYXNzIGF0dHJpYnV0ZSBhcHBsaWVk
IHRvIHRoZSBsaW5rLjwvbGk+Cgk8L3VsPgoKCTxoMiBpZD0iYXJjX3R3aXR0ZXJfY2FjaGlu
ZyI+Q2FjaGluZzwvaDI+CgoJPHA+SW4gb3JkZXIgdG8gcHJldmVudCBleGNlc3NpdmUgcmVw
ZWF0aXRpdmUgY2FsbHMgdG8gdGhlIFR3aXR0ZXIgd2Vic2l0ZSBpdCBpcyByZWNvbW1lbmRl
ZCB0byBjYWNoZSByZXN1bHRzLiBUd2l0dGVyIGxpbWl0cyB0aGUgbnVtYmVyIG9mIGNhbGxz
IHRocm91Z2ggdGhlIDxzcGFuIGNsYXNzPSJjYXBzIj5BUEk8L3NwYW4+LCBhbmQgY29udGlu
dW91cyBjYWxscyB3aWxsIHJlc3VsdCBpbiBUd2l0dGVyIGNsb3NpbmcgdG8gZnVydGhlciBy
ZXF1ZXN0cy4gQnkgZGVmYXVsdCwgYXJjX3R3aXR0ZXIgY2FjaGVzIGZvciAzMCBtaW51dGUg
aW50ZXJ2YWxzLjwvcD4KCgk8cD5UaGUgZm9sbG93aW5nIGF0dHJpYnV0ZXMgYXJlIGF2YWls
YWJsZSB0byB0aGUgPGVtPmFyY190d2l0dGVyPC9lbT4gYW5kIDxlbT5hcmNfdHdpdHRlcl9z
ZWFyY2g8L2VtPiB0YWdzOi08L3A+CgoJPHVsPgoJCTxsaT48ZW0+Y2FjaGluZzwvZW0+ICYj
ODIxMjsgJiM4MjE2OzEmIzgyMTc7IHRvIGNhY2hlIGZlZWQsICYjODIxNjswJiM4MjE3OyB0
byB0dXJuIGNhY2hpbmcgb2ZmIChub3QgcmVjb21tZW5kZWQpLiBEZWZhdWx0OiAmIzgyMTY7
MSYjODIxNzsuPC9saT4KCQk8bGk+PGVtPmNhY2hlX2RpcjwvZW0+ICYjODIxMjsgYWJzb2x1
dGUgcGF0aCB0byB0aGUgY2FjaGUgZGlyZWN0b3J5IChtdXN0IGJlIHdyaXRhYmxlKS4gRGVm
YXVsdDogPGVtPmFyY190d2l0dGVyIHByZWZlcmVuY2VzPC9lbT4uPC9saT4KCQk8bGk+PGVt
PmNhY2hlX3RpbWU8L2VtPiAmIzgyMTI7IHRpbWUgaW4gbWludXRlcyB0aGF0IHRoZSBjYWNo
ZSBmaWxlcyBhcmUgc3RvcmVkIGJlZm9yZSBiZWluZyByZWZyZXNoZWQuIERlZmF1bHQ6ICYj
ODIxNjs1JiM4MjE3Oy48L2xpPgoJPC91bD4KCgk8cD5UaGUgYWRtaW4gc2lkZSBvZiB0aGlz
IHBsdWdpbiBlbmZvcmNlcyBjYWNoaW5nLCBhcGFydCBmcm9tIHdoZW4gaXQgaXMgcG9zdGlu
ZyB0byBUd2l0dGVyICg8aT5lLmcuPC9pPiB3aGVuIHBvc3Rpbmcgb3IgZGVsZXRpbmcgYW4g
dXBkYXRlKS48L3A+CgoJPGgyIGlkPSJhcmNfdHdpdHRlcl9wcmVmcyI+UHJlZmVyZW5jZXM8
L2gyPgoKCTxwPllvdSBjYW4gYWNjZXNzIHRoZSBwbHVnaW5zIGNvcmUgcHJlZmVyZW5jZXMg
ZnJvbSBlaXRoZXIgdGhlIFByZWZlcmVuY2VzIG9yIFBsdWdpbnMgdGFicyBpbiBhZG1pbi4g
U2V0dXAgeW91ciBUd2l0dGVyIGFjY291bnQgKHlvdSB3aWxsIGJlIGFza2VkIHRvIGNvbm5l
Y3QgdmlhIFR3aXR0ZXIgYW5kIHRoaXMgbmVlZHMgZG9pbmcgYmVmb3JlIHlvdSBjYW4gdXNl
IHRoZSBwbHVnaW4pIGFuZCBjaGFuZ2UgdGhlIGNhY2hlIGRpcmVjdG9yeSB1c2luZyBhcmNf
dHdpdHRlciYjODIxNztzIHByZWZlcmVuY2VzLiBXaXRob3V0IHByb3ZpZGluZyB5b3VyIGFj
Y291bnQgbG9naW4gZGV0YWlscyB0aGUgYWRtaW4gYXJlYSBmZWF0dXJlcyBvZiB0aGlzIHBs
dWdpbiB3aWxsIGJlIGluYWN0aXZlLjwvcD4KCgk8cD5Zb3UgY2FuIHNlbGVjdCB0aGUgPHNw
YW4gY2xhc3M9ImNhcHMiPlVSTDwvc3Bhbj4gc2hvcnRlbmVyIG1ldGhvZCB5b3Ugd2FudCB0
byB1c2UgdG8gbGluayBiYWNrIHRvIHlvdXIgYXJ0aWNsZSBvbiBUd2l0dGVyLiBQbGVhc2Ug
bm90ZSB0aGF0IGlmIHlvdSBzZWxlY3Qgc21kX3Nob3J0X3VybCB5b3Ugd2lsbCBuZWVkIHRv
IGhhdmUgaW5zdGFsbGVkIGFuZCBhY3RpdmF0ZWQgdGhlIDxhIGhyZWY9Imh0dHA6Ly90ZXh0
cGF0dGVybi5vcmcvcGx1Z2lucy8xMDk5L3NtZF9zaG9ydF91cmwiPjxzcGFuIGNsYXNzPSJ0
YWciPnNtZF9zaG9ydF91cmw8L3NwYW4+IHBsdWdpbjwvYT4gZGV2ZWxvcGVkIGJ5IFN0ZWYg
RGF3c29uLjwvcD4KCgk8aDIgaWQ9ImFyY190d2l0dGVyX2FydGljbGUiPlR3ZWV0aW5nIGFy
dGljbGVzPC9oMj4KCgk8cD5CeSBkZWZhdWx0IGFyY190d2l0dGVyIHdpbGwgcG9zdCBhbiB1
cGRhdGUgdG8gVHdpdHRlciBpbmNsdWRpbmcgYSBzaG9ydGVuZWQgPHNwYW4gY2xhc3M9ImNh
cHMiPlVSTDwvc3Bhbj4gdG8geW91ciBhcnRpY2xlLiBPbmx5IGxpdmUgYW5kIGFjdGl2ZSBh
cnRpY2xlcyB3aWxsIGJlIHNlbnQgdG8gVHdpdHRlciwgPGk+aS5lLjwvaT4gYXJ0aWNsZXMg
cG9zdGVkIGluIHRoZSBmdXR1cmUgb3IgYXMgc3RpY2t5IGFydGljbGVzIHdpbGwgbm90IGJl
IHNlbnQuIElmIHlvdXIgYXJ0aWNsZSBpcyBzdWNjZXNzZnVsbHkgc3VibWl0dGVkIHRvIFR3
aXR0ZXIgdGhlIHVwZGF0ZSB3aWxsIGFwcGVhciBpbiBwbGFjZSBvZiB0aGUgVHdpdHRlciBv
cHRpb24gb24gdGhlIHJpZ2h0LWhhbmQtc2lkZSBvZiB0aGUgYXJ0aWNsZSBlZGl0IHNjcmVl
bi48L3A+CgoJPHA+VHdlZXRzIGFyZSBzZW50IGluIHRoZSBmb2xsb3dpbmcgZm9ybWF0OiA8
ZW0+VHdlZXQgcHJlZml4PC9lbT4gPGVtPkFydGljbGUgdGl0bGU8L2VtPiA8ZW0+U2hvcnRl
bmVkIDxzcGFuIGNsYXNzPSJjYXBzIj5VUkw8L3NwYW4+PC9lbT4gPGVtPlR3ZWV0IHN1ZmZp
eDwvZW0+LiBZb3UgY2FuIGNoYW5nZSB0aGUgcHJlZml4IGFuZCBzdWZmaXggb24gYW4gYXJ0
aWNsZS1ieS1hcnRpY2xlIGJhc2lzIGJ5IGNoYW5naW5nIHRoZSB0d2VldCBvcHRpb25zIHVu
ZGVyICYjODIxNjtVcGRhdGUgVHdpdHRlciYjODIxNzsgb24gdGhlIGFydGljbGUgZWRpdG9y
IHNjcmVlbi4gVGhlIGRlZmF1bHQgPGVtPlR3ZWV0IHByZWZpeDwvZW0+IGNhbiBiZSBzZXQg
dW5kZXIgdGhlIDxzcGFuIGNsYXNzPSJ0YWciPmFyY190d2l0dGVyPC9zcGFuPiBwcmVmZXJl
bmNlcyBzY3JlZW4gKHRoZSBkZWZhdWx0IG9uIGluc3RhbGxhdGlvbiBpcyAmIzgyMjA7SnVz
dCBwb3N0ZWQ6JiM4MjIxOykuPC9wPgoKCTxwPlBsZWFzZSBub3RlIHRoYXQgb25jZSBhbiBh
cnRpY2xlIGhhcyBiZWVuIHR3ZWV0ZWQgdGhlIHR3ZWV0IGNhbm5vdCBiZSBlZGl0ZWQuPC9w
PgoKCTxwPklmIHlvdSB3YW50IHRvIG1vbml0b3IgaG93IG1hbnkgY2xpY2tzIHlvdSYjODIx
NztyZSBnZXR0aW5nIGZyb20geW91ciA8c3BhbiBjbGFzcz0iY2FwcyI+VFhQPC9zcGFuPiB0
d2VldHMgaW4gR29vZ2xlIEFuYWx5dGljcyBlbmFibGUgPHNwYW4gY2xhc3M9ImNhcHMiPlVU
TTwvc3Bhbj4gaW4gdGhlIHBsdWdpbiYjODIxNztzIHByZWZlcmVuY2VzLiBJdCB3aWxsIGFk
ZCA8c3BhbiBjbGFzcz0iY2FwcyI+VVRNPC9zcGFuPiBwYXJhbWV0ZXJzIHRvIHRoZSA8c3Bh
biBjbGFzcz0iY2FwcyI+VVJMPC9zcGFuPnMgdHdlZXRlZCB0aGF0IGNhbiB0aGVuIGJlIG1v
bml0b3JlZCB2aWEgdGhlIDxlbT5DYW1wYWlnbnM8L2VtPiBzZWN0aW9uIG9mIEdvb2dsZSBB
bmFseXRpY3MuPC9wPgoKCTxoMiBpZD0iYXJjX3R3aXR0ZXJfYWRtaW4iPlRoZSBUd2l0dGVy
IHRhYjwvaDI+CgoJPHA+VW5kZXIgdGhlIEV4dGVuc2lvbnMgdGFiICh0aGlzIGNhbiBiZSBj
aGFuZ2VkIGZyb20gdGhlIHBsdWdpbiYjODIxNztzIHByZWZlcmVuY2UgcGFnZSkgYSBuZXcg
VHdpdHRlciB0YWIgc2hvdWxkIGFwcGVhciBvbmNlIHlvdSBoYXZlIGNvbm5lY3RlZCB5b3Vy
IHNpdGUgdG8geW91ciBUd2l0dGVyIGFjY291bnQuIEZyb20gaGVyZSB5b3Ugd2lsbCBiZSBh
YmxlIHRvIHN1Ym1pdCBuZXcgVHdpdHRlciB1cGRhdGVzLCB2aWV3IGJhc2ljIGFjY291bnQg
c3RhdGlzdGljcywgYW5kIGNoZWNrIG91dCB5b3VyIHJlY2VudCB1cGRhdGVzIChpbmNsdWRp
bmcgdGhlIG9wdGlvbiB0byBkZWxldGUgeW91ciB0d2VldHMpLjwvcD4KCgk8aDIgaWQ9ImFy
Y190d2l0dGVyX2F1dGhvciI+QXV0aG9yPC9oMj4KCgk8cD48YSBocmVmPSJodHRwOi8vYW5k
eS1jYXJ0ZXIuY29tIj5BbmR5IENhcnRlcjwvYT4uIEZvciBvdGhlciBUZXh0cGF0dGVybiBw
bHVnaW5zIGJ5IG1lIHZpc2l0IG15IDxhIGhyZWY9Imh0dHA6Ly9hbmR5LWNhcnRlci5jb20v
dHhwIj5QbHVnaW5zIHBhZ2U8L2E+LjwvcD4KCgk8cD5Db250cmlidXRvcnM6IEFuZHkgQ2Fy
dGVyLCBQaGlsIFdhcmVoYW0gYW5kIFRvbW15IFNjaG11Y2tlci48L3A+CgoJPHA+VGhhbmtz
IHRvIDxhIGhyZWY9Imh0dHA6Ly9tYW5mcmUubmV0LyI+TWljaGFlbCBNYW5mcmU8L2E+IGZv
ciBpbnNwaXJhdGlvbiBmb3IgdGhlIGFydGljbGUgdHdlZXQgcGFydCBvZiB0aGlzIHBsdWdp
biBiYXNlZCBvbiBoaXMgPHNwYW4gY2xhc3M9InRhZyI+bWVtX3R3aXR0ZXI8L3NwYW4+IHBs
dWdpbi4gIEFkZGl0aW9uYWwgdGhhbmtzIHRvIHRoZSBncmVhdCBUZXh0cGF0dGVybiBjb21t
dW5pdHkgZm9yIGhlbHBpbmcgdG8gdGVzdCB0aGlzIHBsdWdpbiBhbmQgZm9yIHN1Z2dlc3Rp
bmcgbmV3IGZlYXR1cmVzLiBUaGUgT0F1dGggcGFydCBvZiB0aGUgcGx1Z2luIGlzIHRoYW5r
cyB0byA8YSBocmVmPSJodHRwOi8vdHdpdHRlci5jb20vYWJyYWhhbSI+QWJyYWhhbSBXaWxs
aWFtczwvYT4uPC9wPgoKIjtzOjQ6ImNvZGUiO3M6NzQyNzQ6Imdsb2JhbCAkcHJlZnMsJHR4
cGNmZywkYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXksJGFyY190d2l0dGVyX2NvbnN1bWVyU2Vj
cmV0OwoKJGFyY190d2l0dGVyID0gYXJyYXkoKTsKCiRhcmNfdHdpdHRlcl9jb25zdW1lcktl
eSA9ICduS2NYc2x3elpoQmQwa2ZLTWV0blBBJzsKJGFyY190d2l0dGVyX2NvbnN1bWVyU2Vj
cmV0ID0gJ0M2blNQQ0wzZWVIR1RCaEtDZ3dkOW9jbGN1RDBzckI4V1ZrZlhRWUM1NCc7Cgph
ZGRfcHJpdnMoJ3BsdWdpbl9wcmVmcy5hcmNfdHdpdHRlcicsJzEsMicpOwpyZWdpc3Rlcl9j
YWxsYmFjaygnYXJjX3R3aXR0ZXJfaW5zdGFsbCcsJ3BsdWdpbl9saWZlY3ljbGUuYXJjX3R3
aXR0ZXInLCAnaW5zdGFsbGVkJyk7CnJlZ2lzdGVyX2NhbGxiYWNrKCdhcmNfdHdpdHRlcl91
bmluc3RhbGwnLCdwbHVnaW5fbGlmZWN5Y2xlLmFyY190d2l0dGVyJywgJ2RlbGV0ZWQnKTsK
cmVnaXN0ZXJfY2FsbGJhY2soJ2FyY190d2l0dGVyX3ByZWZzJywncGx1Z2luX3ByZWZzLmFy
Y190d2l0dGVyJyk7CgovKgogKiBTZXR1cCBpbml0aWFsIHByZWZlcmVuY2VzIGlmIG5vdCBp
biB0aGUgdHhwX3ByZWZzIHRhYmxlLgogKi8KaWYgKCFpc3NldCgkcHJlZnNbJ2FyY190d2l0
dGVyX3VzZXInXSkpIHsKCXNldF9wcmVmKCdhcmNfdHdpdHRlcl91c2VyJywgJycsICdhcmNf
dHdpdHRlcicsIDEsICd0ZXh0X2lucHV0Jyk7Cn0KaWYgKCFpc3NldCgkcHJlZnNbJ2FyY190
d2l0dGVyX3ByZWZpeCddKSkgewoJc2V0X3ByZWYoJ2FyY190d2l0dGVyX3ByZWZpeCcsJ0p1
c3QgcG9zdGVkOicsICdhcmNfdHdpdHRlcicsIDIsICd0ZXh0X2lucHV0Jyk7Cn0KaWYgKCFp
c3NldCgkcHJlZnNbJ2FyY190d2l0dGVyX3N1ZmZpeCddKSkgewoJc2V0X3ByZWYoJ2FyY190
d2l0dGVyX3N1ZmZpeCcsJycsICdhcmNfdHdpdHRlcicsIDIsICd0ZXh0X2lucHV0Jyk7Cn0K
aWYgKCFpc3NldCgkcHJlZnNbJ2FyY190d2l0dGVyX2NhY2hlX2RpciddKSkgewoJc2V0X3By
ZWYoJ2FyY190d2l0dGVyX2NhY2hlX2RpcicsJHR4cGNmZ1sndHhwYXRoJ10uJHByZWZzWyd0
ZW1wZGlyJ10sICdhcmNfdHdpdHRlcicsIDEsICd0ZXh0X2lucHV0Jyk7Cn0KaWYgKCFpc3Nl
dCgkcHJlZnNbJ2FyY190d2l0dGVyX3R3ZWV0X2RlZmF1bHQnXSkpIHsKCXNldF9wcmVmKCdh
cmNfdHdpdHRlcl90d2VldF9kZWZhdWx0JywgMSwgJ2FyY190d2l0dGVyJywgMiwgJ3llc25v
UmFkaW8nKTsKfQppZiAoIWlzc2V0KCRwcmVmc1snYXJjX3R3aXR0ZXJfdXJsX21ldGhvZCdd
KSkgewoJc2V0X3ByZWYoJ2FyY190d2l0dGVyX3VybF9tZXRob2QnLCAnZnVsbCcsICdhcmNf
dHdpdHRlcicsIDIsICdhcmNfdHdpdHRlcl91cmxfbWV0aG9kX3NlbGVjdCcpOwp9CmlmICgh
aXNzZXQoJHByZWZzWydhcmNfc2hvcnRfdXJsJ10pKSB7CglzZXRfcHJlZignYXJjX3Nob3J0
X3VybCcsIDAsICdhcmNfdHdpdHRlcicsIDIsICd5ZXNub1JhZGlvJyk7Cn0KaWYgKCFpc3Nl
dCgkcHJlZnNbJ2FyY19zaG9ydF9zaXRlX3VybCddKSkgewoJc2V0X3ByZWYoJ2FyY19zaG9y
dF9zaXRlX3VybCcsICRwcmVmc1snc2l0ZXVybCddLCAnYXJjX3R3aXR0ZXInLCAyLCAndGV4
dF9pbnB1dCcpOwp9Ci8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBUd2l0dGVyIHRhYiBoYXMgYmVl
biBkZWZpbmVkCmlmICghaXNzZXQoJHByZWZzWydhcmNfdHdpdHRlcl90YWInXSkpIHsKICBz
ZXRfcHJlZignYXJjX3R3aXR0ZXJfdGFiJywgJ2V4dGVuc2lvbnMnLCAnYXJjX3R3aXR0ZXIn
LCAyLAoJJ2FyY190d2l0dGVyX3RhYl9zZWxlY3QnKTsKCSRwcmVmc1snYXJjX3R3aXR0ZXJf
dGFiJ10gPSAnZXh0ZW5zaW9ucyc7Cn0KaWYgKCFpc3NldCgkcHJlZnNbJ2FyY19zaG9ydF91
dG0nXSkpIHsKCXNldF9wcmVmKCdhcmNfc2hvcnRfdXRtJywgMCwgJ2FyY190d2l0dGVyJywg
MiwgJ3llc25vUmFkaW8nKTsKfQoKLy8gQ2hlY2sgaWYgYXJjX3Nob3J0X3VybCBpcyBlbmFi
bGVkCmlmICgoaXNzZXQoJHByZWZzWydhcmNfc2hvcnRfdXJsJ10pJiYkcHJlZnNbJ2FyY19z
aG9ydF91cmwnXSkKfHwgKGlzc2V0KCRwcmVmc1snYXJjX3Nob3J0X3VybF9tZXRob2QnXSkm
JiRwcmVmc1snYXJjX3R3aXR0ZXJfdXJsX21ldGhvZCddPT0nYXJjX3R3aXR0ZXInKSkgewog
IHJlZ2lzdGVyX2NhbGxiYWNrKCdhcmNfc2hvcnRfdXJsX3JlZGlyZWN0JywgJ3R4cF9kaWUn
LCA0MDQpOwp9CgppZiAoQHR4cGludGVyZmFjZSA9PSAnYWRtaW4nKSB7CglyZWdpc3Rlcl9j
YWxsYmFjaygnX2FyY190d2l0dGVyX2F1dG9fZW5hYmxlJywgJ3BsdWdpbl9saWZlY3ljbGUu
YXJjX3R3aXR0ZXInLCAnaW5zdGFsbGVkJyk7CglpZiAoIWVtcHR5KCRwcmVmc1snYXJjX3R3
aXR0ZXJfdXNlciddKQoJCSYmICFlbXB0eSgkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vzc1Rv
a2VuJ10pCgkJJiYgIWVtcHR5KCRwcmVmc1snYXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW5TZWNy
ZXQnXSkgKSB7CgoJCWlmICgkcHJlZnNbJ2FyY190d2l0dGVyX3RhYiddKSB7CgkJCWFkZF9w
cml2cygnYXJjX2FkbWluX3R3aXR0ZXInLCAnMSwyLDMsNCcpOwoJCQlyZWdpc3Rlcl90YWIo
JHByZWZzWydhcmNfdHdpdHRlcl90YWInXSwgJ2FyY19hZG1pbl90d2l0dGVyJywgJ1R3aXR0
ZXInKTsKCQkJcmVnaXN0ZXJfY2FsbGJhY2soJ2FyY19hZG1pbl90d2l0dGVyJywgJ2FyY19h
ZG1pbl90d2l0dGVyJyk7CgkJfQoKCQlyZWdpc3Rlcl9jYWxsYmFjaygnYXJjX2FydGljbGVf
dHdlZXQnLCAncGluZycpOwoJCXJlZ2lzdGVyX2NhbGxiYWNrKCdhcmNfYXJ0aWNsZV90d2Vl
dCcsICdhcnRpY2xlX3NhdmVkJyk7CgkJcmVnaXN0ZXJfY2FsbGJhY2soJ2FyY19hcnRpY2xl
X3R3ZWV0JywgJ2FydGljbGVfcG9zdGVkJyk7CgkJcmVnaXN0ZXJfY2FsbGJhY2soJ2FyY19h
cHBlbmRfdHdpdHRlcicsICdhcnRpY2xlX3VpJywgJ3N0YXR1cycpOwoJfQp9CgovKgoJUHVi
bGljLXNpZGUgZnVuY3Rpb25zCgk9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiovCgpmdW5jdGlvbiBhcmNfdHdpdHRl
cigkYXR0cykKewogIGdsb2JhbCAkcHJlZnMsJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAk
YXJjX3R3aXR0ZXJfY29uc3VtZXJTZWNyZXQ7CgogIGV4dHJhY3QobEF0dHMoYXJyYXkoCgkn
dXNlcicgICAgICA9PiAkcHJlZnNbJ2FyY190d2l0dGVyX3VzZXInXSwKCSdwYXNzd29yZCcg
ID0+ICcnLAoJJ3RpbWVsaW5lJyAgPT4gJ3VzZXInLAoJJ2xpbWl0JyAgICAgPT4gJzEwJywK
CSdmZXRjaCcgICAgID0+IDAsCgknZnVsbF91cmxzJyA9PiBmYWxzZSwKCSdyZXR3ZWV0cycg
ID0+IGZhbHNlLAoJJ3JlcGxpZXMnICAgPT4gdHJ1ZSwKCSdkYXRlZm9ybWF0Jz0+ICRwcmVm
c1snYXJjaGl2ZV9kYXRlZm9ybWF0J10sCgknY2FjaGluZycgICA9PiAnMScsCgknY2FjaGVf
ZGlyJyA9PiAkcHJlZnNbJ2FyY190d2l0dGVyX2NhY2hlX2RpciddLAoJJ2NhY2hlX3RpbWUn
PT4gJzUnLAoJJ2xhYmVsJyAgICAgPT4gJycsCgknbGFiZWx0YWcnICA9PiAnJywKCSdicmVh
aycgICAgID0+ICdsaScsCgknd3JhcHRhZycgICA9PiAnJywKCSdjbGFzcycgICAgID0+IF9f
RlVOQ1RJT05fXywKCSdjbGFzc19wb3N0ZWQnID0+IF9fRlVOQ1RJT05fXy4nLXBvc3RlZCcK
CSksJGF0dHMpKTsKCiAgJHR3aXQgPSBuZXcgYXJjX3R3aXR0ZXIoJGFyY190d2l0dGVyX2Nv
bnN1bWVyS2V5CgkJCSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0LCAkcHJlZnNbJ2Fy
Y190d2l0dGVyX2FjY2Vzc1Rva2VuJ10KCQkJLCAkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vz
c1Rva2VuU2VjcmV0J10pOwoKICBpZiAoJGNhY2hpbmcpIHsgIC8vIHR1cm4gb24gY2FjaGlu
ZywgcmVjb21tZW5kZWQgKGRlZmF1bHQpCgkkdHdpdC0+c2V0Q2FjaGluZyh0cnVlKTsKCSR0
d2l0LT5jYWNoZURpcigkY2FjaGVfZGlyKTsKCSR0d2l0LT5jYWNoZVRpbWUoJGNhY2hlX3Rp
bWUpOwogIH0gZWxzZSB7ICAvLyB0dXJuIG9mZiBjYWNoaW5nLCBub3QgcmVjb21tZW5kZWQg
b3RoZXIgdGhhbiBmb3IgdGVzdGluZwoJJHR3aXQtPnNldENhY2hpbmcoZmFsc2UpOwogIH0K
CiAgc3dpdGNoICgkdGltZWxpbmUpIHsKCWNhc2UgJ2hvbWUnOiBjYXNlICdmcmllbmRzJzoK
CSAgJHRpbWVsaW5lID0gJ2hvbWVfdGltZWxpbmUnOyBicmVhazsKCWNhc2UgJ21lbnRpb25z
JzoKCSAgJHRpbWVsaW5lID0gJ3N0YXR1c2VzL21lbnRpb25zX3RpbWVsaW5lJzsgYnJlYWs7
CgljYXNlICd1c2VyJzogZGVmYXVsdDogJHRpbWVsaW5lID0gJ3N0YXR1c2VzL3VzZXJfdGlt
ZWxpbmUnOwogIH0KCiAgLy8gQ2hlY2sgdGhhdCB0aGUgZmV0Y2ggKFR3aXR0ZXIncyBjb3Vu
dCBhdHRyaWJ1dGUpIGlzIHNldCBjb3JyZWN0bHkKICAkZmV0Y2ggPSAoISRmZXRjaCB8fCAk
ZmV0Y2g8JGxpbWl0KSA/ICRsaW1pdCA6ICRmZXRjaDsKCiAgJG91dCA9IGFycmF5KCk7CiAg
JHR3ZWV0cyA9ICR0d2l0LT5nZXQoJHRpbWVsaW5lLCBhcnJheSgKCSAgJ3NjcmVlbl9uYW1l
Jz0+JHVzZXIsCgkgICdjb3VudCc9PiRmZXRjaCwKCSAgJ2luY2x1ZGVfcnRzJz0+JHJldHdl
ZXRzLAoJICAnZXhjbHVkZV9yZXBsaWVzJz0+ISRyZXBsaWVzCgkpKTsKCiAgaWYgKCR0d2Vl
dHMpIHsKCS8vIEFwcGx5IHRoZSBkaXNwbGF5IGxpbWl0IHRvIHRoZSByZXR1cm5lZCB0d2Vl
dHMKCSR0d2VldHMgPSBhcnJheV9zbGljZSgkdHdlZXRzLCAwLCAkbGltaXQpOwoJZm9yZWFj
aCAoJHR3ZWV0cyBhcyAkdHdlZXQpIHsKCSAgJHRpbWUgPSBzdHJ0b3RpbWUoaHRtbGVudGl0
aWVzKCR0d2VldC0+Y3JlYXRlZF9hdCkpOwoJICAkZGF0ZSA9IHNhZmVfc3RyZnRpbWUoJGRh
dGVmb3JtYXQsJHRpbWUpOwoJICAkbGlua3MgPSBmYWxzZTsKCSAgaWYgKGlzc2V0KCR0d2Vl
dC0+ZW50aXRpZXMtPnVybHMpIHx8IGlzc2V0KCR0d2VldC0+ZW50aXRpZXMtPm1lZGlhKSkg
ewoJCSRsaW5rcyA9IGFycmF5KCk7CgkgIH0KCSAgaWYgKGlzc2V0KCR0d2VldC0+ZW50aXRp
ZXMtPnVybHMpKSB7CgkJZm9yZWFjaCAoJHR3ZWV0LT5lbnRpdGllcy0+dXJscyBhcyAkdXJs
KSB7CgkJCSRsaW5rc1skdXJsLT51cmxdID0gYXJyYXkoCgkJCQknZXhwYW5kZWRfdXJsJyA9
PiAkdXJsLT5leHBhbmRlZF91cmwsCgkJCQknZGlzcGxheV91cmwnID0+ICR1cmwtPmRpc3Bs
YXlfdXJsCgkJCSk7CgkJfQoJICB9CgkgIGlmIChpc3NldCgkdHdlZXQtPmVudGl0aWVzLT5t
ZWRpYSkpIHsKCQlmb3JlYWNoICgkdHdlZXQtPmVudGl0aWVzLT5tZWRpYSBhcyAkdXJsKSB7
CgkJCSRsaW5rc1skdXJsLT51cmxdID0gYXJyYXkoCgkJCQknZXhwYW5kZWRfdXJsJyA9PiAk
dXJsLT5leHBhbmRlZF91cmwsCgkJCQknZGlzcGxheV91cmwnID0+ICR1cmwtPmRpc3BsYXlf
dXJsCgkJCSk7CgkJfQoJICB9CgkgICRvdXRbXSA9IGFyY19Ud2l0dGVyOjptYWtlTGlua3Mo
aHRtbGVudGl0aWVzKCR0d2VldC0+dGV4dCwgRU5UX1FVT1RFUywnVVRGLTgnKSwgJGxpbmtz
LCAkZnVsbF91cmxzKQoJCS4nICcudGFnKGh0bWxlbnRpdGllcygkZGF0ZSksJ3NwYW4nLCcg
Y2xhc3M9IicuJGNsYXNzX3Bvc3RlZC4nIicpOwoJfQogIH0KCglyZXR1cm4gZG9MYWJlbCgk
bGFiZWwsICRsYWJlbHRhZykuZG9XcmFwKCRvdXQsICR3cmFwdGFnLCAkYnJlYWssICRjbGFz
cyk7Cgp9CgpmdW5jdGlvbiBhcmNfdHdpdHRlcl9zZWFyY2goJGF0dHMpCnsKCWdsb2JhbCAk
cHJlZnMsJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJT
ZWNyZXQ7CgoJZXh0cmFjdChsQXR0cyhhcnJheSgKCQkndXNlcicgICAgICA9PiAkcHJlZnNb
J2FyY190d2l0dGVyX3VzZXInXSwKCQknc2VhcmNoJyAgICA9PiAnJywKCQknaGFzaHRhZ3Mn
ICA9PiAnJywKCQkndXNlcicgICAgICA9PiAnJywKCQkncmVwbHknICAgICA9PiAnJywKCQkn
bWVudGlvbicgICA9PiAnJywKCQknbGltaXQnICAgICA9PiAnMTAnLAoJCSdmdWxsX3VybHMn
ID0+IGZhbHNlLAoJCSdsYW5nJyAgICAgID0+ICcnLAoJCSdkYXRlZm9ybWF0Jz0+ICRwcmVm
c1snYXJjaGl2ZV9kYXRlZm9ybWF0J10sCgkJJ2NhY2hpbmcnICAgPT4gJzEnLAoJCSdjYWNo
ZV9kaXInID0+ICRwcmVmc1snYXJjX3R3aXR0ZXJfY2FjaGVfZGlyJ10sCgkJJ2NhY2hlX3Rp
bWUnPT4gJzUnLAoJCSdsYWJlbCcgICAgID0+ICcnLAoJCSdsYWJlbHRhZycgID0+ICcnLAoJ
CSdicmVhaycgICAgID0+ICdsaScsCgkJJ3dyYXB0YWcnICAgPT4gJycsCgkJJ2NsYXNzJyAg
ICAgPT4gX19GVU5DVElPTl9fLAoJCSdjbGFzc19wb3N0ZWQnID0+IF9fRlVOQ1RJT05fXy4n
LXBvc3RlZCcsCgkJJ2NsYXNzX3VzZXInICAgPT4gX19GVU5DVElPTl9fLictdXNlcicKCSks
JGF0dHMpKTsKCgkJJHR3aXQgPSBuZXcgYXJjX3R3aXR0ZXIoJGFyY190d2l0dGVyX2NvbnN1
bWVyS2V5CgkJCSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0LCAkcHJlZnNbJ2FyY190
d2l0dGVyX2FjY2Vzc1Rva2VuJ10KCQkJLCAkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vzc1Rv
a2VuU2VjcmV0J10pOwoKCQlpZiAoJGNhY2hpbmcpIHsgIC8vIHR1cm4gb24gY2FjaGluZywg
cmVjb21tZW5kZWQgKGRlZmF1bHQpCgkJCSR0d2l0LT5zZXRDYWNoaW5nKHRydWUpOwoJCQkk
dHdpdC0+Y2FjaGVEaXIoJGNhY2hlX2Rpcik7CgkJCSR0d2l0LT5jYWNoZVRpbWUoJGNhY2hl
X3RpbWUpOwoJCX0gZWxzZSB7ICAvLyB0dXJuIG9mZiBjYWNoaW5nLCBub3QgcmVjb21tZW5k
ZWQgb3RoZXIgdGhhbiBmb3IgdGVzdGluZwoJCQkkdHdpdC0+c2V0Q2FjaGluZyhmYWxzZSk7
CgkJfQoKCQkvLyBjb25zdHJ1Y3Qgc2VhcmNoIHF1ZXJ5CgkJaWYgKCFlbXB0eSgkc2VhcmNo
KSkgewoJCQkkdGVybXMgPSBleHBsb2RlKCcsJywkc2VhcmNoKTsgJHRlcm1zID0gYXJyYXlf
bWFwKCd0cmltJywkdGVybXMpOwoJCQkkc2VhcmNoID0gaW1wbG9kZSgnICcsJHRlcm1zKTsK
CQl9CgkJaWYgKCRoYXNodGFncykgewoJCQkkaGFzaGVzID0gZXhwbG9kZSgnLCcsJGhhc2h0
YWdzKTsgJGhhc2hlcyA9IGFycmF5X21hcCgndHJpbScsJGhhc2hlcyk7CgkJCSRzZWFyY2gu
PSAoKCRzZWFyY2gpPycgJzonJykuJyMnLmltcGxvZGUoJyAjJywkaGFzaGVzKTsKCQl9CgkJ
aWYgKCRyZXBseSkgewoJCQkkc2VhcmNoLj0gKCgkc2VhcmNoKT8nICc6JycpLid0bzonLnRy
aW0oJHJlcGx5KTsKCQl9CgkJaWYgKCR1c2VyKSB7CgkJCSRzZWFyY2guPSAoKCRzZWFyY2gp
PycgJzonJykuJ2Zyb206Jy50cmltKCR1c2VyKTsKCQl9CgkJaWYgKCRtZW50aW9uKSB7CgkJ
CSRzZWFyY2guPSAoKCRzZWFyY2gpPycgJzonJykuJ0AnLnRyaW0oJG1lbnRpb24pOwoJCX0K
CgkJaWYgKGVtcHR5KCRzZWFyY2gpKSB7CgkJCXJldHVybiAnJzsKCQl9IGVsc2UgewoJCQkk
c2VhcmNoID0gdXJsZW5jb2RlKCRzZWFyY2gpOwoJCX0KCgkJJG91dCA9IGFycmF5KCk7CgkJ
JHJlc3VsdHMgPSAkdHdpdC0+Z2V0KCdzZWFyY2gvdHdlZXRzJwoJCQksIGFycmF5KCdxJz0+
JHNlYXJjaCwnY291bnQnPT4kbGltaXQsJ2xhbmcnPT4kbGFuZykpOwoKCQkkdHdlZXRzID0g
JHJlc3VsdHMtPnN0YXR1c2VzOwoJCWlmICgkdHdlZXRzKSB7CgoJCQlmb3JlYWNoICgkdHdl
ZXRzIGFzICR0d2VldCkgewoKCQkJCSR1bmFtZSA9ICR0d2VldC0+dXNlci0+c2NyZWVuX25h
bWU7CgkJCQkkbmFtZSA9ICR0d2VldC0+dXNlci0+bmFtZTsKCQkJCSR0aW1lID0gc3RydG90
aW1lKGh0bWxlbnRpdGllcygkdHdlZXQtPmNyZWF0ZWRfYXQpKTsKCQkJCSRkYXRlID0gc2Fm
ZV9zdHJmdGltZSgkZGF0ZWZvcm1hdCwkdGltZSk7CgkJCQkkdGV4dCA9ICR0d2VldC0+dGV4
dDsKCgkJCQkkbGlua3MgPSBmYWxzZTsKCQkJCWlmIChpc3NldCgkdHdlZXQtPmVudGl0aWVz
LT51cmxzKSkgewoJCQkJCSRsaW5rcyA9IGFycmF5KCk7CgkJCQkJZm9yZWFjaCAoJHR3ZWV0
LT5lbnRpdGllcy0+dXJscyBhcyAkdXJsKSB7CgkJCQkJCSRsaW5rc1skdXJsLT51cmxdID0g
YXJyYXkoCgkJCQkJCQknZXhwYW5kZWRfdXJsJyA9PiAkdXJsLT5leHBhbmRlZF91cmwsCgkJ
CQkJCQknZGlzcGxheV91cmwnID0+ICR1cmwtPmRpc3BsYXlfdXJsCgkJCQkJCSk7CgkJCQkJ
fQoJCQkJfQoKCQkJCSRvdXRbXSA9IHRhZyhocmVmKGh0bWxlbnRpdGllcygkdW5hbWUpLCdo
dHRwOi8vdHdpdHRlci5jb20vJyAuICR0d2VldC0+dXNlci0+c2NyZWVuX25hbWUsCgkJCQkJ
JyB0aXRsZT0iJy5odG1sZW50aXRpZXMoJG5hbWUpLiciJykuJzogJywnc3BhbicKCQkJCQkJ
LCcgY2xhc3M9IicuJGNsYXNzX3VzZXIuJyInKQoJCQkJCS5hcmNfVHdpdHRlcjo6bWFrZUxp
bmtzKGh0bWxlbnRpdGllcygkdGV4dCwgRU5UX1FVT1RFUywnVVRGLTgnKSwgJGxpbmtzLCAk
ZnVsbF91cmxzKQoJCQkJCS4nICcudGFnKGh0bWxlbnRpdGllcygkZGF0ZSksJ3NwYW4nCgkJ
CQkJCSwnIGNsYXNzPSInLiRjbGFzc19wb3N0ZWQuJyInKTsKCgkJCX0KCgkJCXJldHVybiBk
b0xhYmVsKCRsYWJlbCwgJGxhYmVsdGFnKS5kb1dyYXAoJG91dCwgJHdyYXB0YWcsICRicmVh
aywgJGNsYXNzKTsKCQl9Cgp9CgpmdW5jdGlvbiBhcmNfdHdpdHRlcl90d2VldCgkYXR0cykg
ewoJZ2xvYmFsICR0aGlzYXJ0aWNsZTsKCglleHRyYWN0KGxBdHRzKGFycmF5KAoJICAnaWQn
ICAgICAgICA9PiAkdGhpc2FydGljbGVbJ3RoaXNpZCddLAoJICAnaW5jbHVkZV91cmwnICAg
PT4gdHJ1ZQoJKSwkYXR0cykpOwoKCWlmICgkaWQpIHsKCSAgLy8gRmV0Y2ggYXJjX3R3aXR0
ZXIgc3R1ZmYgdG8gYnVpbGQgdHdlZXQgZnJvbQoJICAkdHdlZXQgPSAoJGluY2x1ZGVfdXJs
KSA/IHNhZmVfcm93KCJ0d2VldCIsICdhcmNfdHdpdHRlcicsICJhcnRpY2xlX2lkPXskaWR9
IikKCQk6IHNhZmVfcm93KCJSRVBMQUNFKHR3ZWV0LENPTkNBVCgnICcsdGlueXVybCksJycp
IEFTIHR3ZWV0IgoJCSAgLCAnYXJjX3R3aXR0ZXInLCAiYXJ0aWNsZV9pZD17JGlkfSIpOwoJ
fQoKCWlmICgkdHdlZXRbJ3R3ZWV0J10pIHsKCSAgcmV0dXJuIGFyY19Ud2l0dGVyOjptYWtl
TGlua3MoCgkJaHRtbGVudGl0aWVzKCR0d2VldFsndHdlZXQnXSwgRU5UX1FVT1RFUywnVVRG
LTgnKSk7Cgl9Cn0KCmZ1bmN0aW9uIGFyY190d2l0dGVyX3R3ZWV0X3VybCgkYXR0cywgJHRo
aW5nPW51bGwpIHsKCWdsb2JhbCAkdGhpc2FydGljbGUsJHByZWZzOwoKCWV4dHJhY3QobEF0
dHMoYXJyYXkoCgkgICdpZCcgICAgICA9PiAkdGhpc2FydGljbGVbJ3RoaXNpZCddLAoJICAn
dGl0bGUnICAgPT4gJycsCgkgICdjbGFzcycgICA9PiAnJwoJKSwkYXR0cykpOwoKCWlmICgk
aWQpIHsKCSAgLy8gRmV0Y2ggYXJjX3R3aXR0ZXIgc3R1ZmYgdG8gYnVpbGQgdHdlZXQgZnJv
bQoJICAkdHdlZXQgPSBzYWZlX3JvdygidHdlZXRfaWQiCgkJLCAnYXJjX3R3aXR0ZXInLCAi
YXJ0aWNsZV9pZD17JGlkfSIpOwoJfQoKCWlmICgkdHdlZXRbJ3R3ZWV0X2lkJ10pIHsKCSAg
JHVybCA9ICJodHRwOi8vdHdpdHRlci5jb20vIi4kcHJlZnNbJ2FyY190d2l0dGVyX3VzZXIn
XS4iL3N0YXR1cy8iLiR0d2VldFsndHdlZXRfaWQnXTsKCSAgaWYgKCR0aGluZz09PW51bGwp
IHsKCQlyZXR1cm4gJHVybDsKCSAgfQoJICByZXR1cm4gaHJlZihwYXJzZSgkdGhpbmcpLCAk
dXJsLAoJCSgkdGl0bGUgPyAnIHRpdGxlPSInLiR0aXRsZS4nIicgOiAnJykKCQkuKCRjbGFz
cyA/ICcgY2xhc3M9IicuJGNsYXNzLiciJyA6ICcnKSk7Cgl9Cn0KCmZ1bmN0aW9uIGFyY190
d2l0dGVyX3Rpbnl1cmwoJGF0dHMsICR0aGluZz1udWxsKSB7CglnbG9iYWwgJHRoaXNhcnRp
Y2xlOwoKCWV4dHJhY3QobEF0dHMoYXJyYXkoCgkgICdpZCcgICAgICA9PiAkdGhpc2FydGlj
bGVbJ3RoaXNpZCddLAoJICAndGl0bGUnICAgPT4gJycsCgkgICdjbGFzcycgICA9PiAnJwoJ
KSwkYXR0cykpOwoKCWlmICgkaWQpIHsKCSAgLy8gRmV0Y2ggYXJjX3R3aXR0ZXIgc3R1ZmYg
dG8gYnVpbGQgdHdlZXQgZnJvbQoJICAkdHdlZXQgPSBzYWZlX3JvdygidGlueXVybCIKCQks
ICdhcmNfdHdpdHRlcicsICJhcnRpY2xlX2lkPXskaWR9Iik7Cgl9CgoJaWYgKCR0d2VldFsn
dGlueXVybCddKSB7CgkgIGlmICgkdGhpbmc9PT1udWxsKSB7CgkJcmV0dXJuICR0d2VldFsn
dGlueXVybCddOwoJICB9CgoJICByZXR1cm4gaHJlZihwYXJzZSgkdGhpbmcpLCAkdHdlZXRb
J3Rpbnl1cmwnXSwKCQkoJHRpdGxlID8gJyB0aXRsZT0iJy4kdGl0bGUuJyInIDogJycpCgkJ
LigkY2xhc3MgPyAnIGNsYXNzPSInLiRjbGFzcy4nIicgOiAnJykpOwoJfQp9CgovKgogKiBQ
dWJsaWMgdGFnIGZvciBvdXRwdXR0aW5nIHdpZGdldCBKUwogKi8KZnVuY3Rpb24gYXJjX3R3
aXR0ZXJfd2lkZ2V0X2pzKCRhdHRzKQp7CiAgZXh0cmFjdChsQXR0cyhhcnJheSgKCQknb3B0
aW1pc2UnID0+IGZhbHNlCgkpLCRhdHRzKSk7CgogIHJldHVybiBfYXJjX3R3aXR0ZXJfd2lk
Z2V0X2pzKCRvcHRpbWlzZSk7Cn0KCmZ1bmN0aW9uIF9hcmNfdHdpdHRlcl93aWRnZXRfanMo
JG9wdGltaXNlPXRydWUpCnsKICBnbG9iYWwgJGFyY190d2l0dGVyOwoKICAvLyBDaGVjayBp
ZiB3aWRnZXQgSlMgaGFzIGFscmVhZHkgYmVlbiBvdXRwdXQKICBpZiAoJGFyY190d2l0dGVy
Wyd3aWRnZXRfanMnXSkgcmV0dXJuOwoKICBpZiAoJG9wdGltaXNlPT1mYWxzZSkgewoJcmV0
dXJuICc8c2NyaXB0IHNyYz0iaHR0cDovL3BsYXRmb3JtLnR3aXR0ZXIuY29tL3dpZGdldHMu
anMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+JzsKICB9CgogICRqcyA9IDw8
PEpTCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KKGZ1bmN0aW9uKCkgewogIGlm
ICh3aW5kb3cuX190d2l0dGVySW50ZW50SGFuZGxlcikgcmV0dXJuOwogIHZhciBpbnRlbnRS
ZWdleCA9IC90d2l0dGVyXC5jb20oXDpcZHsyLDR9KT9cL2ludGVudFwvKFx3KykvLAoJICB3
aW5kb3dPcHRpb25zID0gJ3Njcm9sbGJhcnM9eWVzLHJlc2l6YWJsZT15ZXMsdG9vbGJhcj1u
byxsb2NhdGlvbj15ZXMnLAoJICB3aWR0aCA9IDU1MCwKCSAgaGVpZ2h0ID0gNDIwLAoJICB3
aW5IZWlnaHQgPSBzY3JlZW4uaGVpZ2h0LAoJICB3aW5XaWR0aCA9IHNjcmVlbi53aWR0aDsK
CiAgZnVuY3Rpb24gaGFuZGxlSW50ZW50KGUpIHsKCWUgPSBlIHx8IHdpbmRvdy5ldmVudDsK
CXZhciB0YXJnZXQgPSBlLnRhcmdldCB8fCBlLnNyY0VsZW1lbnQsCgkJbSwgbGVmdCwgdG9w
OwoKCXdoaWxlICh0YXJnZXQgJiYgdGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09
ICdhJykgewoJICB0YXJnZXQgPSB0YXJnZXQucGFyZW50Tm9kZTsKCX0KCglpZiAodGFyZ2V0
ICYmIHRhcmdldC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnYScgJiYgdGFyZ2V0Lmhy
ZWYpIHsKCSAgbSA9IHRhcmdldC5ocmVmLm1hdGNoKGludGVudFJlZ2V4KTsKCSAgaWYgKG0p
IHsKCQlsZWZ0ID0gTWF0aC5yb3VuZCgod2luV2lkdGggLyAyKSAtICh3aWR0aCAvIDIpKTsK
CQl0b3AgPSAwOwoKCQlpZiAod2luSGVpZ2h0ID4gaGVpZ2h0KSB7CgkJICB0b3AgPSBNYXRo
LnJvdW5kKCh3aW5IZWlnaHQgLyAyKSAtIChoZWlnaHQgLyAyKSk7CgkJfQoKCQl3aW5kb3cu
b3Blbih0YXJnZXQuaHJlZiwgJ2ludGVudCcsIHdpbmRvd09wdGlvbnMgKyAnLHdpZHRoPScg
KyB3aWR0aCArCgkJCQkJCQkJCQkgICAnLGhlaWdodD0nICsgaGVpZ2h0ICsgJyxsZWZ0PScg
KyBsZWZ0ICsgJyx0b3A9JyArIHRvcCk7CgkJZS5yZXR1cm5WYWx1ZSA9IGZhbHNlOwoJCWUu
cHJldmVudERlZmF1bHQgJiYgZS5wcmV2ZW50RGVmYXVsdCgpOwoJICB9Cgl9CiAgfQoKICBp
ZiAoZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcikgewoJZG9jdW1lbnQuYWRkRXZlbnRMaXN0
ZW5lcignY2xpY2snLCBoYW5kbGVJbnRlbnQsIGZhbHNlKTsKICB9IGVsc2UgaWYgKGRvY3Vt
ZW50LmF0dGFjaEV2ZW50KSB7Cglkb2N1bWVudC5hdHRhY2hFdmVudCgnb25jbGljaycsIGhh
bmRsZUludGVudCk7CiAgfQogIHdpbmRvdy5fX3R3aXR0ZXJJbnRlbnRIYW5kbGVyID0gdHJ1
ZTsKfSgpKTsKPC9zY3JpcHQ+CkpTOwogICRhcmNfdHdpdHRlclsnd2lkZ2V0X2pzJ10gPSB0
cnVlOwogIHJldHVybiAkanM7Cn0KCi8vIERlcHJlY2F0ZWQgYXJjX3R3aXR0ZXJfcmV0d2Vl
dCB0YWcsIHVzZSBhcmNfdHdpdHRlcl90d2VldF9idXR0b24gaW5zdGVhZApmdW5jdGlvbiBh
cmNfdHdpdHRlcl9yZXR3ZWV0KCRhdHRzLCAkdGhpbmc9bnVsbCkKewogIHJldHVybiBhcmNf
dHdpdHRlcl90d2VldF9idXR0b24oJGF0dHMsICR0aGluZz1udWxsKTsKfQpmdW5jdGlvbiBh
cmNfdHdpdHRlcl90d2VldF9idXR0b24oJGF0dHMsICR0aGluZz1udWxsKQp7CglnbG9iYWwg
JHByZWZzLCRhcmNfdHdpdHRlcl9jb25zdW1lcktleSwgJGFyY190d2l0dGVyX2NvbnN1bWVy
U2VjcmV0OwoJZ2xvYmFsICR0aGlzYXJ0aWNsZTsKCglleHRyYWN0KGxBdHRzKGFycmF5KAoJ
CSd1c2VyJyAgICAgICAgPT4gJHByZWZzWydhcmNfdHdpdHRlcl91c2VyJ10sIC8vIHZpYSB1
c2VyIGFjY291bnQKCQkndXJsJyAgICAgICAgID0+ICcnLAoJCSd0ZXh0JyAgICAgICAgPT4g
JycsCgkJJ2ZvbGxvdzEnICAgICA9PiAnJywKCQknZm9sbG93MicgICAgID0+ICcnLAoJCSds
YW5nJyAgICAgICAgPT4gJycsCgkJJ2NvdW50JyAgICAgICA9PiAnaG9yaXpvbnRhbCcsCgkJ
J2luY2x1ZGVfanMnICA9PiB0cnVlLAoJCSdvcHRpbWlzZV9qcycgPT4gZmFsc2UsCgkJJ3dy
YXB0YWcnICAgICA9PiAnJywKCQknY2xhc3MnICAgICAgID0+ICd0d2l0dGVyLXNoYXJlLWJ1
dHRvbicKCSksJGF0dHMpKTsKCgkkcSA9ICcnOyAvLyBxdWVyeSBzdHJpbmcKCglpZiAoJGlk
PSR0aGlzYXJ0aWNsZVsndGhpc2lkJ10pIHsKCSAgLy8gRmV0Y2ggYXJjX3R3aXR0ZXIgc3R1
ZmYgdG8gYnVpbGQgdHdlZXQgZnJvbQoJICAkcm93ID0gc2FmZV9yb3coIlJFUExBQ0UodHdl
ZXQsQ09OQ0FUKCcgJyx0aW55dXJsKSwnJykgQVMgdHdlZXQsdGlueXVybCIKCQksICdhcmNf
dHdpdHRlcicsICJhcnRpY2xlX2lkPXskaWR9Iik7CgoJICBpZiAoJHVybD09JycpIHsKCQkk
dXJsID0gKCR1cmwpID8gJHVybCA6IHBlcm1saW5rdXJsKCR0aGlzYXJ0aWNsZSk7CgkJJHEg
PSAndXJsPScudXJsZW5jb2RlKCR1cmwpOwoJICB9CgkgIGlmICgkdGV4dD09JycpIHsKCQkk
dGV4dCA9ICgkcm93Wyd0d2VldCddKSA/ICRyb3dbJ3R3ZWV0J10gOiAkdGhpc2FydGljbGVb
J3RpdGxlJ107CgkgIH0KCSAgJHEgLj0gKCRxID8gJyZhbXA7JyA6ICcnKS4ndGV4dD0nLnVy
bGVuY29kZSgkdGV4dCk7Cgl9CglpZiAoJHVzZXIpIHsKCSAgJHEgLj0gKCRxID8gJyZhbXA7
JyA6ICcnKS4ndmlhPScudXJsZW5jb2RlKCR1c2VyKTsKCX0KCWlmICgkZm9sbG93MSYmJGZv
bGxvdzIpIHsKCSAgJHEgLj0gKCRxID8gJyZhbXA7JyA6ICcnKS4ncmVsYXRlZD0nLnVybGVu
Y29kZSgkZm9sbG93MS4nOicuJGZvbGxvdzIpOwoJfSBlbHNlaWYgKCRmb2xsb3cxfHwkZm9s
bG93MikgewoJICAkcSAuPSAoJHEgPyAnJmFtcDsnIDogJycpLidyZWxhdGVkPScudXJsZW5j
b2RlKCRmb2xsb3cxLiRmb2xsb3cyKTsKCX0KCglzd2l0Y2ggKCRsYW5nKSB7CgkgIGNhc2Ug
J2ZyJzogYnJlYWs7IGNhc2UgJ2RlJzogYnJlYWs7IGNhc2UgJ2VzJzogYnJlYWs7IGNhc2Ug
J2pwJzogYnJlYWs7CgkgIGRlZmF1bHQ6CgkJJGxhbmcgPSAnZW4nOwoJfQoJJHEgLj0gKCRx
ID8gJyZhbXA7JyA6ICcnKS4nbGFuZz0nLnVybGVuY29kZSgkbGFuZyk7CgoJc3dpdGNoICgk
Y291bnQpIHsKCSAgY2FzZSAnbm9uZSc6IGJyZWFrOyBjYXNlICd2ZXJ0aWNhbCc6IGJyZWFr
OwoJICBkZWZhdWx0OgoJCSRjb3VudCA9ICdob3Jpem9udGFsJzsKCX0KCSRxIC49ICgkcSA/
ICcmYW1wOycgOiAnJykuJ2NvdW50PScudXJsZW5jb2RlKCRjb3VudCk7CgoJJHRoaW5nID0g
KCR0aGluZz09PW51bGwpID8gJ1R3ZWV0JyA6IHBhcnNlKCR0aGluZyk7CgoJJGh0bWwgPSBo
cmVmKCR0aGluZywnaHR0cDovL3R3aXR0ZXIuY29tL3NoYXJlPycuJHEKCSAgLCAnIGNsYXNz
PSInLiRjbGFzcy4nIicpOwoKCSRqcyA9ICgkaW5jbHVkZV9qcykgPyBfYXJjX3R3aXR0ZXJf
d2lkZ2V0X2pzKCRvcHRpbWlzZV9qcz90cnVlOmZhbHNlKSA6ICcnOwoKCXJldHVybiAkanMu
JGh0bWw7Cn0KCi8qCiAqIFR3aXR0ZXIgRm9sbG93IGJ1dHRvbgogKi8KZnVuY3Rpb24gYXJj
X3R3aXR0ZXJfZm9sbG93X2J1dHRvbigkYXR0cywgJHRoaW5nPW51bGwpCnsKCWdsb2JhbCAk
cHJlZnMsJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJT
ZWNyZXQ7CglnbG9iYWwgJHRoaXNhcnRpY2xlOwoKCWV4dHJhY3QobEF0dHMoYXJyYXkoCgkJ
J3VzZXInICAgICAgICA9PiAkcHJlZnNbJ2FyY190d2l0dGVyX3VzZXInXSwgLy8gdmlhIHVz
ZXIgYWNjb3VudAoJCSdsYW5nJyAgICAgICAgPT4gJycsCgkJJ2NvdW50JyAgICAgICA9PiB0
cnVlLAoJCSdpbmNsdWRlX2pzJyAgPT4gdHJ1ZSwKCQknb3B0aW1pc2VfanMnID0+IGZhbHNl
LAoJCSdjbGFzcycgICAgICAgPT4gJ3R3aXR0ZXItZm9sbG93LWJ1dHRvbicKCSksJGF0dHMp
KTsKCgkkYXR0cyA9ICcnOyAvLyBkYXRhIGF0dHJpYnV0ZXMKCglzd2l0Y2ggKCRsYW5nKSB7
CgkgIGNhc2UgJ2ZyJzogYnJlYWs7IGNhc2UgJ2RlJzogYnJlYWs7IGNhc2UgJ2VzJzogYnJl
YWs7IGNhc2UgJ2pwJzogYnJlYWs7CgkgIGRlZmF1bHQ6CgkJJGxhbmcgPSAnZW4nOwoJfQoJ
JGF0dHMgLj0gJyBkYXRhLWxhbmc9IicudXJsZW5jb2RlKCRsYW5nKS4nIic7CgoJJGF0dHMg
Lj0gJyBkYXRhLXNob3ctY291bnQ9IicuKCRjb3VudD8ndHJ1ZSc6J2ZhbHNlJykuJyInOwoK
CSR0aGluZyA9ICgkdGhpbmc9PT1udWxsKSA/ICdGb2xsb3cgQCcuJHVzZXIgOiBwYXJzZSgk
dGhpbmcpOwoKCSRodG1sID0gaHJlZigkdGhpbmcsJ2h0dHA6Ly90d2l0dGVyLmNvbS8nLnVy
bGVuY29kZSgkdXNlcikKCSAgLCAnIGNsYXNzPSInLiRjbGFzcy4nIicuJGF0dHMpOwoKCSRq
cyA9ICgkaW5jbHVkZV9qcykgPyBfYXJjX3R3aXR0ZXJfd2lkZ2V0X2pzKCRvcHRpbWlzZV9q
cz90cnVlOmZhbHNlKSA6ICcnOwoKCXJldHVybiAkanMuJGh0bWw7Cn0KCi8qCglBZG1pbi1z
aWRlIGZ1bmN0aW9ucwoJPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQoqLwoKLy8gSW5zdGFsbGF0aW9uIGZ1bmN0aW9u
IC0gYnVpbGRzIE15U1FMIHRhYmxlCmZ1bmN0aW9uIGFyY190d2l0dGVyX2luc3RhbGwoKQp7
CglnbG9iYWwgJERCOwoJLy8gRm9yIGZpcnN0IGluc3RhbGwsIGNyZWF0ZSB0YWJsZSBmb3Ig
dHdlZXRzCgkkc3FsID0gIkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTICIuUEZYLiJhcmNf
dHdpdHRlciAiOwoJJHNxbC49ICIoYXJjX3R3aXR0ZXJpZCBJTlRFR0VSIEFVVE9fSU5DUkVN
RU5UIFBSSU1BUlkgS0VZLAoJCWFydGljbGVfaWQgSU5URUdFUigxMSksCgkJdHdlZXRfaWQg
VkFSQ0hBUigxMDApLAoJCXR3ZWV0IFZBUkNIQVIoMjgwKSwKCQl0aW55dXJsIFZBUkNIQVIo
MzApKTsiOwoKCWlmICghc2FmZV9xdWVyeSgkc3FsKSkgewoJCXJldHVybiAnRXJyb3IgLSB1
bmFibGUgdG8gY3JlYXRlIGFyY190d2l0dGVyIHRhYmxlJzsKCX0KCgkvLyBDaGVjayBpZiB3
ZSBuZWVkIHRvIHVwZGF0ZSBhbiBleGlzdGluZyB0YWJsZSB0byB1c2UgdGhlIGxhcmdlciBz
dHJpbmcgbGVuZ3RoLgoJJHNxbCA9ICdTRUxFQ1QgY29sdW1uX3R5cGUgRlJPTSBpbmZvcm1h
dGlvbl9zY2hlbWEuY29sdW1ucyBXSEVSRSBjb2x1bW5fbmFtZSA9IFwndHdlZXRcJyBBTkQg
dGFibGVfbmFtZSA9IFwnJyAuIHNhZmVfcGZ4KCdhcmNfdHdpdHRlcicpIC4gJ1wnJzsKCSRz
cWwgLj0gJyBBTkQgdGFibGVfc2NoZW1hID0gXCcnIC4gJERCLT5kYiAuICdcJyc7CgkkcmVz
dWx0ID0gbmV4dFJvdyhzYWZlX3F1ZXJ5KCRzcWwpKTsKCWlmICghIGVtcHR5KCRyZXN1bHRb
J2NvbHVtbl90eXBlJ10pICYmIHN0cnBvcygkcmVzdWx0Wydjb2x1bW5fdHlwZSddLCAndmFy
Y2hhcigxNDApJykgIT09IGZhbHNlKSB7CgkJc2FmZV9hbHRlcignYXJjX3R3aXR0ZXInLCAn
Q0hBTkdFIHR3ZWV0IHR3ZWV0IFZBUkNIQVIoMjgwKScpOwoJfQoKfQoKLy8gVW5pbnN0YWxs
IGZ1bmN0aW9uIC0gZGVsZXRlcyBNeVNRTCB0YWJsZSBhbmQgcmVsYXRlZCBwcmVmZXJlbmNl
cwpmdW5jdGlvbiBhcmNfdHdpdHRlcl91bmluc3RhbGwoKQp7CgoJJHNxbCA9ICJEUk9QIFRB
QkxFIElGIEVYSVNUUyAiLlBGWC4iYXJjX3R3aXR0ZXI7IjsKCWlmICghc2FmZV9xdWVyeSgk
c3FsKSkgewoJCXJldHVybiAnRXJyb3IgLSB1bmFibGUgdG8gZGVsZXRlIGFyY190d2l0dGVy
IHRhYmxlJzsKCX0KCgkkc3FsID0gIkRFTEVURSBGUk9NICAiLlBGWC4idHhwX3ByZWZzIFdI
RVJFIGV2ZW50PSdhcmNfdHdpdHRlcic7IjsKCWlmICghc2FmZV9xdWVyeSgkc3FsKSkgewoJ
CXJldHVybiAnRXJyb3IgLSB1bmFibGUgdG8gZGVsZXRlIGFyY190d2l0dGVyIHByZWZlcmVu
Y2VzJzsKCX0KCn0KZnVuY3Rpb24gYXJjX3R3aXR0ZXJfdXJsX21ldGhvZF9zZWxlY3QoJG5h
bWUsICR2YWwpCnsKCSRtZXRob2RzID0gYXJyYXkoCgkJJ2Z1bGwnID0+ICdEbyBub3Qgc2hv
cnRlbicsCgkJJ3Rpbnl1cmwnID0+ICdUaW55dXJsJywKCQknaXNnZCcgPT4gJ0lzLmdkJywK
CQknYXJjX3R3aXR0ZXInID0+ICdUWFAgVHdlZXQnLAoJCSdzbWQnID0+ICdzbWRfc2hvcnRf
dXJsJwoJKTsKCXJldHVybiBzZWxlY3RJbnB1dCgkbmFtZSwgJG1ldGhvZHMsICR2YWwsICcn
LCAnJywgJG5hbWUpOwp9CmZ1bmN0aW9uIGFyY190d2l0dGVyX3RhYl9zZWxlY3QoJG5hbWUs
ICR2YWwpCnsKCSR0YWJzID0gYXJyYXkoJ2NvbnRlbnQnID0+ICdDb250ZW50JywKCQknZXh0
ZW5zaW9ucycgPT4gJ0V4dGVuc2lvbnMnLAoJCScnID0+ICdIaWRkZW4nKTsKCXJldHVybiBz
ZWxlY3RJbnB1dCgkbmFtZSwgJHRhYnMsICR2YWwsICcnLCAnJywgJG5hbWUpOwp9Ci8vIFBy
b3ZpZGUgaW50ZXJmYWNlIGZvciBzZXR0aW5nIHByZWZlcmVuY2VzCmZ1bmN0aW9uIGFyY190
d2l0dGVyX3ByZWZzKCRldmVudCwkc3RlcCkKewoKCWdsb2JhbCAkcHJlZnMsICRhcmNfdHdp
dHRlcl9jb25zdW1lcktleSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0OwoKCSR1c2Vy
ID0gJHByZWZzWydhcmNfdHdpdHRlcl91c2VyJ107CgkkcHJlZml4ID0gJHByZWZzWydhcmNf
dHdpdHRlcl9wcmVmaXgnXTsKCSRzdWZmaXggPSAkcHJlZnNbJ2FyY190d2l0dGVyX3N1ZmZp
eCddOwoJJHR3ZWV0X2RlZmF1bHQgPSAkcHJlZnNbJ2FyY190d2l0dGVyX3R3ZWV0X2RlZmF1
bHQnXTsKCSR1cmxfbWV0aG9kID0gJHByZWZzWydhcmNfdHdpdHRlcl91cmxfbWV0aG9kJ107
Cgkkc2hvcnRfdXJsID0gJHByZWZzWydhcmNfc2hvcnRfdXJsJ107Cgkkc2hvcnRfc2l0ZV91
cmwgPSAkcHJlZnNbJ2FyY19zaG9ydF9zaXRlX3VybCddOwoJJGNhY2hlX2RpciA9ICRwcmVm
c1snYXJjX3R3aXR0ZXJfY2FjaGVfZGlyJ107CgkkdGFiID0gJHByZWZzWydhcmNfdHdpdHRl
cl90YWInXTsKCSR1dG0gPSAhZW1wdHkoJHByZWZzWydhcmNfdHdpdHRlcl91dG0nXSkgPyAk
cHJlZnNbJ2FyY190d2l0dGVyX3V0bSddIDogMDsKCglzd2l0Y2ggKCRzdGVwKSB7CgkJY2Fz
ZSAncHJlZnNfc2F2ZSc6IHBhZ2V0b3AoJ1RYUCBUd2VldCcsICdQcmVmZXJlbmNlcyBzYXZl
ZCcpOyBicmVhazsKCQljYXNlICdyZWdpc3Rlcic6IHBhZ2V0b3AoJ1RYUCBUd2VldCcsJ0Nv
bm5lY3QgdG8gVHdpdHRlcicpOyBicmVhazsKCQljYXNlICd2YWxpZGF0ZSc6CgkJZGVmYXVs
dDogcGFnZXRvcCgnVFhQIFR3ZWV0Jyk7Cgl9CgoJJGh0bWwgPSAnJzsKCglpZiAoJHN0ZXA9
PSdyZWdpc3RlcicpIHsgLy8gT0F1dGggcmVnaXN0cmF0aW9uIHByb2Nlc3MKCgkJJHR3aXQg
PSBuZXcgYXJjX3R3aXR0ZXIoJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAkYXJjX3R3aXR0
ZXJfY29uc3VtZXJTZWNyZXQpOwoKCQkvLyBCdWlsZCBhIGNhbGxiYWNrIFVSTCBmb3IgVHdp
dHRlciB0byByZXR1cm4gdG8gdGhlIG5leHQgc3RhZ2UKCQkkY2FsbGJhY2tVUkwgPSAkdHdp
dC0+Y2FsbGJhY2tVUkwoJGV2ZW50LCd2YWxpZGF0ZScpOwoKCQkkcmVxdWVzdCA9ICR0d2l0
LT5nZXRSZXF1ZXN0VG9rZW4oJGNhbGxiYWNrVVJMKTsKCQkkcmVxdWVzdF90b2tlbiA9ICRy
ZXF1ZXN0WyJvYXV0aF90b2tlbiJdOwoJCSRyZXF1ZXN0X3Rva2VuX3NlY3JldCA9ICRyZXF1
ZXN0WyJvYXV0aF90b2tlbl9zZWNyZXQiXTsKCgkJc2V0X3ByZWYoJ2FyY190d2l0dGVyX3Jl
cXVlc3RUb2tlbicsJHJlcXVlc3RfdG9rZW4sICdhcmNfdHdpdHRlcicsMik7CgkJc2V0X3By
ZWYoJ2FyY190d2l0dGVyX3JlcXVlc3RUb2tlblNlY3JldCcsJHJlcXVlc3RfdG9rZW5fc2Vj
cmV0LCAnYXJjX3R3aXR0ZXInLDIpOwoKCSRodG1sID0gIjxkaXYgY2xhc3M9J3RleHQtY29s
dW1uJz4iCgkgIC4iPHA+Ii5ocmVmKCdTaWduLWluIHRvIFR3aXR0ZXInLCAkdHdpdC0+Z2V0
QXV0aG9yaXplVVJMKCRyZXF1ZXN0KSkuIiBhbmQgZm9sbG93IHRoZSBpbnN0cnVjdGlvbnMg
dG8gYWxsb3cgVFhQIFR3ZWV0IHRvIHVzZSB5b3VyIGFjY291bnQuIElmIHlvdSBhcmUgYWxy
ZWFkeSBzaWduZWQgaW4gdG8gVHdpdHRlciB0aGVuIHRoYXQgYWNjb3VudCB3aWxsIGJlIGFz
c29jaWF0ZWQgd2l0aCBUWFAgVHdlZXQgc28geW91IG1heSBuZWVkIHRvIHNpZ24gb3V0IGZp
cnN0IGlmIHlvdSB3YW50IHRvIHVzZSBhIGRpZmZlcmVudCBhY2NvdW50LjwvcD4iCgkgIC4i
PC9kaXY+IjsKCgl9IGVsc2VpZiAoJHN0ZXA9PSd2YWxpZGF0ZScpIHsKCQkkdHdpdCA9IG5l
dyBhcmNfdHdpdHRlcigkYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXkKCQkJLCAkYXJjX3R3aXR0
ZXJfY29uc3VtZXJTZWNyZXQsICRwcmVmc1snYXJjX3R3aXR0ZXJfcmVxdWVzdFRva2VuJ10K
CQkJLCAkcHJlZnNbJ2FyY190d2l0dGVyX3JlcXVlc3RUb2tlblNlY3JldCddKTsKCQkvLyBB
c2sgVHdpdHRlciBmb3IgYW4gYWNjZXNzIHRva2VuIChhbmQgYW4gYWNjZXNzIHRva2VuIHNl
Y3JldCkKCQkkcmVxdWVzdCA9ICR0d2l0LT5nZXRBY2Nlc3NUb2tlbiggZ3BzKCdvYXV0aF92
ZXJpZmllcicpICk7CgkJJGFjY2Vzc190b2tlbiA9ICRyZXF1ZXN0WydvYXV0aF90b2tlbidd
OwoJCSRhY2Nlc3NfdG9rZW5fc2VjcmV0ID0gJHJlcXVlc3RbJ29hdXRoX3Rva2VuX3NlY3Jl
dCddOwoJCSR1c2VyID0gJHJlcXVlc3RbJ3NjcmVlbl9uYW1lJ107CgkJLy8gU3RvcmUgdGhl
IGFjY2VzcyB0b2tlbiBhbmQgc2VjcmV0CgkJc2V0X3ByZWYoJ2FyY190d2l0dGVyX2FjY2Vz
c1Rva2VuJywkYWNjZXNzX3Rva2VuLCAnYXJjX3R3aXR0ZXInLDIpOwoJCXNldF9wcmVmKCdh
cmNfdHdpdHRlcl9hY2Nlc3NUb2tlblNlY3JldCcsJGFjY2Vzc190b2tlbl9zZWNyZXQKCQkJ
LCAnYXJjX3R3aXR0ZXInLDIpOwoJCXNldF9wcmVmKCdhcmNfdHdpdHRlcl91c2VyJywkdXNl
cik7CgkJJHByZWZzWydhcmNfdHdpdHRlcl9hY2Nlc3NUb2tlbiddID0gJGFjY2Vzc190b2tl
bjsKCQkkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vzc1Rva2VuU2VjcmV0J10gPSAkYWNjZXNz
X3Rva2VuX3NlY3JldDsKCQl1bnNldCgkdHdpdCk7Cgl9CgoJaWYgKCRzdGVwPT0icHJlZnNf
c2F2ZSIpIHsKCgkJJHByZWZpeCA9IHRyaW0oZ3BzKCdhcmNfdHdpdHRlcl9wcmVmaXgnKSk7
CgkJJHN1ZmZpeCA9IHRyaW0oZ3BzKCdhcmNfdHdpdHRlcl9zdWZmaXgnKSk7CgkJJHR3ZWV0
X2RlZmF1bHQgPSBncHMoJ2FyY190d2l0dGVyX3R3ZWV0X2RlZmF1bHQnKTsKCQkkdXJsX21l
dGhvZCA9IGdwcygnYXJjX3R3aXR0ZXJfdXJsX21ldGhvZCcpOwoJCSRzaG9ydF91cmwgPSBn
cHMoJ2FyY19zaG9ydF91cmwnKTsKCQkkc2hvcnRfc2l0ZV91cmwgPSBncHMoJ2FyY19zaG9y
dF9zaXRlX3VybCcpOwoJCSRjYWNoZV9kaXIgPSBncHMoJ2FyY190d2l0dGVyX2NhY2hlX2Rp
cicpOwoJCSR0YWIgPSBncHMoJ2FyY190d2l0dGVyX3RhYicpOwoJCSR1dG0gPSBncHMoJ2Fy
Y190d2l0dGVyX3V0bScpOwoKCQlpZiAoc3RybGVuKCRwcmVmaXgpPD0yMCkgewoJCQlzZXRf
cHJlZignYXJjX3R3aXR0ZXJfcHJlZml4JywkcHJlZml4KTsKCQl9IGVsc2UgewoJCQkkcHJl
Zml4ID0gJHByZWZzWydhcmNfdHdpdHRlcl9wcmVmaXgnXTsKCQl9CgkJaWYgKHN0cmxlbigk
c3VmZml4KTw9MjApIHsKCQkJc2V0X3ByZWYoJ2FyY190d2l0dGVyX3N1ZmZpeCcsJHN1ZmZp
eCk7CgkJfSBlbHNlIHsKCQkJJHN1ZmZpeCA9ICRwcmVmc1snYXJjX3R3aXR0ZXJfc3VmZml4
J107CgkJfQoJCSR0d2VldF9kZWZhdWx0ID0gKCR0d2VldF9kZWZhdWx0KSA/IDEgOiAwOwoJ
CSRzaG9ydF91cmwgPSAoJHNob3J0X3VybCkgPyAxIDogMDsKCQlpZiAoISRzaG9ydF9zaXRl
X3VybCkgewoJCQkkc2hvcnRfc2l0ZV91cmwgPSAkcHJlZnNbJ3NpdGV1cmwnXTsKCQl9CgkJ
c2V0X3ByZWYoJ2FyY190d2l0dGVyX3R3ZWV0X2RlZmF1bHQnLCAkdHdlZXRfZGVmYXVsdCk7
CgkJc2V0X3ByZWYoJ2FyY19zaG9ydF91cmwnLCAkc2hvcnRfdXJsKTsKCQlzZXRfcHJlZign
YXJjX3R3aXR0ZXJfdXJsX21ldGhvZCcsICR1cmxfbWV0aG9kKTsKCQlzZXRfcHJlZignYXJj
X3Nob3J0X3NpdGVfdXJsJywgJHNob3J0X3NpdGVfdXJsKTsKCQlzZXRfcHJlZignYXJjX3R3
aXR0ZXJfY2FjaGVfZGlyJywgJGNhY2hlX2Rpcik7CgkJc2V0X3ByZWYoJ2FyY190d2l0dGVy
X3RhYicsICR0YWIpOwoJCXNldF9wcmVmKCdhcmNfdHdpdHRlcl91dG0nLCAkdXRtKTsKCgl9
CgoJaWYgKCAkc3RlcCE9J3JlZ2lzdGVyJyApIHsKCQlpZiAoIGlzc2V0KCRwcmVmc1snYXJj
X3R3aXR0ZXJfYWNjZXNzVG9rZW4nXSkKCQkmJiBpc3NldCgkcHJlZnNbJ2FyY190d2l0dGVy
X2FjY2Vzc1Rva2VuU2VjcmV0J10pICkgewoJCQkkdHdpdCA9IG5ldyBhcmNfdHdpdHRlcigk
YXJjX3R3aXR0ZXJfY29uc3VtZXJLZXkKCQkJCSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2Vj
cmV0LCAkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vzc1Rva2VuJ10KCQkJCSwgJHByZWZzWydh
cmNfdHdpdHRlcl9hY2Nlc3NUb2tlblNlY3JldCddKTsKCQkJJHJlZ2lzdGVyVVJMID0gJHR3
aXQtPmNhbGxiYWNrVVJMKCRldmVudCwncmVnaXN0ZXInKTsKCgkJCS8vIERlZmluZSB0aGUg
ZmllbGRzIHJlYWR5IHRvIGJ1aWxkIHRoZSBmb3JtCgkJCSRmaWVsZHMgPSBhcnJheSgKCQkJ
CSdUd2VldCBTZXR0aW5ncycgPT4gYXJyYXkoCgkJCQkgICdhcmNfdHdpdHRlcl9wcmVmaXgn
ID0+IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gJ1R3ZWV0IHByZWZpeCcsCgkJCQkJJ3ZhbHVl
JyA9PiAkcHJlZml4CgkJCQkgICksCgkJCQkgICdhcmNfdHdpdHRlcl9zdWZmaXgnID0+IGFy
cmF5KAoJCQkJCSdsYWJlbCcgPT4gJ1R3ZWV0IHN1ZmZpeCcsCgkJCQkJJ3ZhbHVlJyA9PiAk
c3VmZml4CgkJCQkgICksCgkJCQkgICdhcmNfdHdpdHRlcl90d2VldF9kZWZhdWx0JyA9PiBh
cnJheSgKCQkJCQknbGFiZWwnID0+ICdUd2VldCBhcnRpY2xlcyBieSBkZWZhdWx0JywKCQkJ
CQkndHlwZScgPT4gJ3llc25vUmFkaW8nLAoJCQkJCSd2YWx1ZScgPT4gJHR3ZWV0X2RlZmF1
bHQKCQkJCSAgKSwKCQkJCSAgJ2FyY190d2l0dGVyX3VybF9tZXRob2QnID0+IGFycmF5KAoJ
CQkJCSdsYWJlbCcgPT4gJ1VSTCBzaG9ydG5lcicsCgkJCQkJJ3R5cGUnID0+ICdhcmNfdHdp
dHRlcl91cmxfbWV0aG9kX3NlbGVjdCcsCgkJCQkJJ3ZhbHVlJyA9PiAkdXJsX21ldGhvZAoJ
CQkJICApCgkJCQkpLAoJCQkJJ1RYUCBUd2VldCBzaG9ydCBVUkwnID0+IGFycmF5KAoJCQkJ
ICAnYXJjX3Nob3J0X3VybCcgPT4gYXJyYXkoCgkJCQkJJ2xhYmVsJyA9PiAnRW5hYmxlIFRY
UCBUd2VldCBzaG9ydCBVUkwgcmVkaXJlY3QnLAoJCQkJCSd0eXBlJyA9PiAneWVzbm9SYWRp
bycsCgkJCQkJJ3ZhbHVlJyA9PiAkc2hvcnRfdXJsCgkJCQkgICksCgkJCQkgICdhcmNfc2hv
cnRfc2l0ZV91cmwnID0+IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gJ1RYUCBUd2VldCBzaG9y
dCBzaXRlIFVSTCcsCgkJCQkJJ3ZhbHVlJyA9PiAkc2hvcnRfc2l0ZV91cmwKCQkJCSAgKQoJ
CQkJKSwKCQkJCSdUd2l0dGVyIFRhYicgPT4gYXJyYXkoCgkJCQkgICdhcmNfdHdpdHRlcl90
YWInID0+IGFycmF5KAoJCQkJCSdsYWJlbCcgPT4gJ0xvY2F0aW9uIG9mIHRhYicsCgkJCQkJ
J3R5cGUnID0+ICdhcmNfdHdpdHRlcl90YWJfc2VsZWN0JywKCQkJCQkndmFsdWUnID0+ICR0
YWIKCQkJCSAgKQoJCQkJKSwKCQkJCSdHb29nbGUgQW5hbHl0aWNzJyA9PiBhcnJheSgKCQkJ
CQknYXJjX3R3aXR0ZXJfdXRtJyA9PiBhcnJheSgKCQkJCQkJJ2xhYmVsJyA9PiAnRW5hYmxl
IFVUTScsCgkJCQkJCSd0eXBlJyA9PiAneWVzbm9SYWRpbycsCgkJCQkJCSd2YWx1ZScgPT4g
JHV0bQoJCQkJCSkKCQkJCSksCgkJCQknQ2FjaGUnID0+IGFycmF5KAoJCQkJICAnYXJjX3R3
aXR0ZXJfY2FjaGVfZGlyJyA9PiBhcnJheSgKCQkJCQknbGFiZWwnID0+ICdDYWNoZSBkaXJl
Y3RvcnknLAoJCQkJCSd2YWx1ZScgPT4gJGNhY2hlX2RpcgoJCQkJICApCgkJCQkpCgkJCSk7
CgoJCQkkZm9ybSA9ICI8aDI+VHdpdHRlciBhY2NvdW50IGRldGFpbHM8L2gyPiIKCQkuIjxw
PjxzcGFuIGNsYXNzPSdlZGl0LWxhYmVsJz5Ud2l0dGVyIHVzZXJuYW1lPC9zcGFuPiIKCQku
IjxzcGFuIGNsYXNzPSdlZGl0LXZhbHVlJz4iCgkJLigkcHJlZnNbJ2FyY190d2l0dGVyX3Vz
ZXInXSA/ICR1c2VyLicgKCcuaHJlZignUmUtY29ubmVjdCcsJHJlZ2lzdGVyVVJMKS4nKScg
OiAnPGVtPnVua25vd248L2VtPicuaHJlZignQ29ubmVjdCB0byBUd2l0dGVyJywkcmVnaXN0
ZXJVUkwpKQoJCQkJLiI8L3NwYW4+PC9wPiI7CgoJCQkkZm9ybSAuPSBfYXJjX3R3aXR0ZXJf
Zm9ybV9idWlsZGVyKCRmaWVsZHMpOwoKCQkJJGZvcm0gLj0gc0lucHV0KCdwcmVmc19zYXZl
Jykubi5lSW5wdXQoJ3BsdWdpbl9wcmVmcy5hcmNfdHdpdHRlcicpOwoKCSAgJGZvcm0gLj0g
JzxwPicuZklucHV0KCdzdWJtaXQnLCAnU3VibWl0JywgZ1R4dCgnc2F2ZV9idXR0b24nKSwg
J3B1Ymxpc2gnKS4nPC9wPic7CgoJICAkaHRtbCA9ICI8aDEgY2xhc3M9J3R4cC1oZWFkaW5n
Jz5UWFAgVHdlZXQ8L2gxPiIKCQkuIjxwIGNsYXNzPSduYXYtdGVydGlhcnknPiIKCQkuIjxh
IGhyZWY9Jy4vP2V2ZW50PWFyY19hZG1pbl90d2l0dGVyJyBjbGFzcz0nbmF2bGluayc+VHdp
dHRlcjwvYT48YSBocmVmPScuLz9ldmVudD1wbHVnaW5fcHJlZnMuYXJjX3R3aXR0ZXInIGNs
YXNzPSduYXZsaW5rLWFjdGl2ZSc+T3B0aW9uczwvYT4iCgkJLiI8L3A+IjsKCgkgICRodG1s
IC49IGZvcm0oIjxkaXYgY2xhc3M9J3BsdWdpbi1jb2x1bW4nPiIuJGZvcm0uIjwvZGl2PiIs
ICIgY2xhc3M9J2VkaXQtZm9ybSciKTsKCgkJfSBlbHNlaWYgKCAkc3RlcCE9J3JlZ2lzdGVy
JyApIHsKCgkJCSRyZWdpc3RlclVSTCA9IGFyY190d2l0dGVyOjpjYWxsYmFja1VSTCgkZXZl
bnQsJ3JlZ2lzdGVyJyk7CgoJCQkkZm9ybSA9ICI8aDI+VHdpdHRlciBhY2NvdW50IGRldGFp
bHM8L2gyPiIKCQkuIjxzcGFuIGNsYXNzPSdlZGl0LWxhYmVsJz5Ud2l0dGVyIHVzZXJuYW1l
PC9zcGFuPiIKCQkuIjxzcGFuIGNsYXNzPSdlZGl0LXZhbHVlJz48ZW0+dW5rbm93bjwvZW0+
ICZtZGFzaDsgIgoJCS5ocmVmKCdDb25uZWN0IHRvIFR3aXR0ZXInLCRyZWdpc3RlclVSTCkK
CQkJCS4iPC9zcGFuPiI7CgoJICAkaHRtbCA9IGZvcm0oIjxkaXYgY2xhc3M9J3BsdWdpbi1j
b2x1bW4nPiIuJGZvcm0uIjwvZGl2PiIsICIgY2xhc3M9J2VkaXQtZm9ybSciKTsKCgkJfQoJ
fQoKCS8vIFNldCBqUXVlcnkgZm9yIHN3aXRjaGluZyBvbi9vZmYgcmVsZXZhbnQgYXJjX3No
b3J0X3VybCBmaWVsZHMKCSRqcyA9IDw8PEpTCjxzY3JpcHQgbGFuZ3VhZ2U9ImphdmFzY3Jp
cHQiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9u
KCl7CiAgdmFyIG9ub2ZmID0gJCgnLmFyY19zaG9ydF91cmwnKTsKICB2YXIgYXJjX3Nob3J0
X3VybF9vZmYgPSAkKCcjYXJjX3Nob3J0X3VybC1hcmNfc2hvcnRfdXJsLTAnKTsKICB2YXIg
dXJsID0gJCgnLmFyY19zaG9ydF9zaXRlX3VybCcpOwogIHZhciB1cmxfbWV0aG9kID0gJCgn
c2VsZWN0W25hbWU9ImFyY190d2l0dGVyX3VybF9tZXRob2QiXScpOwoKICBpZiAoYXJjX3No
b3J0X3VybF9vZmYuYXR0cignY2hlY2tlZCcpPT0nY2hlY2tlZCcgJiYgJCgnb3B0aW9uOnNl
bGVjdGVkJywgdXJsX21ldGhvZCkudmFsKCkhPSdhcmNfdHdpdHRlcicpIHsKCXVybC5oaWRl
KCk7CiAgfQogICQoJ2lucHV0Jywgb25vZmYpLmNoYW5nZShmdW5jdGlvbigpewoJaWYgKCQo
J29wdGlvbjpzZWxlY3RlZCcsIHVybF9tZXRob2QpLnZhbCgpIT0nYXJjX3R3aXR0ZXInKSB7
CgkgIGFyY19zaG9ydF91cmxfb2ZmLmF0dHIoJ2NoZWNrZWQnKT09J2NoZWNrZWQnID8gdXJs
LmhpZGUoKSA6IHVybC5zaG93KCk7Cgl9CiAgfSk7CgogIGlmICgkKCdvcHRpb246c2VsZWN0
ZWQnLCB1cmxfbWV0aG9kKS52YWwoKT09J2FyY190d2l0dGVyJykgewoJb25vZmYuaGlkZSgp
OyB1cmwuc2hvdygpOwogIH0KICB1cmxfbWV0aG9kLmNoYW5nZShmdW5jdGlvbigpewoJaWYg
KCQoJ29wdGlvbjpzZWxlY3RlZCcsIHVybF9tZXRob2QpLnZhbCgpPT0nYXJjX3R3aXR0ZXIn
KSB7CgkgIG9ub2ZmLnRvZ2dsZSgpOyB1cmwuc2hvdygpOwoJfSBlbHNlIHsKCSAgb25vZmYu
dG9nZ2xlKCk7CgkgIGFyY19zaG9ydF91cmxfb2ZmLmF0dHIoJ2NoZWNrZWQnKT09J2NoZWNr
ZWQnID8gdXJsLmhpZGUoKSA6IHVybC5zaG93KCk7Cgl9CiAgfSkKfSk7Cjwvc2NyaXB0PgpK
UzsKCgllY2hvICRqcy4kaHRtbDsKfQoKZnVuY3Rpb24gX2FyY190d2l0dGVyX2Zvcm1fYnVp
bGRlcigkZmllbGRzKSB7CgogICRmb3JtID0gJyc7CgogIGZvcmVhY2ggKCRmaWVsZHMgYXMg
JGZrID0+ICRmdikgewoKCSRmb3JtIC49ICgkZmspID8gIjxoMj4kZms8L2gyPiIgOiAnJzsK
Cglmb3JlYWNoICgkZnYgYXMgJGsgPT4gJHYpIHsKCgkgICR0eXBlID0gaXNzZXQoJHZbJ3R5
cGUnXSkgPyAkdlsndHlwZSddIDogJ3RleHQnOwoKCSAgJGZvcm0gLj0gIjxwIGNsYXNzPSck
ayc+IgoJCS4iPHNwYW4gY2xhc3M9J2VkaXQtbGFiZWwnPjxsYWJlbCBmb3I9JyRrJz4iLiR2
WydsYWJlbCddLiI8L2xhYmVsPjwvc3Bhbj4iOwoKCSAgc3dpdGNoICgkdHlwZSkgIHsKCgkJ
Y2FzZSAndGV4dGFyZWEnOgoKCQkgICRmb3JtIC49IHRleHRfYXJlYSgkaywgJzUwJywgJzU1
MCcsICR2Wyd2YWx1ZSddLCAkayk7CgkJICBicmVhazsKCgkJY2FzZSAneWVzbm9SYWRpbyc6
CgoJCSAgJGZvcm0gLj0gIjxzcGFuIGNsYXNzPSdlZGl0LXZhbHVlJz4iLnllc25vUmFkaW8o
JGssICR2Wyd2YWx1ZSddLCAnJywgJGspLiI8L3NwYW4+IjsKCQkgIGJyZWFrOwoKCQljYXNl
ICdhcmNfdHdpdHRlcl90YWJfc2VsZWN0JzoKCgkJICAkZm9ybSAuPSAiPHNwYW4gY2xhc3M9
J2VkaXQtdmFsdWUnPiIuYXJjX3R3aXR0ZXJfdGFiX3NlbGVjdCgkaywgJHZbJ3ZhbHVlJ10p
LiI8L3NwYW4+IjsKCQkgIGJyZWFrOwoKCQljYXNlICdhcmNfdHdpdHRlcl91cmxfbWV0aG9k
X3NlbGVjdCc6CgoJCSAgJGZvcm0gLj0gIjxzcGFuIGNsYXNzPSdlZGl0LXZhbHVlJz4iLmFy
Y190d2l0dGVyX3VybF9tZXRob2Rfc2VsZWN0KCRrLCAkdlsndmFsdWUnXSkuIjwvc3Bhbj4i
OwoJCSAgYnJlYWs7CgoJCWRlZmF1bHQ6CgoJCSAgJGZvcm0gLj0gIjxzcGFuIGNsYXNzPSdl
ZGl0LXZhbHVlJz4iLmZJbnB1dCgndGV4dCcsJGssJHZbJ3ZhbHVlJ10sJycsJycsJycsJycs
JycsJGspLiI8L3NwYW4+IjsKCQkgIGJyZWFrOwoKCSAgfQoKCSAgJGZvcm0gLj0gIjwvcD4i
OwoJfQoKICB9CgogIHJldHVybiAkZm9ybTsKfQoKLy8gQWRkIFR3aXR0ZXIgdGFiIHRvIFRl
eHRwYXR0ZXJuCmZ1bmN0aW9uIGFyY19hZG1pbl90d2l0dGVyKCRldmVudCwkc3RlcCkKewoJ
Z2xvYmFsICRwcmVmcywgJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAkYXJjX3R3aXR0ZXJf
Y29uc3VtZXJTZWNyZXQ7CgoJJHR3aXQgPSBuZXcgYXJjX3R3aXR0ZXIoJGFyY190d2l0dGVy
X2NvbnN1bWVyS2V5CgkJCSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0LCAkcHJlZnNb
J2FyY190d2l0dGVyX2FjY2Vzc1Rva2VuJ10KCQkJLCAkcHJlZnNbJ2FyY190d2l0dGVyX2Fj
Y2Vzc1Rva2VuU2VjcmV0J10pOwoKCSR0d2l0LT5jYWNoZURpcigkcHJlZnNbJ2FyY190d2l0
dGVyX2NhY2hlX2RpciddKTsKCgkkZGF0YSA9ICR0d2l0LT5nZXQoJ3VzZXJzL3Nob3cnCgkJ
LCBhcnJheSgnc2NyZWVuX25hbWUnPT4kcHJlZnNbJ2FyY190d2l0dGVyX3VzZXInXSkpOwoJ
JHR3aXR0ZXJVc2VyID0gJGRhdGE7CgkkdHdpdHRlclVzZXJVUkwgPSAnaHR0cDovL3d3dy50
d2l0dGVyLmNvbS8nLiR0d2l0dGVyVXNlci0+c2NyZWVuX25hbWU7CgoJaWYgKCRzdGVwPT0i
dHdlZXQiKSB7IC8vIHBvc3QgYW4gdXBkYXRlIHRvIFR3aXR0ZXIKCgkJLy8gZmV0Y2ggYW5k
IGNsZWFuIG1lc3NhZ2UKCQkkbWVzc2FnZSA9IHN0cmlwX3RhZ3MoZ3BzKCdtZXNzYWdlJykp
OwoJCS8vIFdlIG5lZWQgdG8gYWNjb3VudCBmb3IgdC5jbyBVUkwgc2hvcnRlbmluZyBpbiBv
dXIgY291bnQgKDIyIGNoYXJhY3RlcnMgZm9yIGEgVVJMLCAyMyBpZiBodHRwcykuCgkJJHVy
bFBhdHRlcm4gPSAiLyhodHRwfGh0dHBzKTpcL1wvW1x3LV0rKFwuW1x3LV0rKSsoW1x3LixA
P149JSZhbXA7OlwvfisjLV0qW1x3QD9ePSUmYW1wO1wvfisjLV0pPy8iOwoJCSR0bXBNZXNz
YWdlID0gcHJlZ19yZXBsYWNlKCR1cmxQYXR0ZXJuLCAiJDF4eHh4eHh4eHh4eHh4eHh4eHgi
LCAkbWVzc2FnZSk7CgkJJGNvdW50ID0gc3RybGVuKCR0bXBNZXNzYWdlKTsKCQl1bnNldCgk
dG1wTWVzc2FnZSk7CgoJCWlmICgkY291bnQ8PTI4MCAmJiAkY291bnQ+MCkgeyAvLyBwb3N0
IHVwZGF0ZQoJCQkkcmVzdWx0ID0gJHR3aXQtPnBvc3QoJ3N0YXR1c2VzL3VwZGF0ZScsIGFy
cmF5KCdzdGF0dXMnID0+ICRtZXNzYWdlKSk7CgkJfSBlbHNlIHsgLy8gbWVzc2FnZSB0b28g
bG9uZywgSmF2YVNjcmlwdCBpbnRlcmZhY2Ugc2hvdWxkIHByZXZlbnQgdGhpcwoJCQkkcmVz
dWx0ID0gZmFsc2U7CgkJfQoKCQlwYWdldG9wKCdUd2l0dGVyJywKCQkJKCgkcmVzdWx0IT1m
YWxzZSk/J1R3aXR0ZXIgdXBkYXRlZCc6J0Vycm9yIHVwZGF0aW5nIFR3aXR0ZXInKSk7CgoJ
fSBlbHNlaWYgKCRzdGVwPT0iZGVsZXRlIikgeyAvLyBkZWxldGUgYW4gdXBkYXRlIGZyb20g
VHdpdHRlcgoKCQkkaWQgPSBzdHJpcF90YWdzKGdwcygnaWQnKSk7CgkJaWYgKCRpZCkgewoJ
CQkkdHdpdC0+ZGVsZXRlKCdzdGF0dXNlcy9kZXN0cm95LycuJGlkKTsKCQkJc2FmZV9kZWxl
dGUoJ2FyY190d2l0dGVyJywidHdlZXRfaWQgPSAkaWQiKTsKCQl9CgoJCXBhZ2V0b3AoJ1R3
aXR0ZXInLCdUd2l0dGVyIHVwZGF0ZWQnKTsKCgl9IGVsc2UgewoKCQlwYWdldG9wKCdUd2l0
dGVyJyk7CgoJfQoKCS8vIFByZXBhcmUgSmF2YVNjcmlwdCB0byBjcmVhdGUgVHdpdHRlciB1
cGRhdGUgaW50ZXJmYWNlCgoJJGpzID0gJzxzY3JpcHQgbGFuZ3VhZ2U9ImphdmFzY3JpcHQi
IHR5cGU9InRleHQvamF2YXNjcmlwdCI+JzsKCSRqcy49IDw8PEpTCiQoZG9jdW1lbnQpLnJl
YWR5KGZ1bmN0aW9uKCl7Cgl2YXIgY291bnRlciA9ICQoJzxzcGFuPicsIHsKCQkndGV4dCcg
OiAnMjgwJywKCQknaWQnIDogJ3R3ZWV0Y291bnQnCgl9KTsKCSQoJy5tZXNzYWdlJykuYXBw
ZW5kKGNvdW50ZXIpOwoJdmFyIGNvdW50ZXJTdHlsZSA9ICdmb250LXdlaWdodDpib2xkO3Bh
ZGRpbmctbGVmdDouNWVtO2ZvbnQtc2l6ZToyZW07bGluZS1oZWlnaHQ6MS4yZW07JzsKCSQo
JyN0d2VldGNvdW50JykuYXR0cignc3R5bGUnLCBjb3VudGVyU3R5bGUrJ2NvbG9yOiNjY2M7
Jyk7CgkkKCcjbWVzc2FnZScpLmtleXVwKGZ1bmN0aW9uKCkgewoJCS8vIFdlIG5lZWQgdG8g
YWNjb3VudCBmb3IgdC5jbyBVUkwgc2hvcnRlbmluZyBpbiBvdXIgY291bnQgKDIyIGNoYXJh
Y3RlcnMgZm9yIGEgVVJMLCAyMyBpZiBodHRwcykuCgkJdmFyIG1lc3NhZ2UgPSAkKCcjbWVz
c2FnZScpLnZhbCgpOwoJCXZhciB1cmxQYXR0ZXJuID0gLyhodHRwfGh0dHBzKTpcL1wvW1x3
LV0rKFwuW1x3LV0rKSsoW1x3LixAP149JSZhbXA7OlwvfisjLV0qW1x3QD9ePSUmYW1wO1wv
fisjLV0pPy87CgkJbWVzc2FnZSA9IG1lc3NhZ2UucmVwbGFjZSh1cmxQYXR0ZXJuLCAnJDF4
eHh4eHh4eHh4eHh4eHh4eHgnKTsKCQl2YXIgY291bnQgPSAyODAtbWVzc2FnZS5sZW5ndGg7
CgkJJCgnI3R3ZWV0Y291bnQnKS5odG1sKGNvdW50KycnKTsgLy8gaGFjayB0byBmb3JjZSBv
dXRwdXQgb2YgMAoJCWlmIChjb3VudDwwKSB7CgkJCSQoJ2lucHV0LnB1Ymxpc2gnKS5wcm9w
KCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpOwoJCX0gZWxzZSB7CgkJCSQoJ2lucHV0LnB1Ymxp
c2gnKS5wcm9wKCdkaXNhYmxlZCcsICcnKTsKCQl9CgkJaWYgKGNvdW50PDApIHsKCQkJJCgn
I3R3ZWV0Y291bnQnKS5hdHRyKCdzdHlsZScsIGNvdW50ZXJTdHlsZSsnY29sb3I6I2YwMDsn
KTsKCQl9IGVsc2UgaWYgKGNvdW50PDEwKSB7CgkJCSQoJyN0d2VldGNvdW50JykuYXR0cign
c3R5bGUnLCBjb3VudGVyU3R5bGUrJ2NvbG9yOiMwMDA7Jyk7CgkJfSBlbHNlIHsKCQkJJCgn
I3R3ZWV0Y291bnQnKS5hdHRyKCdzdHlsZScsIGNvdW50ZXJTdHlsZSsnY29sb3I6I2NjYzsn
KTsKCQl9Cgl9KQp9KTsKSlM7CgkkanMuPSAiPC9zY3JpcHQ+IjsKCgkkb3V0ID0gJyc7Cgkk
dHdlZXRzID0gJHR3aXQtPmdldCgnc3RhdHVzZXMvdXNlcl90aW1lbGluZScKCQksIGFycmF5
KCdzY3JlZW5fbmFtZSc9PiRwcmVmc1snYXJjX3R3aXR0ZXJfdXNlciddLCdjb3VudCc9PjI1
KSk7CglpZiAoJHR3ZWV0cykgZm9yZWFjaCAoJHR3ZWV0cyBhcyAkdHdlZXQpIHsKCQkkdGlt
ZSA9IHN0cnRvdGltZShodG1sZW50aXRpZXMoJHR3ZWV0LT5jcmVhdGVkX2F0KSk7CgkJJGRh
dGUgPSBzYWZlX3N0cmZ0aW1lKCRwcmVmc1snYXJjaGl2ZV9kYXRlZm9ybWF0J10sJHRpbWUp
OwoJCSRsaW5rcyA9IGZhbHNlOwoJCWlmIChpc3NldCgkdHdlZXQtPmVudGl0aWVzLT51cmxz
KSkgewoJCQkkbGlua3MgPSBhcnJheSgpOwoJCQlmb3JlYWNoICgkdHdlZXQtPmVudGl0aWVz
LT51cmxzIGFzICR1cmwpIHsKCQkJCSRsaW5rc1skdXJsLT51cmxdID0gYXJyYXkoCgkJCQkJ
J2V4cGFuZGVkX3VybCcgPT4gJHVybC0+ZXhwYW5kZWRfdXJsLAoJCQkJCSdkaXNwbGF5X3Vy
bCcgPT4gJHVybC0+ZGlzcGxheV91cmwKCQkJCSk7CgkJCX0KCQl9CgkJJG91dC49IHRyKHRk
KCRkYXRlLCdzcGFuJykKCQkJLnRkKGFyY19Ud2l0dGVyOjptYWtlTGlua3MoaHRtbGVudGl0
aWVzKCR0d2VldC0+dGV4dAoJCQkJLCBFTlRfUVVPVEVTLCdVVEYtOCcpLCAkbGlua3MsIHRy
dWUpKQoJCQkudGQoZExpbmsoJ2FyY19hZG1pbl90d2l0dGVyJywnZGVsZXRlJywnaWQnLCR0
d2VldC0+aWRfc3RyLCcnKSkKCQkpOwoJfQoKCSRmaWVsZHMgPSBhcnJheSgKCScnID0+IGFy
cmF5KAoJICAnbWVzc2FnZScgPT4gYXJyYXkoCgkJJ2xhYmVsJyA9PiAnVXBkYXRlIFR3aXR0
ZXInLAoJCSd0eXBlJyA9PiAndGV4dGFyZWEnLAoJCSd2YWx1ZScgPT4gJycKCSAgKQoJKQoJ
KTsKCgkkcHJvZmlsZSA9ICc8aW1nIHNyYz0iJy4kdHdpdHRlclVzZXItPnByb2ZpbGVfaW1h
Z2VfdXJsLiciIGFsdD0iVHdpdHRlciBhdmF0YXIiIHN0eWxlPSJmbG9hdDpsZWZ0OyBtYXJn
aW4tcmlnaHQ6IDFlbSIgLz4nCgkuZ3JhZihocmVmKCR0d2l0dGVyVXNlci0+bmFtZSwkdHdp
dHRlclVzZXJVUkwpLCcgc3R5bGU9ImZvbnQtc2l6ZToxLjJlbTtmb250LXdlaWdodDpib2xk
OyInKQoJLmdyYWYoaHJlZigkdHdpdHRlclVzZXItPmZyaWVuZHNfY291bnQuJyBmb2xsb3dp
bmcnLCR0d2l0dGVyVXNlclVSTC4nL2ZvbGxvd2luZycpCgkuJywgJy5ocmVmKCR0d2l0dGVy
VXNlci0+Zm9sbG93ZXJzX2NvdW50LicgZm9sbG93ZXJzJywkdHdpdHRlclVzZXJVUkwuJy9m
b2xsb3dlcnMnKQoJLicsICcuaHJlZigkdHdpdHRlclVzZXItPnN0YXR1c2VzX2NvdW50Licg
dXBkYXRlcycsJHR3aXR0ZXJVc2VyVVJMKSk7CgoJJGZvcm0gPSBfYXJjX3R3aXR0ZXJfZm9y
bV9idWlsZGVyKCRmaWVsZHMpCgkuZUlucHV0KCdhcmNfYWRtaW5fdHdpdHRlcicpCgkuc0lu
cHV0KCd0d2VldCcpOwogICRmb3JtIC49ICc8cD4nLmZJbnB1dCgnc3VibWl0JywgJ1N1Ym1p
dCcsIGdUeHQoJ1VwZGF0ZScpLCAncHVibGlzaCcpLic8L3A+JzsKCiAgJGh0bWwgPSAiPGgx
IGNsYXNzPSd0eHAtaGVhZGluZyc+VFhQIFR3ZWV0PC9oMT4iCgkuIjxwIGNsYXNzPSduYXYt
dGVydGlhcnknPiIKCS4iPGEgaHJlZj0nLi8/ZXZlbnQ9YXJjX2FkbWluX3R3aXR0ZXInIGNs
YXNzPSduYXZsaW5rLWFjdGl2ZSc+VHdpdHRlcjwvYT48YSBocmVmPScuLz9ldmVudD1wbHVn
aW5fcHJlZnMuYXJjX3R3aXR0ZXInIGNsYXNzPSduYXZsaW5rJz5PcHRpb25zPC9hPiIKCS4i
PC9wPiI7CgoJJGh0bWwgLj0gIjxkaXYgY2xhc3M9J3RleHQtY29sdW1uJz4iLiRwcm9maWxl
LiI8L2Rpdj4iCgkuIjxiciBzdHlsZT0nY2xlYXI6Ym90aCcgLz4iCgkuZm9ybSgiPGRpdiBj
bGFzcz0ncGx1Z2luLWNvbHVtbic+Ii4kZm9ybS4iPC9kaXY+Ii5icik7CgoJLy8gQXR0YWNo
IHJlY2VudCBUd2l0dGVyIHVwZGF0ZXMKCgkkaHRtbC49ICI8ZGl2IGNsYXNzPSd0eHAtbGlz
dHRhYmxlcyc+IgoJLnN0YXJ0VGFibGUoJ2FyY190d2l0dGVyX3RpbWVsaW5lJywnJywndHhw
LWxpc3QnKS4kb3V0LmVuZFRhYmxlKCkKCS4iPC9kaXY+IjsKCgkvLyBPdXRwdXQgSmF2YVNj
cmlwdCBhbmQgSFRNTAoKCWVjaG8gJGpzLiRodG1sOwp9CgovLyBBZGQgVHdpdHRlciBvcHRp
b25zIHRvIGFydGljbGUgYXJ0aWNsZSBzY3JlZW4KZnVuY3Rpb24gYXJjX2FwcGVuZF90d2l0
dGVyKCRldmVudCwgJHN0ZXAsICRkYXRhLCAkcnMxKQp7CglnbG9iYWwgJHByZWZzLCAkYXJj
X3R3aXR0ZXIsICRhcHBfbW9kZTsKCgkkcHJlZml4ID0gdHJpbShncHMoJ2FyY190d2l0dGVy
X3ByZWZpeCcpKTsKCSRwcmVmaXggPSAoJHByZWZpeCkgPyAkcHJlZml4IDogJHByZWZzWydh
cmNfdHdpdHRlcl9wcmVmaXgnXTsKCSRzdWZmaXggPSB0cmltKGdwcygnYXJjX3R3aXR0ZXJf
c3VmZml4JykpOwoJJHN1ZmZpeCA9ICgkc3VmZml4KSA/ICRzdWZmaXggOiAkcHJlZnNbJ2Fy
Y190d2l0dGVyX3N1ZmZpeCddOwoKCWlmICgkcnMxWydJRCddKSB7CgkJJHNxbCA9ICJTRUxF
Q1QgdHdlZXRfaWQsdHdlZXQgRlJPTSAiLlBGWC4iYXJjX3R3aXR0ZXIgV0hFUkUgYXJ0aWNs
ZV9pZD0iLiRyczFbJ0lEJ10uIjsiOwoJCSRyczIgPSBzYWZlX3F1ZXJ5KCRzcWwpOyAkcnMy
ID0gbmV4dFJvdygkcnMyKTsKCX0gZWxzZSB7IC8vIG5ldyBhcnRpY2xlCgkJJHJzMiA9ICcn
OwoJfQoKCWlmICgkYXBwX21vZGUgPT0gJ2FzeW5jJykKCXsKCSBzZW5kX3NjcmlwdF9yZXNw
b25zZSgnJCgiI2FyY190d2l0dGVyIikucmVtb3ZlKCk7Jyk7Cgl9CgoJaWYgKCRyczFbJ0lE
J10gJiYgJHJzMlsndHdlZXRfaWQnXSkKCXsKCQkkY29udGVudCA9IGFyY19Ud2l0dGVyOjpt
YWtlTGlua3MoJHJzMlsndHdlZXQnXSk7CgkJcmV0dXJuICRkYXRhLmZpZWxkc2V0KHRhZygk
Y29udGVudCwgJ3AnKSwgJ1R3aXR0ZXIgdXBkYXRlJywgJ2FyY190d2l0dGVyJyk7Cgl9Cgll
bHNlCgl7CgkJJHZhciA9IGdwcygnYXJjX3R3ZWV0X3RoaXMnKTsKCQkkdmFyID0gKCRyczFb
J0lEJ10mJiEkdmFyKSA/IDAgOiAkcHJlZnNbJ2FyY190d2l0dGVyX3R3ZWV0X2RlZmF1bHQn
XTsKCQkkY29udGVudCAgPSB0YWcoeWVzbm9SYWRpbygnYXJjX3R3ZWV0X3RoaXMnLCAkdmFy
LCAnJywgJ2FyY190d2VldF90aGlzJyksJ3AnKTsKCQkkY29udGVudCAuPSB0YWcoaHJlZign
T3B0aW9ucycsJyNhcmNfdHdpdHRlcl9vcHRpb25zJywgJyBvbmNsaWNrPSIkKFwnI2FyY190
d2l0dGVyX29wdGlvbnNcJykudG9nZ2xlKCk7IHJldHVybiBmYWxzZTsiJyksJ3AnLCcgc3R5
bGU9Im1hcmdpbi10b3A6NXB4OyInKTsKCQkkY29udGVudCAuPSB0YWcodGFnKHRhZygnVHdl
ZXQgcHJlZml4JywnbGFiZWwnLCAnIGZvcj0iYXJjX3R3aXR0ZXJfcHJlZml4IicpIC4gJzxi
ciAvPicKCQkJLmZJbnB1dCgndGV4dCcsJ2FyY190d2l0dGVyX3ByZWZpeCcsJHByZWZpeCwn
ZWRpdCcsJycsJycsJzIyJywnJywnYXJjX3R3aXR0ZXJfcHJlZml4JyksJ3AnKQoJCQkudGFn
KHRhZygnVHdlZXQgc3VmZml4IChlZyAjaGFzaHRhZ3MpJywnbGFiZWwnLCAnIGZvcj0iYXJj
X3R3aXR0ZXJfc3VmZml4IicpIC4gJzxiciAvPicKCQkJLmZJbnB1dCgndGV4dCcsJ2FyY190
d2l0dGVyX3N1ZmZpeCcsJHN1ZmZpeCwnZWRpdCcsJycsJycsJzIyJywnJywnYXJjX3R3aXR0
ZXJfc3VmZml4JyksJ3AnKQoJCQksJ2RpdicsJyBpZD0iYXJjX3R3aXR0ZXJfb3B0aW9ucyIg
Y2xhc3M9InRvZ2dsZSIgc3R5bGU9ImRpc3BsYXk6bm9uZSInKTsKCQlpZiAoaXNzZXQoJGFy
Y190d2l0dGVyWydlcnJvciddKSkgewoJCQkkY29udGVudCAuPSAnPHA+Jy4kYXJjX3R3aXR0
ZXJbJ2Vycm9yJ10uJzwvcD4nOwoJCX0KCQlyZXR1cm4gJGRhdGEuZmllbGRzZXQoJGNvbnRl
bnQsICdVcGRhdGUgVHdpdHRlcicsICdhcmNfdHdpdHRlcicpOwoJfQoKfQoKLy8gVXBkYXRl
IFR3aXR0ZXIgd2l0aCBwb3N0ZWQgYXJ0aWNsZQpmdW5jdGlvbiBhcmNfYXJ0aWNsZV90d2Vl
dCgkZXZlbnQsJHN0ZXApCnsKCWdsb2JhbCAkcHJlZnMsICRhcmNfdHdpdHRlciwgJGFyY190
d2l0dGVyX2NvbnN1bWVyS2V5CgkJLCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJTZWNyZXQ7CgoJ
JGFydGljbGVfaWQgPSBlbXB0eSgkR0xPQkFMU1snSUQnXSkgPyBncHMoJ0lEJykgOiAkR0xP
QkFMU1snSUQnXTsKCWlmICghZW1wdHkoJGFydGljbGVfaWQpKSB7CgoJCWluY2x1ZGVfb25j
ZSB0eHBhdGguJy9wdWJsaXNoL3RhZ2hhbmRsZXJzLnBocCc7CgoJCSRhcnRpY2xlID0gc2Fm
ZV9yb3coIklELCBUaXRsZSwgU2VjdGlvbiwgUG9zdGVkIiwgJ3RleHRwYXR0ZXJuJywKCQkJ
IklEPXskYXJ0aWNsZV9pZH0gQU5EIFN0YXR1cz00IEFORCBub3coKT49UG9zdGVkIik7CgoJ
CWlmICgkYXJ0aWNsZSAmJiBncHMoJ2FyY190d2VldF90aGlzJykpIHsgLy8gdHdlZXQgYXJ0
aWNsZQoKCQkJLy8gTmVlZCB0byBtYW51YWxseSB1cGRhdGUgdGhlICdVUkwgb25seSB0aXRs
ZScgYmVmb3JlIGJ1aWxkaW5nIHRoZQoJCQkvLyBVUkwKCQkJJGFydGljbGVbJ3VybF90aXRs
ZSddID0gZ3BzKCd1cmxfdGl0bGUnKTsKCgkJCS8vIE1ha2Ugc2hvcnQgVVJMCgkJCSR1cmwg
PSBwZXJtbGlua3VybCgkYXJ0aWNsZSk7CgkJCSRzaG9ydF91cmwgPSBhcmNfc2hvcnRlbl91
cmwoCgkJCQkkdXJsLAoJCQkJJHByZWZzWydhcmNfdHdpdHRlcl91cmxfbWV0aG9kJ10sCgkJ
CQlhcnJheSgnaWQnID0+ICRhcnRpY2xlX2lkKQoJCQkpOwoKCQkJaWYgKCEkc2hvcnRfdXJs
KSB7IC8vIEZhaWxlZCB0byBvYnRhaW4gYSBzaG9ydGVuZWQgVVJMLCBkbyBub3QgdHdlZXQh
CgkJCQkkYXJjX3R3aXR0ZXJbJ2Vycm9yJ10gPSAnVW5hYmxlIHRvIG9idGFpbiBhIHNob3J0
IFVSTCBmb3IgdGhpcyBhcnRpY2xlLic7CgoJCQkJcmV0dXJuIGZhbHNlOwoJCQl9CgoJCQkv
LyBDb25zdHJ1Y3QgVHdpdHRlciB1cGRhdGUKCQkJJHByZWZpeCAgPSB0cmltKGdwcygnYXJj
X3R3aXR0ZXJfcHJlZml4JykpOwoJCQkkcHJlX2xlbiA9IHN0cmxlbigkcHJlZml4KTsKCQkJ
JHByZWZpeCAgPSAoJHByZWZpeCAmJiAkcHJlX2xlbjw9MjApID8gJHByZWZpeC4nICcgOiAn
JzsKCQkJJHN1ZmZpeCAgPSB0cmltKGdwcygnYXJjX3R3aXR0ZXJfc3VmZml4JykpOwoJCQkk
c3VmX2xlbiA9IHN0cmxlbigkc3VmZml4KTsKCQkJJHN1ZmZpeCAgPSAoJHN1ZmZpeCAmJiAk
c3VmX2xlbjw9NDApID8gJyAnLiRzdWZmaXggOiAnJzsKCQkJJHVybF9sZW4gPSBwcmVnX21h
dGNoKCd8Xmh0dHBzfGknLCAkc2hvcnRfdXJsKSA/IDIzIDogMjI7IC8vIGNvdW50IFVSTCBs
ZW5ndGggKyAxIGZvciBwcmVmaXhlZCBzcGFjZQoJCQlpZiAoJHByZWZpeCkgewoJCQkJJHBy
ZV9sZW4gKz0gMTsKCQkJfQoJCQlpZiAoJHN1ZmZpeCkgewoJCQkJJHN1Zl9sZW4gKz0gMTsK
CQkJfQoJCQlpZiAoKHN0cmxlbigkYXJ0aWNsZVsnVGl0bGUnXSkrJHVybF9sZW4rJHByZV9s
ZW4rJHN1Zl9sZW4pPjI4MCkgewoJCQkJJGFydGljbGVbJ1RpdGxlJ10gPSBzdWJzdHIoJGFy
dGljbGVbJ1RpdGxlJ10sMCwxMzUtJHVybF9sZW4tJHByZV9sZW4tJHN1Zl9sZW4pLicuLi4n
OwoJCQl9CgkJCSR0d2VldCA9ICRwcmVmaXguJGFydGljbGVbJ1RpdGxlJ10uIiAiLiRzaG9y
dF91cmwuJHN1ZmZpeDsKCgkJCS8vIFVwZGF0ZSBUd2l0dGVyCgkJCSR0d2l0ID0gbmV3IGFy
Y190d2l0dGVyKCRhcmNfdHdpdHRlcl9jb25zdW1lcktleQoJCQkJLCAkYXJjX3R3aXR0ZXJf
Y29uc3VtZXJTZWNyZXQsICRwcmVmc1snYXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW4nXQoJCQkJ
LCAkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vzc1Rva2VuU2VjcmV0J10pOwoJCQkkcmVzdWx0
ID0gJHR3aXQtPnBvc3QoJ3N0YXR1c2VzL3VwZGF0ZScsIGFycmF5KCdzdGF0dXMnID0+ICR0
d2VldCkpOwoKCQkJJHR3ZWV0X2lkID0gKGlzX29iamVjdCgkcmVzdWx0KSkgPyAkcmVzdWx0
LT5pZF9zdHIgOiAwOwoKCQkJaWYgKCR0d2VldF9pZCkgewoKCQkJCSR0d2VldCA9IGFkZHNs
YXNoZXMoJHR3ZWV0KTsKCgkJCQkvLyBJZiB3ZSdyZSBub3QgdXNpbmcgYSBVUkwgc2hvcnRl
bmVyIGRvbid0IHN0b3JlIHRoZSBzaG9ydCBVUkwuCgkJCQlpZiAoJHByZWZzWydhcmNfdHdp
dHRlcl91cmxfbWV0aG9kJ109PSdmdWxsJykgewoJCQkJCSRzaG9ydF91cmwgPSBudWxsOwoJ
CQkJfQoKCQkJCS8vIHVwZGF0ZSBhcmNfdHdpdHRlciB0YWJsZSB3aXRoIHR3ZWV0CgkJCQkk
c3FsID0gIklOU0VSVCBJTlRPICIuUEZYLiJhcmNfdHdpdHRlciAoYXJ0aWNsZV9pZCx0d2Vl
dF9pZCx0d2VldCx0aW55dXJsKSAiOwoJCQkJJHNxbC49ICJWQUxVRVMoJGFydGljbGVfaWQs
JHR3ZWV0X2lkLFwiJHR3ZWV0XCIsJyRzaG9ydF91cmwnKTsiOwoJCQkJc2FmZV9xdWVyeSgk
c3FsKTsKCgkJCQlyZXR1cm4gdHJ1ZTsKCgkJCX0gZWxzZSB7CgoJCQkJJGFyY190d2l0dGVy
WydlcnJvciddID0gJ1R3aXR0ZXIgcmVzcG9uc2U6ICcKCQkJCQkuJHR3aXQtPmh0dHBfY29k
ZTsKCQkJCXJldHVybiBmYWxzZTsKCgkJCX0KCgkJfQoKCX0KCglyZXR1cm4gZmFsc2U7Cgp9
CgovKgogKiBTaG9ydGVuIFVSTHMgdXNpbmcgdmFyaW91cyBtZXRob2RzCiAqLwoKZnVuY3Rp
b24gYXJjX3Nob3J0ZW5fdXJsKCR1cmwsICRtZXRob2Q9JycsICRhdHRzPWFycmF5KCkpCnsK
ICBnbG9iYWwgJHByZWZzOwoKICAkY2ggPSBjdXJsX2luaXQoKTsKICBjdXJsX3NldG9wdCgk
Y2gsIENVUkxPUFRfSEVBREVSLCAwKTsKICBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUkVU
VVJOVFJBTlNGRVIsIHRydWUpOwogIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9USU1FT1VU
LCAxMCk7CgogICR1dG0gPSBudWxsOwoKICBpZiAoIWVtcHR5KCRwcmVmc1snYXJjX3R3aXR0
ZXJfdXRtJ10pKSB7CgoJJHV0bSA9ICd1dG1fc291cmNlPXR3aXR0ZXIuY29tJnV0bV9tZWRp
dW09c29jaWFsJnV0bV9jYW1wYWlnbj1hcmNfdHdpdHRlciZ1dG1fY29udGVudD10eHA6JyAu
ICRhdHRzWydpZCddOwoJJHNlcGFyYXRvciA9IChwYXJzZV91cmwoJHVybCwgUEhQX1VSTF9R
VUVSWSkgPT0gTlVMTCkgPyAnPycgOiAnJic7CgkkdXJsIC49ICRzZXBhcmF0b3IgLiAkdXRt
OwoKICB9CgogIHN3aXRjaCAoJG1ldGhvZCkgewoJY2FzZSAnc21kJzogLy8gY3JlYXRlIGEg
c2hvcnRlbmVkIFVSTCB1c2luZyBTTUQgU2hvcnQgVVJMCgoJCSR1cmwgPSAhZW1wdHkoJGF0
dHNbJ2lkJ10pID8gaHUgLiAkYXR0c1snaWQnXSA6IGZhbHNlOwoJCSR1cmwgLj0gKCR1cmwh
PT1mYWxzZSAmJiAhZW1wdHkoJHV0bSkpID8gJz8nIC4gJHV0bSA6IGZhbHNlOwoJCXJldHVy
biAkdXJsOyBicmVhazsKCgljYXNlICdhcmNfdHdpdHRlcic6IC8vIG5hdGl2ZSBVUkwgc2hv
cnRlbmluZwoKCQkkdXJsID0gIWVtcHR5KCRhdHRzWydpZCddKSA/IFBST1RPQ09MIC4gJHBy
ZWZzWydhcmNfc2hvcnRfc2l0ZV91cmwnXSAuICcvJyAuICRhdHRzWydpZCddIDogZmFsc2U7
CgkJJHVybCAuPSAoJHVybCE9PWZhbHNlICYmICFlbXB0eSgkdXRtKSkgPyAnPycgLiAkdXRt
IDogZmFsc2U7CgkJcmV0dXJuICR1cmw7CgkJYnJlYWs7CgoJY2FzZSAnaXNnZCc6CgoJCSR1
ID0gJ2h0dHA6Ly9pcy5nZC9hcGkucGhwP2xvbmd1cmw9Jy51cmxlbmNvZGUoJHVybCk7CgkJ
Y3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1VSTCwgJHUpOwoKCQkkdGlueXVybCA9IGN1cmxf
ZXhlYygkY2gpOwoJCWlmICgkdGlueXVybCE9J0Vycm9yJyAmJiAkdGlueXVybCE9JycpIHsK
CQkJcmV0dXJuICR0aW55dXJsOwoJCX0gZWxzZSB7CgkJCXRyaWdnZXJfZXJyb3IoJ2FyY190
d2l0dGVyIGZhaWxlZCB0byBnZXQgYSBpcy5nZCBVUkwgZm9yICcKCQkJCS4kdXJsLEVfVVNF
Ul9XQVJOSU5HKTsKCQl9CgkJYnJlYWs7CgoJY2FzZSAndGlueXVybCc6IC8vIGNyZWF0ZSBh
IHNob3J0ZW5lZCBVUkwgdXNpbmcgVGlueVVSTAoKCQkkdSA9ICdodHRwOi8vdGlueXVybC5j
b20vYXBpLWNyZWF0ZS5waHA/dXJsPScudXJsZW5jb2RlKCR1cmwpOwoJCWN1cmxfc2V0b3B0
KCRjaCwgQ1VSTE9QVF9VUkwsICR1KTsKCQkkdGlueXVybCA9IGN1cmxfZXhlYygkY2gpOwoJ
CWlmICgkdGlueXVybCE9J0Vycm9yJyAmJiAkdGlueXVybCE9JycpIHsKCQkJcmV0dXJuICR0
aW55dXJsOwoJCX0gZWxzZSB7CgkJCXRyaWdnZXJfZXJyb3IoJ2FyY190d2l0dGVyIGZhaWxl
ZCB0byBnZXQgYSBUaW55VVJMIGZvciAnLiR1cmwsRV9VU0VSX1dBUk5JTkcpOwoJCX0KCglk
ZWZhdWx0OgoKCQlyZXR1cm4gJHVybDsKCiAgfQoKICByZXR1cm4gZmFsc2U7IC8vIGZhaWwK
Cn0KCi8qCiAqIFNob3J0ZW5lZCBVUkwgcmVkaXJlY3QgYmFzZWQgb24gc21kX3Nob3J0X3Vy
bAogKi8KZnVuY3Rpb24gYXJjX3Nob3J0X3VybF9yZWRpcmVjdCgkZXZlbnQsICRzdGVwKSB7
CiAgZ2xvYmFsICRwcmVmczsKCiAgJGhhdmVfaWQgPSAwOwoKICAvLyBDaGVjayBpZiB0aGVy
ZSBpcyBhbiBhdmFpbGFibGUgc2hvcnQgc2l0ZSB1cmwgYW5kIGlmIGl0IGlzIGJlaW5nIHVz
ZWQgaW4KICAvLyB0aGlzIGluc3RhbmNlCiAgJHNob3J0X3NpdGVfdXJsID0gJHByZWZzWydh
cmNfc2hvcnRfc2l0ZV91cmwnXTsKICBpZiAoJHNob3J0X3NpdGVfdXJsKSB7Cgkkc2hvcnRf
c2l0ZV91cmwgPSBQUk9UT0NPTC4kc2hvcnRfc2l0ZV91cmwuJy8nOwoJJHVybF9wYXJ0cyA9
IHBhcnNlX3VybCgkc2hvcnRfc2l0ZV91cmwpOwoJJHJlID0gJyNeJy4kdXJsX3BhcnRzWydw
YXRoJ10uJyhbMC05XS4qKSMnOwoJJGhhdmVfaWQgPSBwcmVnX21hdGNoKCRyZSwgJF9TRVJW
RVJbJ1JFUVVFU1RfVVJJJ10sICRtKTsKICB9CgogIC8vIEZhbGwgYmFjayB0byBzdGFuZGFy
ZCBzaXRlIHVybCAoc21kX3Nob3J0X3VybCBiZWhhdmlvdXIpCiAgaWYgKCRoYXZlX2lkKSB7
CgkkdXJsX3BhcnRzID0gcGFyc2VfdXJsKGh1KTsKCSRyZSA9ICcjXicuJHVybF9wYXJ0c1sn
cGF0aCddLicoWzAtOV0uKikjJzsKCSRoYXZlX2lkID0gcHJlZ19tYXRjaCgkcmUsICRfU0VS
VkVSWydSRVFVRVNUX1VSSSddLCAkbSk7CiAgfQoKICAvLyBEbyB0aGUgcmVkaXJlY3QgaWYg
d2UndmUgZ290IGFuIGFydGljbGUgaWQKICBpZiAoJGhhdmVfaWQpIHsKCSRpZCA9ICRtWzFd
OwoJJHBlcm1saW5rID0gcGVybWxpbmt1cmxfaWQoJGlkKTsKCglpZiAoJHBlcm1saW5rKSB7
CgkgIG9iX2VuZF9jbGVhbigpOwoKCSAgLy8gU3R1cGlkLCBvdmVyIHRoZSB0b3AgaGVhZGVy
IHNldHRpbmcgZm9yIElFCgkgIGhlYWRlcigiU3RhdHVzOiAzMDEiKTsKCSAgaGVhZGVyKCJI
VFRQLzEuMCAzMDEgTW92ZWQgUGVybWFuZW50bHkiKTsKCSAgaGVhZGVyKCJMb2NhdGlvbjog
Ii4kcGVybWxpbmssIFRSVUUsIDMwMSk7CgoJICAvLyBJbiBjYXNlIHRoZSBoZWFkZXIoKSBt
ZXRob2QgZmFpbHMsIGZhbGwgYmFjayBvbiBhIGNsYXNzaWMgcmVkaXJlY3QKCSAgZWNobyAn
PGh0bWw+PGhlYWQ+PE1FVEEgSFRUUC1FUVVJVj0iUmVmcmVzaCIgQ09OVEVOVD0iMDtVUkw9
JwoJCS4kcGVybWxpbmsuJyI+PC9oZWFkPjxib2R5PjwvYm9keT48L2h0bWw+JzsKCSAgZGll
KCk7Cgl9CiAgfQoKfQoKLy8gQXV0byBlbmFibGUgcGx1Z2luIG9uIGluc3RhbGwgKG9yaWdp
bmFsIGlkZWEgYnkgTWljaGFlbCBNYW5mcmUpCmZ1bmN0aW9uIF9hcmNfdHdpdHRlcl9hdXRv
X2VuYWJsZSgkZXZlbnQsICRzdGVwLCAkcHJlZml4PSdhcmNfdHdpdHRlcicpCnsKICAkcGx1
Z2luID0gc3Vic3RyKCRldmVudCwgc3RybGVuKCdwbHVnaW5fbGlmZWN5Y2xlLicpKTsKICBp
ZiAoc3RybmNtcCgkcGx1Z2luLCAkcHJlZml4LCBzdHJsZW4oJHByZWZpeCkpID09IDApCiAg
ewoJc2FmZV91cGRhdGUoJ3R4cF9wbHVnaW4nLCAic3RhdHVzID0gMSIsICJuYW1lID0gJyIg
LiBkb1NsYXNoKCRwbHVnaW4pIC4gIiciKTsKICB9Cn0KCi8qCiAqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqCiovCgpjbGFzcyBhcmNfdHdpdHRlciBleHRlbmRzIFR3aXR0ZXJPQXV0aCB7
CgkvLyBDYWNoaW5nIHZhcmlhYmxlcwoJcHJpdmF0ZSAkX2NhY2hlID0gdHJ1ZTsKCXByaXZh
dGUgJF9jYWNoZV9kaXIgPSAnLi90bXAnOwoJcHJpdmF0ZSAkX2NhY2hlX3RpbWUgPSAxODAw
OyAvLyAzMCBtaW51dGUgY2FjaGUKCglmdW5jdGlvbiBfX2NvbnN0cnVjdCgkY29uc3VtZXJf
a2V5LCAkY29uc3VtZXJfc2VjcmV0LCAkb2F1dGhfdG9rZW4gPSBOVUxMCgkJLCAkb2F1dGhf
dG9rZW5fc2VjcmV0ID0gTlVMTCkKCXsKCQlwYXJlbnQ6Ol9fY29uc3RydWN0KCRjb25zdW1l
cl9rZXksICRjb25zdW1lcl9zZWNyZXQsICRvYXV0aF90b2tlbgoJCQksICRvYXV0aF90b2tl
bl9zZWNyZXQpOwoJCSR0aGlzLT5mb3JtYXQgPSAnanNvbic7CgkJJHRoaXMtPnRpbWVvdXQg
PSAxNTsKCQkkdGhpcy0+Y29ubmVjdHRpbWVvdXQgPSAxNTsKCX0KCglwdWJsaWMgZnVuY3Rp
b24gY2FsbGJhY2tVUkwoJGV2ZW50LCRzdGVwKQoJewoJCXJldHVybiBwcmVnX3JlcGxhY2Uo
Jy9cPy4qLycsICcnLFBST1RPQ09MLiRfU0VSVkVSWydTRVJWRVJfTkFNRSddLiRfU0VSVkVS
WydSRVFVRVNUX1VSSSddKQoJCSAgLic/ZXZlbnQ9Jy4kZXZlbnQuJyZhbXA7c3RlcD0nLiRz
dGVwOwoJfQoKCS8vIGNyZWF0ZSBUd2l0dGVyIGFuZCBleHRlcm5hbCBsaW5rcyBpbiB0ZXh0
CglwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIG1ha2VMaW5rcygkdGV4dCwgJHVybHMgPSBmYWxz
ZSwgJGV4cGFuZGVkVXJscyA9IGZhbHNlKQoJewoJCWlmICgkdXJscyE9PWZhbHNlKSB7CgoJ
CQlmb3JlYWNoICgkdXJscyBhcyAkdGNvVXJsID0+ICR1cmwpCgkJCXsKCQkJCWlmICghJGV4
cGFuZGVkVXJscykKCQkJCXsKCQkJCQkkdXJsWydleHBhbmRlZF91cmwnXSA9ICR0Y29Vcmw7
CgkJCQkJJHVybFsnZGlzcGxheV91cmwnXSA9IHByZWdfcmVwbGFjZSgnfF5odHRwcz86XC9c
L3xpJywgJycsICR0Y29VcmwpOwoJCQkJfQoJCQkJJHRleHQgPSBzdHJfcmVwbGFjZSgKCQkJ
CQkkdGNvVXJsLAoJCQkJCSI8YSBocmVmPSd7JHVybFsnZXhwYW5kZWRfdXJsJ119Jz57JHVy
bFsnZGlzcGxheV91cmwnXX08L2E+IiwKCQkJCQkkdGV4dAoJCQkJKTsKCQkJfQoKCQl9CgkJ
ZWxzZWlmICgkdXJscyE9PWZhbHNlKQoJCXsKCgkJfQoJCWVsc2UKCQl7CgkJCSRsaW5rcyA9
IGFycmF5KAoJCQkJJy9cYihodHRwfGh0dHBzfGZ0cCk6XC9cLyhbQS1aMC05XVtBLVowLTlf
LV0qKD86XC5bQS1aMC05XVtBLVowLTlfLV0qKSspOj8oXGQrKT9cLz8oW1wvXHcrLVwuXSsp
KFw/W1wuYS16PSYwLTQ6Xy1dKyl7MCwxfVxiL2knID0+ICI8YSBocmVmPSckMCcgcmVsPSdl
eHRlcm5hbCc+JDIkMyQ0PC9hPiIsCgkJCQknL1xiKF58XHMpd3d3LihbYS16X0EtWjAtOV0r
KSgoXC5bYS16XSspKylcYi9pJyA9PiAiPGEgaHJlZj0naHR0cDovL3d3dy4kMiQzJyByZWw9
J2V4dGVybmFsJz53d3cuJDIkMzwvYT4iCgkJCSk7CgkJCSR0ZXh0ID0gcHJlZ19yZXBsYWNl
KAoJCQkJYXJyYXlfa2V5cygkbGlua3MpLAoJCQkJYXJyYXlfdmFsdWVzKCRsaW5rcyksCgkJ
CQkkdGV4dAoJCQkpOwoJCX0KCgkJJGxpbmtzID0gYXJyYXkoCgkJCScvKF58XHMpLj9AKFth
LXpfQS1aMC05XSspLycgPT4gIiQxPGEgaHJlZj0naHR0cDovL3R3aXR0ZXIuY29tLyQyJyBy
ZWw9J2V4dGVybmFsJz5AJDI8L2E+IiwKCQkJJy8oXnxccykoXCMoW2Etel9BLVowLTk6Xy1d
KykpLycgPT4gIiQxPGEgaHJlZj0naHR0cDovL3R3aXR0ZXIuY29tL3NlYXJjaD9xPSUyMyQz
JyByZWw9J2V4dGVybmFsJz4kMjwvYT4iCgkJKTsKCQlyZXR1cm4gcHJlZ19yZXBsYWNlKAoJ
CQlhcnJheV9rZXlzKCRsaW5rcyksCgkJCWFycmF5X3ZhbHVlcygkbGlua3MpLAoJCQkkdGV4
dAoJCSk7CiAgfQoKCXB1YmxpYyBmdW5jdGlvbiBnZXQoJHVybCwgJHBhcmFtcyA9IGFycmF5
KCkpCgl7CgkJJGFwaV91cmwgPSBtZDUoJHVybC51cmxlbmNvZGUoc2VyaWFsaXplKCRwYXJh
bXMpKSk7CgkJJGRhdGEgPSAnJzsKCgkJaWYgKCR0aGlzLT5fY2FjaGUpIHsgLy8gY2hlY2sg
Zm9yIGNhY2hlZCBqc29uCgoJCQkkZGF0YSA9ICR0aGlzLT5fcmV0cmlldmVDYWNoZSgkYXBp
X3VybCk7CgoJCX0KCQlpZiAoZW1wdHkoJGRhdGEpKSB7CgkJCSRkYXRhID0gcGFyZW50Ojpn
ZXQoJHVybCwgJHBhcmFtcyk7IC8vIGRhdGEgYWxyZWFkeSBqc29uX2RlY29kZSdkCgkJCWlm
ICgkdGhpcy0+aHR0cF9jb2RlPT09MjAwICYmICRlbmNvZGVkX2RhdGE9anNvbl9lbmNvZGUo
JGRhdGEpKSB7IC8vIHNhdmUgY2FjaGUKCQkJCSRmaWxlID0gJHRoaXMtPl9jYWNoZV9kaXIu
Jy8nLiRhcGlfdXJsOwoJCQkJZmlsZV9wdXRfY29udGVudHMoJGZpbGUsJGVuY29kZWRfZGF0
YSxMT0NLX0VYKTsKCQkJCXJldHVybiAkZGF0YTsKCQkJfSBlbHNlIHsgLy8gZmFpbGVkIHRv
IHJldHJpZXZlIGRhdGEgZnJvbSBUd2l0dGVyCgoJCQkJaWYgKCR0aGlzLT5fY2FjaGUpIHsg
Ly8gYXR0ZW1wdCB0byBmb3JjZSBjYWNoZWQganNvbiByZXR1cm4KCgkJCQkJJGRhdGEgPSAk
dGhpcy0+X3JldHJpZXZlQ2FjaGUoJGFwaV91cmwsdHJ1ZSk7CgkJCQkJaWYgKCRkYXRhKSBy
ZXR1cm4ganNvbl9kZWNvZGUoJGRhdGEpOwoKCQkJCX0KCgkJCQlyZXR1cm4gZmFsc2U7CgoJ
CQl9CgkJfSBlbHNlIHsgLy8gcmV0dXJuIGNhY2hlZCBqc29uCgkJCXJldHVybiBqc29uX2Rl
Y29kZSgkZGF0YSk7CgkJfQoJfSAvL2VuZCBnZXQoKQoKCWZ1bmN0aW9uIHBvc3QoJHVybCwg
JHBhcmFtcyA9IGFycmF5KCkpCgl7CgkJJGRhdGEgPSBwYXJlbnQ6OnBvc3QoJHVybCwkcGFy
YW1zKTsKCQlyZXR1cm4gJGRhdGE7Cgl9CgoJZnVuY3Rpb24gZGVsZXRlKCR1cmwsICRwYXJh
bXMgPSBhcnJheSgpKQoJewoJCSRkYXRhID0gcGFyZW50OjpkZWxldGUoJHVybCwkcGFyYW1z
KTsKCQlyZXR1cm4gJGRhdGE7Cgl9CgoJLy8gQ2FjaGUgbWV0aG9kcwoKCXB1YmxpYyBmdW5j
dGlvbiBzZXRDYWNoaW5nKCRjYWNoZT10cnVlKQoJewoJCSR0aGlzLT5fY2FjaGUgPSAoJGNh
Y2hlKSA/IHRydWUgOiBmYWxzZTsKCQlyZXR1cm4gdHJ1ZTsKCX0KCglwdWJsaWMgZnVuY3Rp
b24gY2FjaGVEaXIoJGxvYykKCXsKCQkkdGhpcy0+X2NhY2hlX2RpciA9ICRsb2M7CgkJcmV0
dXJuIHRydWU7Cgl9CgoJcHVibGljIGZ1bmN0aW9uIGNhY2hlVGltZSgkbWlucykKCXsKCQkk
dGhpcy0+X2NhY2hlX3RpbWUgPSAkbWlucyo2MDsgLy8gY29udmVydCBtaW51dGVzIGludG8g
c2Vjb25kcwoJCXJldHVybiB0cnVlOwoJfQoKCXByaXZhdGUgZnVuY3Rpb24gX3JldHJpZXZl
Q2FjaGUoJHVybCwkb3ZlcmlkZV90aW1lb3V0PWZhbHNlKQoJewoJCSRmaWxlID0gJHRoaXMt
Pl9jYWNoZV9kaXIuJy8nLiR1cmw7CgkJaWYgKGZpbGVfZXhpc3RzKCRmaWxlKSkgewoKCQkJ
JGRpZmYgPSB0aW1lKCkgLSBmaWxlbXRpbWUoJGZpbGUpOwoJCQlpZiAoJG92ZXJpZGVfdGlt
ZW91dCB8fCAkZGlmZiA8ICR0aGlzLT5fY2FjaGVfdGltZSkgewoJCQkJcmV0dXJuIGZpbGVf
Z2V0X2NvbnRlbnRzKCRmaWxlKTsKCQkJfSBlbHNlIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJ
fQoKCQl9IGVsc2UgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoJfQp9CgovKgogKiBBYnJhaGFt
IFdpbGxpYW1zIChhYnJhaGFtQGFicmFoLmFtKSBodHRwOi8vYWJyYWguYW0KICoKICogVGhl
IGZpcnN0IFBIUCBMaWJyYXJ5IHRvIHN1cHBvcnQgT0F1dGggZm9yIFR3aXR0ZXIncyBSRVNU
IEFQSS4KICovCgovKioKICogVHdpdHRlciBPQXV0aCBjbGFzcwogKi8KY2xhc3MgVHdpdHRl
ck9BdXRoIHsKICAvKiBDb250YWlucyB0aGUgbGFzdCBIVFRQIHN0YXR1cyBjb2RlIHJldHVy
bmVkLiAqLwogIHB1YmxpYyAkaHR0cF9jb2RlOwogIC8qIENvbnRhaW5zIHRoZSBsYXN0IEFQ
SSBjYWxsLiAqLwogIHB1YmxpYyAkdXJsOwogIC8qIFNldCB1cCB0aGUgQVBJIHJvb3QgVVJM
LiAqLwogIHB1YmxpYyAkaG9zdCA9ICJodHRwczovL2FwaS50d2l0dGVyLmNvbS8xLjEvIjsK
ICAvKiBTZXQgdGltZW91dCBkZWZhdWx0LiAqLwogIHB1YmxpYyAkdGltZW91dCA9IDMwOwog
IC8qIFNldCBjb25uZWN0IHRpbWVvdXQuICovCiAgcHVibGljICRjb25uZWN0dGltZW91dCA9
IDMwOwogIC8qIFZlcmlmeSBTU0wgQ2VydC4gKi8KICBwdWJsaWMgJHNzbF92ZXJpZnlwZWVy
ID0gRkFMU0U7CiAgLyogUmVzcG9ucyBmb3JtYXQuICovCiAgcHVibGljICRmb3JtYXQgPSAn
anNvbic7CiAgLyogRGVjb2RlIHJldHVybmVkIGpzb24gZGF0YS4gKi8KICBwdWJsaWMgJGRl
Y29kZV9qc29uID0gVFJVRTsKICAvKiBDb250YWlucyB0aGUgbGFzdCBIVFRQIGhlYWRlcnMg
cmV0dXJuZWQuICovCiAgcHVibGljICRodHRwX2luZm87CiAgLyogU2V0IHRoZSB1c2VyYWdu
ZXQuICovCiAgcHVibGljICR1c2VyYWdlbnQgPSAnVHdpdHRlck9BdXRoIHYwLjIuMC1iZXRh
Mic7CiAgLyogSW1tZWRpYXRlbHkgcmV0cnkgdGhlIEFQSSBjYWxsIGlmIHRoZSByZXNwb25z
ZSB3YXMgbm90IHN1Y2Nlc3NmdWwuICovCiAgLy9wdWJsaWMgJHJldHJ5ID0gVFJVRTsKCiAg
LyoqCiAgICogU2V0IEFQSSBVUkxTCiAgICovCiAgZnVuY3Rpb24gYWNjZXNzVG9rZW5VUkwo
KSAgeyByZXR1cm4gJ2h0dHBzOi8vYXBpLnR3aXR0ZXIuY29tL29hdXRoL2FjY2Vzc190b2tl
bic7IH0KICBmdW5jdGlvbiBhdXRoZW50aWNhdGVVUkwoKSB7IHJldHVybiAnaHR0cHM6Ly9h
cGkudHdpdHRlci5jb20vb2F1dGgvYXV0aGVudGljYXRlJzsgfQogIGZ1bmN0aW9uIGF1dGhv
cml6ZVVSTCgpICAgIHsgcmV0dXJuICdodHRwczovL2FwaS50d2l0dGVyLmNvbS9vYXV0aC9h
dXRob3JpemUnOyB9CiAgZnVuY3Rpb24gcmVxdWVzdFRva2VuVVJMKCkgeyByZXR1cm4gJ2h0
dHBzOi8vYXBpLnR3aXR0ZXIuY29tL29hdXRoL3JlcXVlc3RfdG9rZW4nOyB9CgogIC8qKgog
ICAqIERlYnVnIGhlbHBlcnMKICAgKi8KICBmdW5jdGlvbiBsYXN0U3RhdHVzQ29kZSgpIHsg
cmV0dXJuICR0aGlzLT5odHRwX3N0YXR1czsgfQogIGZ1bmN0aW9uIGxhc3RBUElDYWxsKCkg
eyByZXR1cm4gJHRoaXMtPmxhc3RfYXBpX2NhbGw7IH0KCiAgLyoqCiAgICogY29uc3RydWN0
IFR3aXR0ZXJPQXV0aCBvYmplY3QKICAgKi8KICBmdW5jdGlvbiBfX2NvbnN0cnVjdCgkY29u
c3VtZXJfa2V5LCAkY29uc3VtZXJfc2VjcmV0LCAkb2F1dGhfdG9rZW4gPSBOVUxMLCAkb2F1
dGhfdG9rZW5fc2VjcmV0ID0gTlVMTCkgewoJJHRoaXMtPnNoYTFfbWV0aG9kID0gbmV3IE9B
dXRoU2lnbmF0dXJlTWV0aG9kX0hNQUNfU0hBMSgpOwoJJHRoaXMtPmNvbnN1bWVyID0gbmV3
IE9BdXRoQ29uc3VtZXIoJGNvbnN1bWVyX2tleSwgJGNvbnN1bWVyX3NlY3JldCk7CglpZiAo
IWVtcHR5KCRvYXV0aF90b2tlbikgJiYgIWVtcHR5KCRvYXV0aF90b2tlbl9zZWNyZXQpKSB7
CgkgICR0aGlzLT50b2tlbiA9IG5ldyBPQXV0aENvbnN1bWVyKCRvYXV0aF90b2tlbiwgJG9h
dXRoX3Rva2VuX3NlY3JldCk7Cgl9IGVsc2UgewoJICAkdGhpcy0+dG9rZW4gPSBOVUxMOwoJ
fQogIH0KCgogIC8qKgogICAqIEdldCBhIHJlcXVlc3RfdG9rZW4gZnJvbSBUd2l0dGVyCiAg
ICoKICAgKiBAcmV0dXJucyBhIGtleS92YWx1ZSBhcnJheSBjb250YWluaW5nIG9hdXRoX3Rv
a2VuIGFuZCBvYXV0aF90b2tlbl9zZWNyZXQKICAgKi8KICBmdW5jdGlvbiBnZXRSZXF1ZXN0
VG9rZW4oJG9hdXRoX2NhbGxiYWNrKSB7CgkkcGFyYW1ldGVycyA9IGFycmF5KCk7CgkkcGFy
YW1ldGVyc1snb2F1dGhfY2FsbGJhY2snXSA9ICRvYXV0aF9jYWxsYmFjazsKCSRyZXF1ZXN0
ID0gJHRoaXMtPm9BdXRoUmVxdWVzdCgkdGhpcy0+cmVxdWVzdFRva2VuVVJMKCksICdHRVQn
LCAkcGFyYW1ldGVycyk7CgkkdG9rZW4gPSBPQXV0aFV0aWw6OnBhcnNlX3BhcmFtZXRlcnMo
JHJlcXVlc3QpOwoJJHRoaXMtPnRva2VuID0gbmV3IE9BdXRoQ29uc3VtZXIoJHRva2VuWydv
YXV0aF90b2tlbiddLCAkdG9rZW5bJ29hdXRoX3Rva2VuX3NlY3JldCddKTsKCXJldHVybiAk
dG9rZW47CiAgfQoKICAvKioKICAgKiBHZXQgdGhlIGF1dGhvcml6ZSBVUkwKICAgKgogICAq
IEByZXR1cm5zIGEgc3RyaW5nCiAgICovCiAgZnVuY3Rpb24gZ2V0QXV0aG9yaXplVVJMKCR0
b2tlbiwgJHNpZ25faW5fd2l0aF90d2l0dGVyID0gVFJVRSkgewoJaWYgKGlzX2FycmF5KCR0
b2tlbikpIHsKCSAgJHRva2VuID0gJHRva2VuWydvYXV0aF90b2tlbiddOwoJfQoJaWYgKGVt
cHR5KCRzaWduX2luX3dpdGhfdHdpdHRlcikpIHsKCSAgcmV0dXJuICR0aGlzLT5hdXRob3Jp
emVVUkwoKSAuICI/b2F1dGhfdG9rZW49eyR0b2tlbn0iOwoJfSBlbHNlIHsKCSAgIHJldHVy
biAkdGhpcy0+YXV0aGVudGljYXRlVVJMKCkgLiAiP29hdXRoX3Rva2VuPXskdG9rZW59IjsK
CX0KICB9CgogIC8qKgogICAqIEV4Y2hhbmdlIHJlcXVlc3QgdG9rZW4gYW5kIHNlY3JldCBm
b3IgYW4gYWNjZXNzIHRva2VuIGFuZAogICAqIHNlY3JldCwgdG8gc2lnbiBBUEkgY2FsbHMu
CiAgICoKICAgKiBAcmV0dXJucyBhcnJheSgib2F1dGhfdG9rZW4iID0+ICJ0aGUtYWNjZXNz
LXRva2VuIiwKICAgKiAgICAgICAgICAgICAgICAib2F1dGhfdG9rZW5fc2VjcmV0IiA9PiAi
dGhlLWFjY2Vzcy1zZWNyZXQiLAogICAqICAgICAgICAgICAgICAgICJ1c2VyX2lkIiA9PiAi
OTQzNjk5MiIsCiAgICogICAgICAgICAgICAgICAgInNjcmVlbl9uYW1lIiA9PiAiYWJyYWhh
bSIpCiAgICovCiAgZnVuY3Rpb24gZ2V0QWNjZXNzVG9rZW4oJG9hdXRoX3ZlcmlmaWVyKSB7
CgkkcGFyYW1ldGVycyA9IGFycmF5KCk7CgkkcGFyYW1ldGVyc1snb2F1dGhfdmVyaWZpZXIn
XSA9ICRvYXV0aF92ZXJpZmllcjsKCSRyZXF1ZXN0ID0gJHRoaXMtPm9BdXRoUmVxdWVzdCgk
dGhpcy0+YWNjZXNzVG9rZW5VUkwoKSwgJ0dFVCcsICRwYXJhbWV0ZXJzKTsKCSR0b2tlbiA9
IE9BdXRoVXRpbDo6cGFyc2VfcGFyYW1ldGVycygkcmVxdWVzdCk7CgkkdGhpcy0+dG9rZW4g
PSBuZXcgT0F1dGhDb25zdW1lcigkdG9rZW5bJ29hdXRoX3Rva2VuJ10sICR0b2tlblsnb2F1
dGhfdG9rZW5fc2VjcmV0J10pOwoJcmV0dXJuICR0b2tlbjsKICB9CgogIC8qKgogICAqIE9u
ZSB0aW1lIGV4Y2hhbmdlIG9mIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBmb3IgYWNjZXNzIHRv
a2VuIGFuZCBzZWNyZXQuCiAgICoKICAgKiBAcmV0dXJucyBhcnJheSgib2F1dGhfdG9rZW4i
ID0+ICJ0aGUtYWNjZXNzLXRva2VuIiwKICAgKiAgICAgICAgICAgICAgICAib2F1dGhfdG9r
ZW5fc2VjcmV0IiA9PiAidGhlLWFjY2Vzcy1zZWNyZXQiLAogICAqICAgICAgICAgICAgICAg
ICJ1c2VyX2lkIiA9PiAiOTQzNjk5MiIsCiAgICogICAgICAgICAgICAgICAgInNjcmVlbl9u
YW1lIiA9PiAiYWJyYWhhbSIsCiAgICogICAgICAgICAgICAgICAgInhfYXV0aF9leHBpcmVz
IiA9PiAiMCIpCiAgICovCiAgZnVuY3Rpb24gZ2V0WEF1dGhUb2tlbigkdXNlcm5hbWUsICRw
YXNzd29yZCkgewoJJHBhcmFtZXRlcnMgPSBhcnJheSgpOwoJJHBhcmFtZXRlcnNbJ3hfYXV0
aF91c2VybmFtZSddID0gJHVzZXJuYW1lOwoJJHBhcmFtZXRlcnNbJ3hfYXV0aF9wYXNzd29y
ZCddID0gJHBhc3N3b3JkOwoJJHBhcmFtZXRlcnNbJ3hfYXV0aF9tb2RlJ10gPSAnY2xpZW50
X2F1dGgnOwoJJHJlcXVlc3QgPSAkdGhpcy0+b0F1dGhSZXF1ZXN0KCR0aGlzLT5hY2Nlc3NU
b2tlblVSTCgpLCAnUE9TVCcsICRwYXJhbWV0ZXJzKTsKCSR0b2tlbiA9IE9BdXRoVXRpbDo6
cGFyc2VfcGFyYW1ldGVycygkcmVxdWVzdCk7CgkkdGhpcy0+dG9rZW4gPSBuZXcgT0F1dGhD
b25zdW1lcigkdG9rZW5bJ29hdXRoX3Rva2VuJ10sICR0b2tlblsnb2F1dGhfdG9rZW5fc2Vj
cmV0J10pOwoJcmV0dXJuICR0b2tlbjsKICB9CgogIC8qKgogICAqIEdFVCB3cmFwcGVyIGZv
ciBvQXV0aFJlcXVlc3QuCiAgICovCiAgZnVuY3Rpb24gZ2V0KCR1cmwsICRwYXJhbWV0ZXJz
ID0gYXJyYXkoKSkgewoJJHJlc3BvbnNlID0gJHRoaXMtPm9BdXRoUmVxdWVzdCgkdXJsLCAn
R0VUJywgJHBhcmFtZXRlcnMpOwoJaWYgKCR0aGlzLT5mb3JtYXQgPT09ICdqc29uJyAmJiAk
dGhpcy0+ZGVjb2RlX2pzb24pIHsKCSAgcmV0dXJuIGpzb25fZGVjb2RlKCRyZXNwb25zZSk7
Cgl9CglyZXR1cm4gJHJlc3BvbnNlOwogIH0KCiAgLyoqCiAgICogUE9TVCB3cmFwcGVyIGZv
ciBvQXV0aFJlcXVlc3QuCiAgICovCiAgZnVuY3Rpb24gcG9zdCgkdXJsLCAkcGFyYW1ldGVy
cyA9IGFycmF5KCkpIHsKCSRyZXNwb25zZSA9ICR0aGlzLT5vQXV0aFJlcXVlc3QoJHVybCwg
J1BPU1QnLCAkcGFyYW1ldGVycyk7CglpZiAoJHRoaXMtPmZvcm1hdCA9PT0gJ2pzb24nICYm
ICR0aGlzLT5kZWNvZGVfanNvbikgewoJICByZXR1cm4ganNvbl9kZWNvZGUoJHJlc3BvbnNl
KTsKCX0KCXJldHVybiAkcmVzcG9uc2U7CiAgfQoKICAvKioKICAgKiBERUxFVEUgd3JhcHBl
ciBmb3Igb0F1dGhSZXFldXN0LgogICAqLwogIGZ1bmN0aW9uIGRlbGV0ZSgkdXJsLCAkcGFy
YW1ldGVycyA9IGFycmF5KCkpIHsKCSRyZXNwb25zZSA9ICR0aGlzLT5vQXV0aFJlcXVlc3Qo
JHVybCwgJ0RFTEVURScsICRwYXJhbWV0ZXJzKTsKCWlmICgkdGhpcy0+Zm9ybWF0ID09PSAn
anNvbicgJiYgJHRoaXMtPmRlY29kZV9qc29uKSB7CgkgIHJldHVybiBqc29uX2RlY29kZSgk
cmVzcG9uc2UpOwoJfQoJcmV0dXJuICRyZXNwb25zZTsKICB9CgogIC8qKgogICAqIEZvcm1h
dCBhbmQgc2lnbiBhbiBPQXV0aCAvIEFQSSByZXF1ZXN0CiAgICovCiAgZnVuY3Rpb24gb0F1
dGhSZXF1ZXN0KCR1cmwsICRtZXRob2QsICRwYXJhbWV0ZXJzKSB7CglpZiAoc3RycnBvcygk
dXJsLCAnaHR0cHM6Ly8nKSAhPT0gMCAmJiBzdHJycG9zKCR1cmwsICdodHRwOi8vJykgIT09
IDApIHsKCSAgJHVybCA9ICJ7JHRoaXMtPmhvc3R9eyR1cmx9LnskdGhpcy0+Zm9ybWF0fSI7
Cgl9CgkkcmVxdWVzdCA9IE9BdXRoUmVxdWVzdDo6ZnJvbV9jb25zdW1lcl9hbmRfdG9rZW4o
JHRoaXMtPmNvbnN1bWVyLCAkdGhpcy0+dG9rZW4sICRtZXRob2QsICR1cmwsICRwYXJhbWV0
ZXJzKTsKCSRyZXF1ZXN0LT5zaWduX3JlcXVlc3QoJHRoaXMtPnNoYTFfbWV0aG9kLCAkdGhp
cy0+Y29uc3VtZXIsICR0aGlzLT50b2tlbik7Cglzd2l0Y2ggKCRtZXRob2QpIHsKCWNhc2Ug
J0dFVCc6CgkgIHJldHVybiAkdGhpcy0+aHR0cCgkcmVxdWVzdC0+dG9fdXJsKCksICdHRVQn
KTsKCWRlZmF1bHQ6CgkgIHJldHVybiAkdGhpcy0+aHR0cCgkcmVxdWVzdC0+Z2V0X25vcm1h
bGl6ZWRfaHR0cF91cmwoKSwgJG1ldGhvZCwgJHJlcXVlc3QtPnRvX3Bvc3RkYXRhKCkpOwoJ
fQogIH0KCiAgLyoqCiAgICogTWFrZSBhbiBIVFRQIHJlcXVlc3QKICAgKgogICAqIEByZXR1
cm4gQVBJIHJlc3VsdHMKICAgKi8KICBmdW5jdGlvbiBodHRwKCR1cmwsICRtZXRob2QsICRw
b3N0ZmllbGRzID0gTlVMTCkgewoJJHRoaXMtPmh0dHBfaW5mbyA9IGFycmF5KCk7CgkkY2kg
PSBjdXJsX2luaXQoKTsKCS8qIEN1cmwgc2V0dGluZ3MgKi8KCWN1cmxfc2V0b3B0KCRjaSwg
Q1VSTE9QVF9VU0VSQUdFTlQsICR0aGlzLT51c2VyYWdlbnQpOwoJY3VybF9zZXRvcHQoJGNp
LCBDVVJMT1BUX0NPTk5FQ1RUSU1FT1VULCAkdGhpcy0+Y29ubmVjdHRpbWVvdXQpOwoJY3Vy
bF9zZXRvcHQoJGNpLCBDVVJMT1BUX1RJTUVPVVQsICR0aGlzLT50aW1lb3V0KTsKCWN1cmxf
c2V0b3B0KCRjaSwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgVFJVRSk7CgljdXJsX3NldG9w
dCgkY2ksIENVUkxPUFRfSFRUUEhFQURFUiwgYXJyYXkoJ0V4cGVjdDonKSk7CgljdXJsX3Nl
dG9wdCgkY2ksIENVUkxPUFRfU1NMX1ZFUklGWVBFRVIsICR0aGlzLT5zc2xfdmVyaWZ5cGVl
cik7CgljdXJsX3NldG9wdCgkY2ksIENVUkxPUFRfSEVBREVSRlVOQ1RJT04sIGFycmF5KCR0
aGlzLCAnZ2V0SGVhZGVyJykpOwoJY3VybF9zZXRvcHQoJGNpLCBDVVJMT1BUX0hFQURFUiwg
RkFMU0UpOwoKCXN3aXRjaCAoJG1ldGhvZCkgewoJICBjYXNlICdQT1NUJzoKCQljdXJsX3Nl
dG9wdCgkY2ksIENVUkxPUFRfUE9TVCwgVFJVRSk7CgkJaWYgKCFlbXB0eSgkcG9zdGZpZWxk
cykpIHsKCQkgIGN1cmxfc2V0b3B0KCRjaSwgQ1VSTE9QVF9QT1NURklFTERTLCAkcG9zdGZp
ZWxkcyk7CgkJfQoJCWJyZWFrOwoJICBjYXNlICdERUxFVEUnOgoJCWN1cmxfc2V0b3B0KCRj
aSwgQ1VSTE9QVF9DVVNUT01SRVFVRVNULCAnREVMRVRFJyk7CgkJaWYgKCFlbXB0eSgkcG9z
dGZpZWxkcykpIHsKCQkgICR1cmwgPSAieyR1cmx9P3skcG9zdGZpZWxkc30iOwoJCX0KCX0K
CgljdXJsX3NldG9wdCgkY2ksIENVUkxPUFRfVVJMLCAkdXJsKTsKCSRyZXNwb25zZSA9IGN1
cmxfZXhlYygkY2kpOwoJJHRoaXMtPmh0dHBfY29kZSA9IGN1cmxfZ2V0aW5mbygkY2ksIENV
UkxJTkZPX0hUVFBfQ09ERSk7CgkkdGhpcy0+aHR0cF9pbmZvID0gYXJyYXlfbWVyZ2UoJHRo
aXMtPmh0dHBfaW5mbywgY3VybF9nZXRpbmZvKCRjaSkpOwoJJHRoaXMtPnVybCA9ICR1cmw7
CgljdXJsX2Nsb3NlICgkY2kpOwoJcmV0dXJuICRyZXNwb25zZTsKICB9CgogIC8qKgogICAq
IEdldCB0aGUgaGVhZGVyIGluZm8gdG8gc3RvcmUuCiAgICovCiAgZnVuY3Rpb24gZ2V0SGVh
ZGVyKCRjaCwgJGhlYWRlcikgewoJJGkgPSBzdHJwb3MoJGhlYWRlciwgJzonKTsKCWlmICgh
ZW1wdHkoJGkpKSB7CgkgICRrZXkgPSBzdHJfcmVwbGFjZSgnLScsICdfJywgc3RydG9sb3dl
cihzdWJzdHIoJGhlYWRlciwgMCwgJGkpKSk7CgkgICR2YWx1ZSA9IHRyaW0oc3Vic3RyKCRo
ZWFkZXIsICRpICsgMikpOwoJICAkdGhpcy0+aHR0cF9oZWFkZXJbJGtleV0gPSAkdmFsdWU7
Cgl9CglyZXR1cm4gc3RybGVuKCRoZWFkZXIpOwogIH0KfQovKiBHZW5lcmljIGV4Y2VwdGlv
biBjbGFzcwogKi8KaWYgKCFjbGFzc19leGlzdHMoJ09BdXRoRXhjZXB0aW9uJykpIHsKICBj
bGFzcyBPQXV0aEV4Y2VwdGlvbiBleHRlbmRzIEV4Y2VwdGlvbiB7CgkvLyBwYXNzCiAgfQp9
CgpjbGFzcyBPQXV0aENvbnN1bWVyIHsKICBwdWJsaWMgJGtleTsKICBwdWJsaWMgJHNlY3Jl
dDsKCiAgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJGtleSwgJHNlY3JldCwgJGNhbGxiYWNrX3Vy
bD1OVUxMKSB7CgkkdGhpcy0+a2V5ID0gJGtleTsKCSR0aGlzLT5zZWNyZXQgPSAkc2VjcmV0
OwoJJHRoaXMtPmNhbGxiYWNrX3VybCA9ICRjYWxsYmFja191cmw7CiAgfQoKICBmdW5jdGlv
biBfX3RvU3RyaW5nKCkgewoJcmV0dXJuICJPQXV0aENvbnN1bWVyW2tleT0kdGhpcy0+a2V5
LHNlY3JldD0kdGhpcy0+c2VjcmV0XSI7CiAgfQp9CgpjbGFzcyBPQXV0aFRva2VuIHsKICAv
LyBhY2Nlc3MgdG9rZW5zIGFuZCByZXF1ZXN0IHRva2VucwogIHB1YmxpYyAka2V5OwogIHB1
YmxpYyAkc2VjcmV0OwoKICAvKioKICAgKiBrZXkgPSB0aGUgdG9rZW4KICAgKiBzZWNyZXQg
PSB0aGUgdG9rZW4gc2VjcmV0CiAgICovCiAgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJGtleSwg
JHNlY3JldCkgewoJJHRoaXMtPmtleSA9ICRrZXk7CgkkdGhpcy0+c2VjcmV0ID0gJHNlY3Jl
dDsKICB9CgogIC8qKgogICAqIGdlbmVyYXRlcyB0aGUgYmFzaWMgc3RyaW5nIHNlcmlhbGl6
YXRpb24gb2YgYSB0b2tlbiB0aGF0IGEgc2VydmVyCiAgICogd291bGQgcmVzcG9uZCB0byBy
ZXF1ZXN0X3Rva2VuIGFuZCBhY2Nlc3NfdG9rZW4gY2FsbHMgd2l0aAogICAqLwogIGZ1bmN0
aW9uIHRvX3N0cmluZygpIHsKCXJldHVybiAib2F1dGhfdG9rZW49IiAuCgkJICAgT0F1dGhV
dGlsOjp1cmxlbmNvZGVfcmZjMzk4NigkdGhpcy0+a2V5KSAuCgkJICAgIiZvYXV0aF90b2tl
bl9zZWNyZXQ9IiAuCgkJICAgT0F1dGhVdGlsOjp1cmxlbmNvZGVfcmZjMzk4NigkdGhpcy0+
c2VjcmV0KTsKICB9CgogIGZ1bmN0aW9uIF9fdG9TdHJpbmcoKSB7CglyZXR1cm4gJHRoaXMt
PnRvX3N0cmluZygpOwogIH0KfQoKLyoqCiAqIEEgY2xhc3MgZm9yIGltcGxlbWVudGluZyBh
IFNpZ25hdHVyZSBNZXRob2QKICogU2VlIHNlY3Rpb24gOSAoIlNpZ25pbmcgUmVxdWVzdHMi
KSBpbiB0aGUgc3BlYwogKi8KYWJzdHJhY3QgY2xhc3MgT0F1dGhTaWduYXR1cmVNZXRob2Qg
ewogIC8qKgogICAqIE5lZWRzIHRvIHJldHVybiB0aGUgbmFtZSBvZiB0aGUgU2lnbmF0dXJl
IE1ldGhvZCAoaWUgSE1BQy1TSEExKQogICAqIEByZXR1cm4gc3RyaW5nCiAgICovCiAgYWJz
dHJhY3QgcHVibGljIGZ1bmN0aW9uIGdldF9uYW1lKCk7CgogIC8qKgogICAqIEJ1aWxkIHVw
IHRoZSBzaWduYXR1cmUKICAgKiBOT1RFOiBUaGUgb3V0cHV0IG9mIHRoaXMgZnVuY3Rpb24g
TVVTVCBOT1QgYmUgdXJsZW5jb2RlZC4KICAgKiB0aGUgZW5jb2RpbmcgaXMgaGFuZGxlZCBp
biBPQXV0aFJlcXVlc3Qgd2hlbiB0aGUgZmluYWwKICAgKiByZXF1ZXN0IGlzIHNlcmlhbGl6
ZWQKICAgKiBAcGFyYW0gT0F1dGhSZXF1ZXN0ICRyZXF1ZXN0CiAgICogQHBhcmFtIE9BdXRo
Q29uc3VtZXIgJGNvbnN1bWVyCiAgICogQHBhcmFtIE9BdXRoVG9rZW4gJHRva2VuCiAgICog
QHJldHVybiBzdHJpbmcKICAgKi8KICBhYnN0cmFjdCBwdWJsaWMgZnVuY3Rpb24gYnVpbGRf
c2lnbmF0dXJlKCRyZXF1ZXN0LCAkY29uc3VtZXIsICR0b2tlbik7CgogIC8qKgogICAqIFZl
cmlmaWVzIHRoYXQgYSBnaXZlbiBzaWduYXR1cmUgaXMgY29ycmVjdAogICAqIEBwYXJhbSBP
QXV0aFJlcXVlc3QgJHJlcXVlc3QKICAgKiBAcGFyYW0gT0F1dGhDb25zdW1lciAkY29uc3Vt
ZXIKICAgKiBAcGFyYW0gT0F1dGhUb2tlbiAkdG9rZW4KICAgKiBAcGFyYW0gc3RyaW5nICRz
aWduYXR1cmUKICAgKiBAcmV0dXJuIGJvb2wKICAgKi8KICBwdWJsaWMgZnVuY3Rpb24gY2hl
Y2tfc2lnbmF0dXJlKCRyZXF1ZXN0LCAkY29uc3VtZXIsICR0b2tlbiwgJHNpZ25hdHVyZSkg
ewoJJGJ1aWx0ID0gJHRoaXMtPmJ1aWxkX3NpZ25hdHVyZSgkcmVxdWVzdCwgJGNvbnN1bWVy
LCAkdG9rZW4pOwoJcmV0dXJuICRidWlsdCA9PSAkc2lnbmF0dXJlOwogIH0KfQoKLyoqCiAq
IFRoZSBITUFDLVNIQTEgc2lnbmF0dXJlIG1ldGhvZCB1c2VzIHRoZSBITUFDLVNIQTEgc2ln
bmF0dXJlIGFsZ29yaXRobSBhcyBkZWZpbmVkIGluIFtSRkMyMTA0XQogKiB3aGVyZSB0aGUg
U2lnbmF0dXJlIEJhc2UgU3RyaW5nIGlzIHRoZSB0ZXh0IGFuZCB0aGUga2V5IGlzIHRoZSBj
b25jYXRlbmF0ZWQgdmFsdWVzIChlYWNoIGZpcnN0CiAqIGVuY29kZWQgcGVyIFBhcmFtZXRl
ciBFbmNvZGluZykgb2YgdGhlIENvbnN1bWVyIFNlY3JldCBhbmQgVG9rZW4gU2VjcmV0LCBz
ZXBhcmF0ZWQgYnkgYW4gJyYnCiAqIGNoYXJhY3RlciAoQVNDSUkgY29kZSAzOCkgZXZlbiBp
ZiBlbXB0eS4KICogICAtIENoYXB0ZXIgOS4yICgiSE1BQy1TSEExIikKICovCmNsYXNzIE9B
dXRoU2lnbmF0dXJlTWV0aG9kX0hNQUNfU0hBMSBleHRlbmRzIE9BdXRoU2lnbmF0dXJlTWV0
aG9kIHsKICBmdW5jdGlvbiBnZXRfbmFtZSgpIHsKCXJldHVybiAiSE1BQy1TSEExIjsKICB9
CgogIHB1YmxpYyBmdW5jdGlvbiBidWlsZF9zaWduYXR1cmUoJHJlcXVlc3QsICRjb25zdW1l
ciwgJHRva2VuKSB7CgkkYmFzZV9zdHJpbmcgPSAkcmVxdWVzdC0+Z2V0X3NpZ25hdHVyZV9i
YXNlX3N0cmluZygpOwoJJHJlcXVlc3QtPmJhc2Vfc3RyaW5nID0gJGJhc2Vfc3RyaW5nOwoK
CSRrZXlfcGFydHMgPSBhcnJheSgKCSAgJGNvbnN1bWVyLT5zZWNyZXQsCgkgICgkdG9rZW4p
ID8gJHRva2VuLT5zZWNyZXQgOiAiIgoJKTsKCgkka2V5X3BhcnRzID0gT0F1dGhVdGlsOjp1
cmxlbmNvZGVfcmZjMzk4Nigka2V5X3BhcnRzKTsKCSRrZXkgPSBpbXBsb2RlKCcmJywgJGtl
eV9wYXJ0cyk7CgoJcmV0dXJuIGJhc2U2NF9lbmNvZGUoaGFzaF9obWFjKCdzaGExJywgJGJh
c2Vfc3RyaW5nLCAka2V5LCB0cnVlKSk7CiAgfQp9CgovKioKICogVGhlIFBMQUlOVEVYVCBt
ZXRob2QgZG9lcyBub3QgcHJvdmlkZSBhbnkgc2VjdXJpdHkgcHJvdGVjdGlvbiBhbmQgU0hP
VUxEIG9ubHkgYmUgdXNlZAogKiBvdmVyIGEgc2VjdXJlIGNoYW5uZWwgc3VjaCBhcyBIVFRQ
Uy4gSXQgZG9lcyBub3QgdXNlIHRoZSBTaWduYXR1cmUgQmFzZSBTdHJpbmcuCiAqICAgLSBD
aGFwdGVyIDkuNCAoIlBMQUlOVEVYVCIpCiAqLwpjbGFzcyBPQXV0aFNpZ25hdHVyZU1ldGhv
ZF9QTEFJTlRFWFQgZXh0ZW5kcyBPQXV0aFNpZ25hdHVyZU1ldGhvZCB7CiAgcHVibGljIGZ1
bmN0aW9uIGdldF9uYW1lKCkgewoJcmV0dXJuICJQTEFJTlRFWFQiOwogIH0KCiAgLyoqCiAg
ICogb2F1dGhfc2lnbmF0dXJlIGlzIHNldCB0byB0aGUgY29uY2F0ZW5hdGVkIGVuY29kZWQg
dmFsdWVzIG9mIHRoZSBDb25zdW1lciBTZWNyZXQgYW5kCiAgICogVG9rZW4gU2VjcmV0LCBz
ZXBhcmF0ZWQgYnkgYSAnJicgY2hhcmFjdGVyIChBU0NJSSBjb2RlIDM4KSwgZXZlbiBpZiBl
aXRoZXIgc2VjcmV0IGlzCiAgICogZW1wdHkuIFRoZSByZXN1bHQgTVVTVCBiZSBlbmNvZGVk
IGFnYWluLgogICAqICAgLSBDaGFwdGVyIDkuNC4xICgiR2VuZXJhdGluZyBTaWduYXR1cmVz
IikKICAgKgogICAqIFBsZWFzZSBub3RlIHRoYXQgdGhlIHNlY29uZCBlbmNvZGluZyBNVVNU
IE5PVCBoYXBwZW4gaW4gdGhlIFNpZ25hdHVyZU1ldGhvZCwgYXMKICAgKiBPQXV0aFJlcXVl
c3QgaGFuZGxlcyB0aGlzIQogICAqLwogIHB1YmxpYyBmdW5jdGlvbiBidWlsZF9zaWduYXR1
cmUoJHJlcXVlc3QsICRjb25zdW1lciwgJHRva2VuKSB7Cgkka2V5X3BhcnRzID0gYXJyYXko
CgkgICRjb25zdW1lci0+c2VjcmV0LAoJICAoJHRva2VuKSA/ICR0b2tlbi0+c2VjcmV0IDog
IiIKCSk7CgoJJGtleV9wYXJ0cyA9IE9BdXRoVXRpbDo6dXJsZW5jb2RlX3JmYzM5ODYoJGtl
eV9wYXJ0cyk7Cgkka2V5ID0gaW1wbG9kZSgnJicsICRrZXlfcGFydHMpOwoJJHJlcXVlc3Qt
PmJhc2Vfc3RyaW5nID0gJGtleTsKCglyZXR1cm4gJGtleTsKICB9Cn0KCi8qKgogKiBUaGUg
UlNBLVNIQTEgc2lnbmF0dXJlIG1ldGhvZCB1c2VzIHRoZSBSU0FTU0EtUEtDUzEtdjFfNSBz
aWduYXR1cmUgYWxnb3JpdGhtIGFzIGRlZmluZWQgaW4KICogW1JGQzM0NDddIHNlY3Rpb24g
OC4yIChtb3JlIHNpbXBseSBrbm93biBhcyBQS0NTIzEpLCB1c2luZyBTSEEtMSBhcyB0aGUg
aGFzaCBmdW5jdGlvbiBmb3IKICogRU1TQS1QS0NTMS12MV81LiBJdCBpcyBhc3N1bWVkIHRo
YXQgdGhlIENvbnN1bWVyIGhhcyBwcm92aWRlZCBpdHMgUlNBIHB1YmxpYyBrZXkgaW4gYQog
KiB2ZXJpZmllZCB3YXkgdG8gdGhlIFNlcnZpY2UgUHJvdmlkZXIsIGluIGEgbWFubmVyIHdo
aWNoIGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhpcwogKiBzcGVjaWZpY2F0aW9uLgogKiAg
IC0gQ2hhcHRlciA5LjMgKCJSU0EtU0hBMSIpCiAqLwphYnN0cmFjdCBjbGFzcyBPQXV0aFNp
Z25hdHVyZU1ldGhvZF9SU0FfU0hBMSBleHRlbmRzIE9BdXRoU2lnbmF0dXJlTWV0aG9kIHsK
ICBwdWJsaWMgZnVuY3Rpb24gZ2V0X25hbWUoKSB7CglyZXR1cm4gIlJTQS1TSEExIjsKICB9
CgogIC8vIFVwIHRvIHRoZSBTUCB0byBpbXBsZW1lbnQgdGhpcyBsb29rdXAgb2Yga2V5cy4g
UG9zc2libGUgaWRlYXMgYXJlOgogIC8vICgxKSBkbyBhIGxvb2t1cCBpbiBhIHRhYmxlIG9m
IHRydXN0ZWQgY2VydHMga2V5ZWQgb2ZmIG9mIGNvbnN1bWVyCiAgLy8gKDIpIGZldGNoIHZp
YSBodHRwIHVzaW5nIGEgdXJsIHByb3ZpZGVkIGJ5IHRoZSByZXF1ZXN0ZXIKICAvLyAoMykg
c29tZSBzb3J0IG9mIHNwZWNpZmljIGRpc2NvdmVyeSBjb2RlIGJhc2VkIG9uIHJlcXVlc3QK
ICAvLwogIC8vIEVpdGhlciB3YXkgc2hvdWxkIHJldHVybiBhIHN0cmluZyByZXByZXNlbnRh
dGlvbiBvZiB0aGUgY2VydGlmaWNhdGUKICBwcm90ZWN0ZWQgYWJzdHJhY3QgZnVuY3Rpb24g
ZmV0Y2hfcHVibGljX2NlcnQoJiRyZXF1ZXN0KTsKCiAgLy8gVXAgdG8gdGhlIFNQIHRvIGlt
cGxlbWVudCB0aGlzIGxvb2t1cCBvZiBrZXlzLiBQb3NzaWJsZSBpZGVhcyBhcmU6CiAgLy8g
KDEpIGRvIGEgbG9va3VwIGluIGEgdGFibGUgb2YgdHJ1c3RlZCBjZXJ0cyBrZXllZCBvZmYg
b2YgY29uc3VtZXIKICAvLwogIC8vIEVpdGhlciB3YXkgc2hvdWxkIHJldHVybiBhIHN0cmlu
ZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgY2VydGlmaWNhdGUKICBwcm90ZWN0ZWQgYWJzdHJh
Y3QgZnVuY3Rpb24gZmV0Y2hfcHJpdmF0ZV9jZXJ0KCYkcmVxdWVzdCk7CgogIHB1YmxpYyBm
dW5jdGlvbiBidWlsZF9zaWduYXR1cmUoJHJlcXVlc3QsICRjb25zdW1lciwgJHRva2VuKSB7
CgkkYmFzZV9zdHJpbmcgPSAkcmVxdWVzdC0+Z2V0X3NpZ25hdHVyZV9iYXNlX3N0cmluZygp
OwoJJHJlcXVlc3QtPmJhc2Vfc3RyaW5nID0gJGJhc2Vfc3RyaW5nOwoKCS8vIEZldGNoIHRo
ZSBwcml2YXRlIGtleSBjZXJ0IGJhc2VkIG9uIHRoZSByZXF1ZXN0CgkkY2VydCA9ICR0aGlz
LT5mZXRjaF9wcml2YXRlX2NlcnQoJHJlcXVlc3QpOwoKCS8vIFB1bGwgdGhlIHByaXZhdGUg
a2V5IElEIGZyb20gdGhlIGNlcnRpZmljYXRlCgkkcHJpdmF0ZWtleWlkID0gb3BlbnNzbF9n
ZXRfcHJpdmF0ZWtleSgkY2VydCk7CgoJLy8gU2lnbiB1c2luZyB0aGUga2V5Cgkkb2sgPSBv
cGVuc3NsX3NpZ24oJGJhc2Vfc3RyaW5nLCAkc2lnbmF0dXJlLCAkcHJpdmF0ZWtleWlkKTsK
CgkvLyBSZWxlYXNlIHRoZSBrZXkgcmVzb3VyY2UKCW9wZW5zc2xfZnJlZV9rZXkoJHByaXZh
dGVrZXlpZCk7CgoJcmV0dXJuIGJhc2U2NF9lbmNvZGUoJHNpZ25hdHVyZSk7CiAgfQoKICBw
dWJsaWMgZnVuY3Rpb24gY2hlY2tfc2lnbmF0dXJlKCRyZXF1ZXN0LCAkY29uc3VtZXIsICR0
b2tlbiwgJHNpZ25hdHVyZSkgewoJJGRlY29kZWRfc2lnID0gYmFzZTY0X2RlY29kZSgkc2ln
bmF0dXJlKTsKCgkkYmFzZV9zdHJpbmcgPSAkcmVxdWVzdC0+Z2V0X3NpZ25hdHVyZV9iYXNl
X3N0cmluZygpOwoKCS8vIEZldGNoIHRoZSBwdWJsaWMga2V5IGNlcnQgYmFzZWQgb24gdGhl
IHJlcXVlc3QKCSRjZXJ0ID0gJHRoaXMtPmZldGNoX3B1YmxpY19jZXJ0KCRyZXF1ZXN0KTsK
CgkvLyBQdWxsIHRoZSBwdWJsaWMga2V5IElEIGZyb20gdGhlIGNlcnRpZmljYXRlCgkkcHVi
bGlja2V5aWQgPSBvcGVuc3NsX2dldF9wdWJsaWNrZXkoJGNlcnQpOwoKCS8vIENoZWNrIHRo
ZSBjb21wdXRlZCBzaWduYXR1cmUgYWdhaW5zdCB0aGUgb25lIHBhc3NlZCBpbiB0aGUgcXVl
cnkKCSRvayA9IG9wZW5zc2xfdmVyaWZ5KCRiYXNlX3N0cmluZywgJGRlY29kZWRfc2lnLCAk
cHVibGlja2V5aWQpOwoKCS8vIFJlbGVhc2UgdGhlIGtleSByZXNvdXJjZQoJb3BlbnNzbF9m
cmVlX2tleSgkcHVibGlja2V5aWQpOwoKCXJldHVybiAkb2sgPT0gMTsKICB9Cn0KCmNsYXNz
IE9BdXRoUmVxdWVzdCB7CiAgcHJpdmF0ZSAkcGFyYW1ldGVyczsKICBwcml2YXRlICRodHRw
X21ldGhvZDsKICBwcml2YXRlICRodHRwX3VybDsKICAvLyBmb3IgZGVidWcgcHVycG9zZXMK
ICBwdWJsaWMgJGJhc2Vfc3RyaW5nOwogIHB1YmxpYyBzdGF0aWMgJHZlcnNpb24gPSAnMS4w
JzsKICBwdWJsaWMgc3RhdGljICRQT1NUX0lOUFVUID0gJ3BocDovL2lucHV0JzsKCiAgZnVu
Y3Rpb24gX19jb25zdHJ1Y3QoJGh0dHBfbWV0aG9kLCAkaHR0cF91cmwsICRwYXJhbWV0ZXJz
PU5VTEwpIHsKCUAkcGFyYW1ldGVycyBvciAkcGFyYW1ldGVycyA9IGFycmF5KCk7CgkkcGFy
YW1ldGVycyA9IGFycmF5X21lcmdlKCBPQXV0aFV0aWw6OnBhcnNlX3BhcmFtZXRlcnMocGFy
c2VfdXJsKCRodHRwX3VybCwgUEhQX1VSTF9RVUVSWSkpLCAkcGFyYW1ldGVycyk7CgkkdGhp
cy0+cGFyYW1ldGVycyA9ICRwYXJhbWV0ZXJzOwoJJHRoaXMtPmh0dHBfbWV0aG9kID0gJGh0
dHBfbWV0aG9kOwoJJHRoaXMtPmh0dHBfdXJsID0gJGh0dHBfdXJsOwogIH0KCgogIC8qKgog
ICAqIGF0dGVtcHQgdG8gYnVpbGQgdXAgYSByZXF1ZXN0IGZyb20gd2hhdCB3YXMgcGFzc2Vk
IHRvIHRoZSBzZXJ2ZXIKICAgKi8KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGZyb21fcmVx
dWVzdCgkaHR0cF9tZXRob2Q9TlVMTCwgJGh0dHBfdXJsPU5VTEwsICRwYXJhbWV0ZXJzPU5V
TEwpIHsKCSRzY2hlbWUgPSAoIWlzc2V0KCRfU0VSVkVSWydIVFRQUyddKSB8fCAkX1NFUlZF
UlsnSFRUUFMnXSAhPSAib24iKQoJCQkgID8gJ2h0dHAnCgkJCSAgOiAnaHR0cHMnOwoJQCRo
dHRwX3VybCBvciAkaHR0cF91cmwgPSAkc2NoZW1lIC4KCQkJCQkJCSAgJzovLycgLiAkX1NF
UlZFUlsnSFRUUF9IT1NUJ10gLgoJCQkJCQkJICAnOicgLgoJCQkJCQkJICAkX1NFUlZFUlsn
U0VSVkVSX1BPUlQnXSAuCgkJCQkJCQkgICRfU0VSVkVSWydSRVFVRVNUX1VSSSddOwoJQCRo
dHRwX21ldGhvZCBvciAkaHR0cF9tZXRob2QgPSAkX1NFUlZFUlsnUkVRVUVTVF9NRVRIT0Qn
XTsKCgkvLyBXZSB3ZXJlbid0IGhhbmRlZCBhbnkgcGFyYW1ldGVycywgc28gbGV0J3MgZmlu
ZCB0aGUgb25lcyByZWxldmFudCB0bwoJLy8gdGhpcyByZXF1ZXN0LgoJLy8gSWYgeW91IHJ1
biBYTUwtUlBDIG9yIHNpbWlsYXIgeW91IHNob3VsZCB1c2UgdGhpcyB0byBwcm92aWRlIHlv
dXIgb3duCgkvLyBwYXJzZWQgcGFyYW1ldGVyLWxpc3QKCWlmICghJHBhcmFtZXRlcnMpIHsK
CSAgLy8gRmluZCByZXF1ZXN0IGhlYWRlcnMKCSAgJHJlcXVlc3RfaGVhZGVycyA9IE9BdXRo
VXRpbDo6Z2V0X2hlYWRlcnMoKTsKCgkgIC8vIFBhcnNlIHRoZSBxdWVyeS1zdHJpbmcgdG8g
ZmluZCBHRVQgcGFyYW1ldGVycwoJICAkcGFyYW1ldGVycyA9IE9BdXRoVXRpbDo6cGFyc2Vf
cGFyYW1ldGVycygkX1NFUlZFUlsnUVVFUllfU1RSSU5HJ10pOwoKCSAgLy8gSXQncyBhIFBP
U1QgcmVxdWVzdCBvZiB0aGUgcHJvcGVyIGNvbnRlbnQtdHlwZSwgc28gcGFyc2UgUE9TVAoJ
ICAvLyBwYXJhbWV0ZXJzIGFuZCBhZGQgdGhvc2Ugb3ZlcnJpZGluZyBhbnkgZHVwbGljYXRl
cyBmcm9tIEdFVAoJICBpZiAoJGh0dHBfbWV0aG9kID09ICJQT1NUIgoJCSAgJiYgQHN0cnN0
cigkcmVxdWVzdF9oZWFkZXJzWyJDb250ZW50LVR5cGUiXSwKCQkJCQkgImFwcGxpY2F0aW9u
L3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpCgkJICApIHsKCQkkcG9zdF9kYXRhID0gT0F1dGhV
dGlsOjpwYXJzZV9wYXJhbWV0ZXJzKAoJCSAgZmlsZV9nZXRfY29udGVudHMoc2VsZjo6JFBP
U1RfSU5QVVQpCgkJKTsKCQkkcGFyYW1ldGVycyA9IGFycmF5X21lcmdlKCRwYXJhbWV0ZXJz
LCAkcG9zdF9kYXRhKTsKCSAgfQoKCSAgLy8gV2UgaGF2ZSBhIEF1dGhvcml6YXRpb24taGVh
ZGVyIHdpdGggT0F1dGggZGF0YS4gUGFyc2UgdGhlIGhlYWRlcgoJICAvLyBhbmQgYWRkIHRo
b3NlIG92ZXJyaWRpbmcgYW55IGR1cGxpY2F0ZXMgZnJvbSBHRVQgb3IgUE9TVAoJICBpZiAo
QHN1YnN0cigkcmVxdWVzdF9oZWFkZXJzWydBdXRob3JpemF0aW9uJ10sIDAsIDYpID09ICJP
QXV0aCAiKSB7CgkJJGhlYWRlcl9wYXJhbWV0ZXJzID0gT0F1dGhVdGlsOjpzcGxpdF9oZWFk
ZXIoCgkJICAkcmVxdWVzdF9oZWFkZXJzWydBdXRob3JpemF0aW9uJ10KCQkpOwoJCSRwYXJh
bWV0ZXJzID0gYXJyYXlfbWVyZ2UoJHBhcmFtZXRlcnMsICRoZWFkZXJfcGFyYW1ldGVycyk7
CgkgIH0KCgl9CgoJcmV0dXJuIG5ldyBPQXV0aFJlcXVlc3QoJGh0dHBfbWV0aG9kLCAkaHR0
cF91cmwsICRwYXJhbWV0ZXJzKTsKICB9CgogIC8qKgogICAqIHByZXR0eSBtdWNoIGEgaGVs
cGVyIGZ1bmN0aW9uIHRvIHNldCB1cCB0aGUgcmVxdWVzdAogICAqLwogIHB1YmxpYyBzdGF0
aWMgZnVuY3Rpb24gZnJvbV9jb25zdW1lcl9hbmRfdG9rZW4oJGNvbnN1bWVyLCAkdG9rZW4s
ICRodHRwX21ldGhvZCwgJGh0dHBfdXJsLCAkcGFyYW1ldGVycz1OVUxMKSB7CglAJHBhcmFt
ZXRlcnMgb3IgJHBhcmFtZXRlcnMgPSBhcnJheSgpOwoJJGRlZmF1bHRzID0gYXJyYXkoIm9h
dXRoX3ZlcnNpb24iID0+IE9BdXRoUmVxdWVzdDo6JHZlcnNpb24sCgkJCQkJICAib2F1dGhf
bm9uY2UiID0+IE9BdXRoUmVxdWVzdDo6Z2VuZXJhdGVfbm9uY2UoKSwKCQkJCQkgICJvYXV0
aF90aW1lc3RhbXAiID0+IE9BdXRoUmVxdWVzdDo6Z2VuZXJhdGVfdGltZXN0YW1wKCksCgkJ
CQkJICAib2F1dGhfY29uc3VtZXJfa2V5IiA9PiAkY29uc3VtZXItPmtleSk7CglpZiAoJHRv
a2VuKQoJICAkZGVmYXVsdHNbJ29hdXRoX3Rva2VuJ10gPSAkdG9rZW4tPmtleTsKCgkkcGFy
YW1ldGVycyA9IGFycmF5X21lcmdlKCRkZWZhdWx0cywgJHBhcmFtZXRlcnMpOwoKCXJldHVy
biBuZXcgT0F1dGhSZXF1ZXN0KCRodHRwX21ldGhvZCwgJGh0dHBfdXJsLCAkcGFyYW1ldGVy
cyk7CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gc2V0X3BhcmFtZXRlcigkbmFtZSwgJHZhbHVl
LCAkYWxsb3dfZHVwbGljYXRlcyA9IHRydWUpIHsKCWlmICgkYWxsb3dfZHVwbGljYXRlcyAm
JiBpc3NldCgkdGhpcy0+cGFyYW1ldGVyc1skbmFtZV0pKSB7CgkgIC8vIFdlIGhhdmUgYWxy
ZWFkeSBhZGRlZCBwYXJhbWV0ZXIocykgd2l0aCB0aGlzIG5hbWUsIHNvIGFkZCB0byB0aGUg
bGlzdAoJICBpZiAoaXNfc2NhbGFyKCR0aGlzLT5wYXJhbWV0ZXJzWyRuYW1lXSkpIHsKCQkv
LyBUaGlzIGlzIHRoZSBmaXJzdCBkdXBsaWNhdGUsIHNvIHRyYW5zZm9ybSBzY2FsYXIgKHN0
cmluZykKCQkvLyBpbnRvIGFuIGFycmF5IHNvIHdlIGNhbiBhZGQgdGhlIGR1cGxpY2F0ZXMK
CQkkdGhpcy0+cGFyYW1ldGVyc1skbmFtZV0gPSBhcnJheSgkdGhpcy0+cGFyYW1ldGVyc1sk
bmFtZV0pOwoJICB9CgoJICAkdGhpcy0+cGFyYW1ldGVyc1skbmFtZV1bXSA9ICR2YWx1ZTsK
CX0gZWxzZSB7CgkgICR0aGlzLT5wYXJhbWV0ZXJzWyRuYW1lXSA9ICR2YWx1ZTsKCX0KICB9
CgogIHB1YmxpYyBmdW5jdGlvbiBnZXRfcGFyYW1ldGVyKCRuYW1lKSB7CglyZXR1cm4gaXNz
ZXQoJHRoaXMtPnBhcmFtZXRlcnNbJG5hbWVdKSA/ICR0aGlzLT5wYXJhbWV0ZXJzWyRuYW1l
XSA6IG51bGw7CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gZ2V0X3BhcmFtZXRlcnMoKSB7Cgly
ZXR1cm4gJHRoaXMtPnBhcmFtZXRlcnM7CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gdW5zZXRf
cGFyYW1ldGVyKCRuYW1lKSB7Cgl1bnNldCgkdGhpcy0+cGFyYW1ldGVyc1skbmFtZV0pOwog
IH0KCiAgLyoqCiAgICogVGhlIHJlcXVlc3QgcGFyYW1ldGVycywgc29ydGVkIGFuZCBjb25j
YXRlbmF0ZWQgaW50byBhIG5vcm1hbGl6ZWQgc3RyaW5nLgogICAqIEByZXR1cm4gc3RyaW5n
CiAgICovCiAgcHVibGljIGZ1bmN0aW9uIGdldF9zaWduYWJsZV9wYXJhbWV0ZXJzKCkgewoJ
Ly8gR3JhYiBhbGwgcGFyYW1ldGVycwoJJHBhcmFtcyA9ICR0aGlzLT5wYXJhbWV0ZXJzOwoK
CS8vIFJlbW92ZSBvYXV0aF9zaWduYXR1cmUgaWYgcHJlc2VudAoJLy8gUmVmOiBTcGVjOiA5
LjEuMSAoIlRoZSBvYXV0aF9zaWduYXR1cmUgcGFyYW1ldGVyIE1VU1QgYmUgZXhjbHVkZWQu
IikKCWlmIChpc3NldCgkcGFyYW1zWydvYXV0aF9zaWduYXR1cmUnXSkpIHsKCSAgdW5zZXQo
JHBhcmFtc1snb2F1dGhfc2lnbmF0dXJlJ10pOwoJfQoKCXJldHVybiBPQXV0aFV0aWw6OmJ1
aWxkX2h0dHBfcXVlcnkoJHBhcmFtcyk7CiAgfQoKICAvKioKICAgKiBSZXR1cm5zIHRoZSBi
YXNlIHN0cmluZyBvZiB0aGlzIHJlcXVlc3QKICAgKgogICAqIFRoZSBiYXNlIHN0cmluZyBk
ZWZpbmVkIGFzIHRoZSBtZXRob2QsIHRoZSB1cmwKICAgKiBhbmQgdGhlIHBhcmFtZXRlcnMg
KG5vcm1hbGl6ZWQpLCBlYWNoIHVybGVuY29kZWQKICAgKiBhbmQgdGhlIGNvbmNhdGVkIHdp
dGggJi4KICAgKi8KICBwdWJsaWMgZnVuY3Rpb24gZ2V0X3NpZ25hdHVyZV9iYXNlX3N0cmlu
ZygpIHsKCSRwYXJ0cyA9IGFycmF5KAoJICAkdGhpcy0+Z2V0X25vcm1hbGl6ZWRfaHR0cF9t
ZXRob2QoKSwKCSAgJHRoaXMtPmdldF9ub3JtYWxpemVkX2h0dHBfdXJsKCksCgkgICR0aGlz
LT5nZXRfc2lnbmFibGVfcGFyYW1ldGVycygpCgkpOwoKCSRwYXJ0cyA9IE9BdXRoVXRpbDo6
dXJsZW5jb2RlX3JmYzM5ODYoJHBhcnRzKTsKCglyZXR1cm4gaW1wbG9kZSgnJicsICRwYXJ0
cyk7CiAgfQoKICAvKioKICAgKiBqdXN0IHVwcGVyY2FzZXMgdGhlIGh0dHAgbWV0aG9kCiAg
ICovCiAgcHVibGljIGZ1bmN0aW9uIGdldF9ub3JtYWxpemVkX2h0dHBfbWV0aG9kKCkgewoJ
cmV0dXJuIHN0cnRvdXBwZXIoJHRoaXMtPmh0dHBfbWV0aG9kKTsKICB9CgogIC8qKgogICAq
IHBhcnNlcyB0aGUgdXJsIGFuZCByZWJ1aWxkcyBpdCB0byBiZQogICAqIHNjaGVtZTovL2hv
c3QvcGF0aAogICAqLwogIHB1YmxpYyBmdW5jdGlvbiBnZXRfbm9ybWFsaXplZF9odHRwX3Vy
bCgpIHsKCSRwYXJ0cyA9IHBhcnNlX3VybCgkdGhpcy0+aHR0cF91cmwpOwoKCSRwb3J0ID0g
QCRwYXJ0c1sncG9ydCddOwoJJHNjaGVtZSA9ICRwYXJ0c1snc2NoZW1lJ107CgkkaG9zdCA9
ICRwYXJ0c1snaG9zdCddOwoJJHBhdGggPSBAJHBhcnRzWydwYXRoJ107CgoJJHBvcnQgb3Ig
JHBvcnQgPSAoJHNjaGVtZSA9PSAnaHR0cHMnKSA/ICc0NDMnIDogJzgwJzsKCglpZiAoKCRz
Y2hlbWUgPT0gJ2h0dHBzJyAmJiAkcG9ydCAhPSAnNDQzJykKCQl8fCAoJHNjaGVtZSA9PSAn
aHR0cCcgJiYgJHBvcnQgIT0gJzgwJykpIHsKCSAgJGhvc3QgPSAiJGhvc3Q6JHBvcnQiOwoJ
fQoJcmV0dXJuICIkc2NoZW1lOi8vJGhvc3QkcGF0aCI7CiAgfQoKICAvKioKICAgKiBidWls
ZHMgYSB1cmwgdXNhYmxlIGZvciBhIEdFVCByZXF1ZXN0CiAgICovCiAgcHVibGljIGZ1bmN0
aW9uIHRvX3VybCgpIHsKCSRwb3N0X2RhdGEgPSAkdGhpcy0+dG9fcG9zdGRhdGEoKTsKCSRv
dXQgPSAkdGhpcy0+Z2V0X25vcm1hbGl6ZWRfaHR0cF91cmwoKTsKCWlmICgkcG9zdF9kYXRh
KSB7CgkgICRvdXQgLj0gJz8nLiRwb3N0X2RhdGE7Cgl9CglyZXR1cm4gJG91dDsKICB9Cgog
IC8qKgogICAqIGJ1aWxkcyB0aGUgZGF0YSBvbmUgd291bGQgc2VuZCBpbiBhIFBPU1QgcmVx
dWVzdAogICAqLwogIHB1YmxpYyBmdW5jdGlvbiB0b19wb3N0ZGF0YSgpIHsKCXJldHVybiBP
QXV0aFV0aWw6OmJ1aWxkX2h0dHBfcXVlcnkoJHRoaXMtPnBhcmFtZXRlcnMpOwogIH0KCiAg
LyoqCiAgICogYnVpbGRzIHRoZSBBdXRob3JpemF0aW9uOiBoZWFkZXIKICAgKi8KICBwdWJs
aWMgZnVuY3Rpb24gdG9faGVhZGVyKCRyZWFsbT1udWxsKSB7CgkkZmlyc3QgPSB0cnVlOwog
IGlmKCRyZWFsbSkgewoJICAkb3V0ID0gJ0F1dGhvcml6YXRpb246IE9BdXRoIHJlYWxtPSIn
IC4gT0F1dGhVdGlsOjp1cmxlbmNvZGVfcmZjMzk4NigkcmVhbG0pIC4gJyInOwoJICAkZmly
c3QgPSBmYWxzZTsKCX0gZWxzZQoJICAkb3V0ID0gJ0F1dGhvcml6YXRpb246IE9BdXRoJzsK
CgkkdG90YWwgPSBhcnJheSgpOwoJZm9yZWFjaCAoJHRoaXMtPnBhcmFtZXRlcnMgYXMgJGsg
PT4gJHYpIHsKCSAgaWYgKHN1YnN0cigkaywgMCwgNSkgIT0gIm9hdXRoIikgY29udGludWU7
CgkgIGlmIChpc19hcnJheSgkdikpIHsKCQl0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24oJ0Fy
cmF5cyBub3Qgc3VwcG9ydGVkIGluIGhlYWRlcnMnKTsKCSAgfQoJICAkb3V0IC49ICgkZmly
c3QpID8gJyAnIDogJywnOwoJICAkb3V0IC49IE9BdXRoVXRpbDo6dXJsZW5jb2RlX3JmYzM5
ODYoJGspIC4KCQkJICAnPSInIC4KCQkJICBPQXV0aFV0aWw6OnVybGVuY29kZV9yZmMzOTg2
KCR2KSAuCgkJCSAgJyInOwoJICAkZmlyc3QgPSBmYWxzZTsKCX0KCXJldHVybiAkb3V0Owog
IH0KCiAgcHVibGljIGZ1bmN0aW9uIF9fdG9TdHJpbmcoKSB7CglyZXR1cm4gJHRoaXMtPnRv
X3VybCgpOwogIH0KCgogIHB1YmxpYyBmdW5jdGlvbiBzaWduX3JlcXVlc3QoJHNpZ25hdHVy
ZV9tZXRob2QsICRjb25zdW1lciwgJHRva2VuKSB7CgkkdGhpcy0+c2V0X3BhcmFtZXRlcigK
CSAgIm9hdXRoX3NpZ25hdHVyZV9tZXRob2QiLAoJICAkc2lnbmF0dXJlX21ldGhvZC0+Z2V0
X25hbWUoKSwKCSAgZmFsc2UKCSk7Cgkkc2lnbmF0dXJlID0gJHRoaXMtPmJ1aWxkX3NpZ25h
dHVyZSgkc2lnbmF0dXJlX21ldGhvZCwgJGNvbnN1bWVyLCAkdG9rZW4pOwoJJHRoaXMtPnNl
dF9wYXJhbWV0ZXIoIm9hdXRoX3NpZ25hdHVyZSIsICRzaWduYXR1cmUsIGZhbHNlKTsKICB9
CgogIHB1YmxpYyBmdW5jdGlvbiBidWlsZF9zaWduYXR1cmUoJHNpZ25hdHVyZV9tZXRob2Qs
ICRjb25zdW1lciwgJHRva2VuKSB7Cgkkc2lnbmF0dXJlID0gJHNpZ25hdHVyZV9tZXRob2Qt
PmJ1aWxkX3NpZ25hdHVyZSgkdGhpcywgJGNvbnN1bWVyLCAkdG9rZW4pOwoJcmV0dXJuICRz
aWduYXR1cmU7CiAgfQoKICAvKioKICAgKiB1dGlsIGZ1bmN0aW9uOiBjdXJyZW50IHRpbWVz
dGFtcAogICAqLwogIHByaXZhdGUgc3RhdGljIGZ1bmN0aW9uIGdlbmVyYXRlX3RpbWVzdGFt
cCgpIHsKCXJldHVybiB0aW1lKCk7CiAgfQoKICAvKioKICAgKiB1dGlsIGZ1bmN0aW9uOiBj
dXJyZW50IG5vbmNlCiAgICovCiAgcHJpdmF0ZSBzdGF0aWMgZnVuY3Rpb24gZ2VuZXJhdGVf
bm9uY2UoKSB7CgkkbXQgPSBtaWNyb3RpbWUoKTsKCSRyYW5kID0gbXRfcmFuZCgpOwoKCXJl
dHVybiBtZDUoJG10IC4gJHJhbmQpOyAvLyBtZDVzIGxvb2sgbmljZXIgdGhhbiBudW1iZXJz
CiAgfQp9CgpjbGFzcyBPQXV0aFNlcnZlciB7CiAgcHJvdGVjdGVkICR0aW1lc3RhbXBfdGhy
ZXNob2xkID0gMzAwOyAvLyBpbiBzZWNvbmRzLCBmaXZlIG1pbnV0ZXMKICBwcm90ZWN0ZWQg
JHZlcnNpb24gPSAnMS4wJzsgICAgICAgICAgICAgLy8gaGkgYmxhaW5lCiAgcHJvdGVjdGVk
ICRzaWduYXR1cmVfbWV0aG9kcyA9IGFycmF5KCk7CgogIHByb3RlY3RlZCAkZGF0YV9zdG9y
ZTsKCiAgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJGRhdGFfc3RvcmUpIHsKCSR0aGlzLT5kYXRh
X3N0b3JlID0gJGRhdGFfc3RvcmU7CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gYWRkX3NpZ25h
dHVyZV9tZXRob2QoJHNpZ25hdHVyZV9tZXRob2QpIHsKCSR0aGlzLT5zaWduYXR1cmVfbWV0
aG9kc1skc2lnbmF0dXJlX21ldGhvZC0+Z2V0X25hbWUoKV0gPQoJICAkc2lnbmF0dXJlX21l
dGhvZDsKICB9CgogIC8vIGhpZ2ggbGV2ZWwgZnVuY3Rpb25zCgogIC8qKgogICAqIHByb2Nl
c3MgYSByZXF1ZXN0X3Rva2VuIHJlcXVlc3QKICAgKiByZXR1cm5zIHRoZSByZXF1ZXN0IHRv
a2VuIG9uIHN1Y2Nlc3MKICAgKi8KICBwdWJsaWMgZnVuY3Rpb24gZmV0Y2hfcmVxdWVzdF90
b2tlbigmJHJlcXVlc3QpIHsKCSR0aGlzLT5nZXRfdmVyc2lvbigkcmVxdWVzdCk7CgoJJGNv
bnN1bWVyID0gJHRoaXMtPmdldF9jb25zdW1lcigkcmVxdWVzdCk7CgoJLy8gbm8gdG9rZW4g
cmVxdWlyZWQgZm9yIHRoZSBpbml0aWFsIHRva2VuIHJlcXVlc3QKCSR0b2tlbiA9IE5VTEw7
CgoJJHRoaXMtPmNoZWNrX3NpZ25hdHVyZSgkcmVxdWVzdCwgJGNvbnN1bWVyLCAkdG9rZW4p
OwoKCS8vIFJldiBBIGNoYW5nZQoJJGNhbGxiYWNrID0gJHJlcXVlc3QtPmdldF9wYXJhbWV0
ZXIoJ29hdXRoX2NhbGxiYWNrJyk7CgkkbmV3X3Rva2VuID0gJHRoaXMtPmRhdGFfc3RvcmUt
Pm5ld19yZXF1ZXN0X3Rva2VuKCRjb25zdW1lciwgJGNhbGxiYWNrKTsKCglyZXR1cm4gJG5l
d190b2tlbjsKICB9CgogIC8qKgogICAqIHByb2Nlc3MgYW4gYWNjZXNzX3Rva2VuIHJlcXVl
c3QKICAgKiByZXR1cm5zIHRoZSBhY2Nlc3MgdG9rZW4gb24gc3VjY2VzcwogICAqLwogIHB1
YmxpYyBmdW5jdGlvbiBmZXRjaF9hY2Nlc3NfdG9rZW4oJiRyZXF1ZXN0KSB7CgkkdGhpcy0+
Z2V0X3ZlcnNpb24oJHJlcXVlc3QpOwoKCSRjb25zdW1lciA9ICR0aGlzLT5nZXRfY29uc3Vt
ZXIoJHJlcXVlc3QpOwoKCS8vIHJlcXVpcmVzIGF1dGhvcml6ZWQgcmVxdWVzdCB0b2tlbgoJ
JHRva2VuID0gJHRoaXMtPmdldF90b2tlbigkcmVxdWVzdCwgJGNvbnN1bWVyLCAicmVxdWVz
dCIpOwoKCSR0aGlzLT5jaGVja19zaWduYXR1cmUoJHJlcXVlc3QsICRjb25zdW1lciwgJHRv
a2VuKTsKCgkvLyBSZXYgQSBjaGFuZ2UKCSR2ZXJpZmllciA9ICRyZXF1ZXN0LT5nZXRfcGFy
YW1ldGVyKCdvYXV0aF92ZXJpZmllcicpOwoJJG5ld190b2tlbiA9ICR0aGlzLT5kYXRhX3N0
b3JlLT5uZXdfYWNjZXNzX3Rva2VuKCR0b2tlbiwgJGNvbnN1bWVyLCAkdmVyaWZpZXIpOwoK
CXJldHVybiAkbmV3X3Rva2VuOwogIH0KCiAgLyoqCiAgICogdmVyaWZ5IGFuIGFwaSBjYWxs
LCBjaGVja3MgYWxsIHRoZSBwYXJhbWV0ZXJzCiAgICovCiAgcHVibGljIGZ1bmN0aW9uIHZl
cmlmeV9yZXF1ZXN0KCYkcmVxdWVzdCkgewoJJHRoaXMtPmdldF92ZXJzaW9uKCRyZXF1ZXN0
KTsKCSRjb25zdW1lciA9ICR0aGlzLT5nZXRfY29uc3VtZXIoJHJlcXVlc3QpOwoJJHRva2Vu
ID0gJHRoaXMtPmdldF90b2tlbigkcmVxdWVzdCwgJGNvbnN1bWVyLCAiYWNjZXNzIik7Cgkk
dGhpcy0+Y2hlY2tfc2lnbmF0dXJlKCRyZXF1ZXN0LCAkY29uc3VtZXIsICR0b2tlbik7Cgly
ZXR1cm4gYXJyYXkoJGNvbnN1bWVyLCAkdG9rZW4pOwogIH0KCiAgLy8gSW50ZXJuYWxzIGZy
b20gaGVyZQogIC8qKgogICAqIHZlcnNpb24gMQogICAqLwogIHByaXZhdGUgZnVuY3Rpb24g
Z2V0X3ZlcnNpb24oJiRyZXF1ZXN0KSB7CgkkdmVyc2lvbiA9ICRyZXF1ZXN0LT5nZXRfcGFy
YW1ldGVyKCJvYXV0aF92ZXJzaW9uIik7CglpZiAoISR2ZXJzaW9uKSB7CgkgIC8vIFNlcnZp
Y2UgUHJvdmlkZXJzIE1VU1QgYXNzdW1lIHRoZSBwcm90b2NvbCB2ZXJzaW9uIHRvIGJlIDEu
MCBpZiB0aGlzIHBhcmFtZXRlciBpcyBub3QgcHJlc2VudC4KCSAgLy8gQ2hhcHRlciA3LjAg
KCJBY2Nlc3NpbmcgUHJvdGVjdGVkIFJlc3NvdXJjZXMiKQoJICAkdmVyc2lvbiA9ICcxLjAn
OwoJfQoJaWYgKCR2ZXJzaW9uICE9PSAkdGhpcy0+dmVyc2lvbikgewoJICB0aHJvdyBuZXcg
T0F1dGhFeGNlcHRpb24oIk9BdXRoIHZlcnNpb24gJyR2ZXJzaW9uJyBub3Qgc3VwcG9ydGVk
Iik7Cgl9CglyZXR1cm4gJHZlcnNpb247CiAgfQoKICAvKioKICAgKiBmaWd1cmUgb3V0IHRo
ZSBzaWduYXR1cmUgd2l0aCBzb21lIGRlZmF1bHRzCiAgICovCiAgcHJpdmF0ZSBmdW5jdGlv
biBnZXRfc2lnbmF0dXJlX21ldGhvZCgmJHJlcXVlc3QpIHsKCSRzaWduYXR1cmVfbWV0aG9k
ID0KCQlAJHJlcXVlc3QtPmdldF9wYXJhbWV0ZXIoIm9hdXRoX3NpZ25hdHVyZV9tZXRob2Qi
KTsKCglpZiAoISRzaWduYXR1cmVfbWV0aG9kKSB7CgkgIC8vIEFjY29yZGluZyB0byBjaGFw
dGVyIDcgKCJBY2Nlc3NpbmcgUHJvdGVjdGVkIFJlc3NvdXJjZXMiKSB0aGUgc2lnbmF0dXJl
LW1ldGhvZAoJICAvLyBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQsIGFuZCB3ZSBjYW4ndCBqdXN0
IGZhbGxiYWNrIHRvIFBMQUlOVEVYVAoJICB0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24oJ05v
IHNpZ25hdHVyZSBtZXRob2QgcGFyYW1ldGVyLiBUaGlzIHBhcmFtZXRlciBpcyByZXF1aXJl
ZCcpOwoJfQoKCWlmICghaW5fYXJyYXkoJHNpZ25hdHVyZV9tZXRob2QsCgkJCQkgIGFycmF5
X2tleXMoJHRoaXMtPnNpZ25hdHVyZV9tZXRob2RzKSkpIHsKCSAgdGhyb3cgbmV3IE9BdXRo
RXhjZXB0aW9uKAoJCSJTaWduYXR1cmUgbWV0aG9kICckc2lnbmF0dXJlX21ldGhvZCcgbm90
IHN1cHBvcnRlZCAiIC4KCQkidHJ5IG9uZSBvZiB0aGUgZm9sbG93aW5nOiAiIC4KCQlpbXBs
b2RlKCIsICIsIGFycmF5X2tleXMoJHRoaXMtPnNpZ25hdHVyZV9tZXRob2RzKSkKCSAgKTsK
CX0KCXJldHVybiAkdGhpcy0+c2lnbmF0dXJlX21ldGhvZHNbJHNpZ25hdHVyZV9tZXRob2Rd
OwogIH0KCiAgLyoqCiAgICogdHJ5IHRvIGZpbmQgdGhlIGNvbnN1bWVyIGZvciB0aGUgcHJv
dmlkZWQgcmVxdWVzdCdzIGNvbnN1bWVyIGtleQogICAqLwogIHByaXZhdGUgZnVuY3Rpb24g
Z2V0X2NvbnN1bWVyKCYkcmVxdWVzdCkgewoJJGNvbnN1bWVyX2tleSA9IEAkcmVxdWVzdC0+
Z2V0X3BhcmFtZXRlcigib2F1dGhfY29uc3VtZXJfa2V5Iik7CglpZiAoISRjb25zdW1lcl9r
ZXkpIHsKCSAgdGhyb3cgbmV3IE9BdXRoRXhjZXB0aW9uKCJJbnZhbGlkIGNvbnN1bWVyIGtl
eSIpOwoJfQoKCSRjb25zdW1lciA9ICR0aGlzLT5kYXRhX3N0b3JlLT5sb29rdXBfY29uc3Vt
ZXIoJGNvbnN1bWVyX2tleSk7CglpZiAoISRjb25zdW1lcikgewoJICB0aHJvdyBuZXcgT0F1
dGhFeGNlcHRpb24oIkludmFsaWQgY29uc3VtZXIiKTsKCX0KCglyZXR1cm4gJGNvbnN1bWVy
OwogIH0KCiAgLyoqCiAgICogdHJ5IHRvIGZpbmQgdGhlIHRva2VuIGZvciB0aGUgcHJvdmlk
ZWQgcmVxdWVzdCdzIHRva2VuIGtleQogICAqLwogIHByaXZhdGUgZnVuY3Rpb24gZ2V0X3Rv
a2VuKCYkcmVxdWVzdCwgJGNvbnN1bWVyLCAkdG9rZW5fdHlwZT0iYWNjZXNzIikgewoJJHRv
a2VuX2ZpZWxkID0gQCRyZXF1ZXN0LT5nZXRfcGFyYW1ldGVyKCdvYXV0aF90b2tlbicpOwoJ
JHRva2VuID0gJHRoaXMtPmRhdGFfc3RvcmUtPmxvb2t1cF90b2tlbigKCSAgJGNvbnN1bWVy
LCAkdG9rZW5fdHlwZSwgJHRva2VuX2ZpZWxkCgkpOwoJaWYgKCEkdG9rZW4pIHsKCSAgdGhy
b3cgbmV3IE9BdXRoRXhjZXB0aW9uKCJJbnZhbGlkICR0b2tlbl90eXBlIHRva2VuOiAkdG9r
ZW5fZmllbGQiKTsKCX0KCXJldHVybiAkdG9rZW47CiAgfQoKICAvKioKICAgKiBhbGwtaW4t
b25lIGZ1bmN0aW9uIHRvIGNoZWNrIHRoZSBzaWduYXR1cmUgb24gYSByZXF1ZXN0CiAgICog
c2hvdWxkIGd1ZXNzIHRoZSBzaWduYXR1cmUgbWV0aG9kIGFwcHJvcHJpYXRlbHkKICAgKi8K
ICBwcml2YXRlIGZ1bmN0aW9uIGNoZWNrX3NpZ25hdHVyZSgmJHJlcXVlc3QsICRjb25zdW1l
ciwgJHRva2VuKSB7CgkvLyB0aGlzIHNob3VsZCBwcm9iYWJseSBiZSBpbiBhIGRpZmZlcmVu
dCBtZXRob2QKCSR0aW1lc3RhbXAgPSBAJHJlcXVlc3QtPmdldF9wYXJhbWV0ZXIoJ29hdXRo
X3RpbWVzdGFtcCcpOwoJJG5vbmNlID0gQCRyZXF1ZXN0LT5nZXRfcGFyYW1ldGVyKCdvYXV0
aF9ub25jZScpOwoKCSR0aGlzLT5jaGVja190aW1lc3RhbXAoJHRpbWVzdGFtcCk7CgkkdGhp
cy0+Y2hlY2tfbm9uY2UoJGNvbnN1bWVyLCAkdG9rZW4sICRub25jZSwgJHRpbWVzdGFtcCk7
CgoJJHNpZ25hdHVyZV9tZXRob2QgPSAkdGhpcy0+Z2V0X3NpZ25hdHVyZV9tZXRob2QoJHJl
cXVlc3QpOwoKCSRzaWduYXR1cmUgPSAkcmVxdWVzdC0+Z2V0X3BhcmFtZXRlcignb2F1dGhf
c2lnbmF0dXJlJyk7CgkkdmFsaWRfc2lnID0gJHNpZ25hdHVyZV9tZXRob2QtPmNoZWNrX3Np
Z25hdHVyZSgKCSAgJHJlcXVlc3QsCgkgICRjb25zdW1lciwKCSAgJHRva2VuLAoJICAkc2ln
bmF0dXJlCgkpOwoKCWlmICghJHZhbGlkX3NpZykgewoJICB0aHJvdyBuZXcgT0F1dGhFeGNl
cHRpb24oIkludmFsaWQgc2lnbmF0dXJlIik7Cgl9CiAgfQoKICAvKioKICAgKiBjaGVjayB0
aGF0IHRoZSB0aW1lc3RhbXAgaXMgbmV3IGVub3VnaAogICAqLwogIHByaXZhdGUgZnVuY3Rp
b24gY2hlY2tfdGltZXN0YW1wKCR0aW1lc3RhbXApIHsKCWlmKCAhICR0aW1lc3RhbXAgKQoJ
ICB0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24oCgkJJ01pc3NpbmcgdGltZXN0YW1wIHBhcmFt
ZXRlci4gVGhlIHBhcmFtZXRlciBpcyByZXF1aXJlZCcKCSAgKTsKCgkvLyB2ZXJpZnkgdGhh
dCB0aW1lc3RhbXAgaXMgcmVjZW50aXNoCgkkbm93ID0gdGltZSgpOwoJaWYgKGFicygkbm93
IC0gJHRpbWVzdGFtcCkgPiAkdGhpcy0+dGltZXN0YW1wX3RocmVzaG9sZCkgewoJICB0aHJv
dyBuZXcgT0F1dGhFeGNlcHRpb24oCgkJIkV4cGlyZWQgdGltZXN0YW1wLCB5b3VycyAkdGlt
ZXN0YW1wLCBvdXJzICRub3ciCgkgICk7Cgl9CiAgfQoKICAvKioKICAgKiBjaGVjayB0aGF0
IHRoZSBub25jZSBpcyBub3QgcmVwZWF0ZWQKICAgKi8KICBwcml2YXRlIGZ1bmN0aW9uIGNo
ZWNrX25vbmNlKCRjb25zdW1lciwgJHRva2VuLCAkbm9uY2UsICR0aW1lc3RhbXApIHsKCWlm
KCAhICRub25jZSApCgkgIHRocm93IG5ldyBPQXV0aEV4Y2VwdGlvbigKCQknTWlzc2luZyBu
b25jZSBwYXJhbWV0ZXIuIFRoZSBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQnCgkgICk7CgoJLy8g
dmVyaWZ5IHRoYXQgdGhlIG5vbmNlIGlzIHVuaXF1ZWlzaAoJJGZvdW5kID0gJHRoaXMtPmRh
dGFfc3RvcmUtPmxvb2t1cF9ub25jZSgKCSAgJGNvbnN1bWVyLAoJICAkdG9rZW4sCgkgICRu
b25jZSwKCSAgJHRpbWVzdGFtcAoJKTsKCWlmICgkZm91bmQpIHsKCSAgdGhyb3cgbmV3IE9B
dXRoRXhjZXB0aW9uKCJOb25jZSBhbHJlYWR5IHVzZWQ6ICRub25jZSIpOwoJfQogIH0KCn0K
CmNsYXNzIE9BdXRoRGF0YVN0b3JlIHsKICBmdW5jdGlvbiBsb29rdXBfY29uc3VtZXIoJGNv
bnN1bWVyX2tleSkgewoJLy8gaW1wbGVtZW50IG1lCiAgfQoKICBmdW5jdGlvbiBsb29rdXBf
dG9rZW4oJGNvbnN1bWVyLCAkdG9rZW5fdHlwZSwgJHRva2VuKSB7CgkvLyBpbXBsZW1lbnQg
bWUKICB9CgogIGZ1bmN0aW9uIGxvb2t1cF9ub25jZSgkY29uc3VtZXIsICR0b2tlbiwgJG5v
bmNlLCAkdGltZXN0YW1wKSB7CgkvLyBpbXBsZW1lbnQgbWUKICB9CgogIGZ1bmN0aW9uIG5l
d19yZXF1ZXN0X3Rva2VuKCRjb25zdW1lciwgJGNhbGxiYWNrID0gbnVsbCkgewoJLy8gcmV0
dXJuIGEgbmV3IHRva2VuIGF0dGFjaGVkIHRvIHRoaXMgY29uc3VtZXIKICB9CgogIGZ1bmN0
aW9uIG5ld19hY2Nlc3NfdG9rZW4oJHRva2VuLCAkY29uc3VtZXIsICR2ZXJpZmllciA9IG51
bGwpIHsKCS8vIHJldHVybiBhIG5ldyBhY2Nlc3MgdG9rZW4gYXR0YWNoZWQgdG8gdGhpcyBj
b25zdW1lcgoJLy8gZm9yIHRoZSB1c2VyIGFzc29jaWF0ZWQgd2l0aCB0aGlzIHRva2VuIGlm
IHRoZSByZXF1ZXN0IHRva2VuCgkvLyBpcyBhdXRob3JpemVkCgkvLyBzaG91bGQgYWxzbyBp
bnZhbGlkYXRlIHRoZSByZXF1ZXN0IHRva2VuCiAgfQoKfQoKY2xhc3MgT0F1dGhVdGlsIHsK
ICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHVybGVuY29kZV9yZmMzOTg2KCRpbnB1dCkgewog
IGlmIChpc19hcnJheSgkaW5wdXQpKSB7CglyZXR1cm4gYXJyYXlfbWFwKGFycmF5KCdPQXV0
aFV0aWwnLCAndXJsZW5jb2RlX3JmYzM5ODYnKSwgJGlucHV0KTsKICB9IGVsc2UgaWYgKGlz
X3NjYWxhcigkaW5wdXQpKSB7CglyZXR1cm4gc3RyX3JlcGxhY2UoCgkgICcrJywKCSAgJyAn
LAoJICBzdHJfcmVwbGFjZSgnJTdFJywgJ34nLCByYXd1cmxlbmNvZGUoJGlucHV0KSkKCSk7
CiAgfSBlbHNlIHsKCXJldHVybiAnJzsKICB9Cn0KCgogIC8vIFRoaXMgZGVjb2RlIGZ1bmN0
aW9uIGlzbid0IHRha2luZyBpbnRvIGNvbnNpZGVyYXRpb24gdGhlIGFib3ZlCiAgLy8gbW9k
aWZpY2F0aW9ucyB0byB0aGUgZW5jb2RpbmcgcHJvY2Vzcy4gSG93ZXZlciwgdGhpcyBtZXRo
b2QgZG9lc24ndAogIC8vIHNlZW0gdG8gYmUgdXNlZCBhbnl3aGVyZSBzbyBsZWF2aW5nIGl0
IGFzIGlzLgogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gdXJsZGVjb2RlX3JmYzM5ODYoJHN0
cmluZykgewoJcmV0dXJuIHVybGRlY29kZSgkc3RyaW5nKTsKICB9CgogIC8vIFV0aWxpdHkg
ZnVuY3Rpb24gZm9yIHR1cm5pbmcgdGhlIEF1dGhvcml6YXRpb246IGhlYWRlciBpbnRvCiAg
Ly8gcGFyYW1ldGVycywgaGFzIHRvIGRvIHNvbWUgdW5lc2NhcGluZwogIC8vIENhbiBmaWx0
ZXIgb3V0IGFueSBub24tb2F1dGggcGFyYW1ldGVycyBpZiBuZWVkZWQgKGRlZmF1bHQgYmVo
YXZpb3VyKQogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gc3BsaXRfaGVhZGVyKCRoZWFkZXIs
ICRvbmx5X2FsbG93X29hdXRoX3BhcmFtZXRlcnMgPSB0cnVlKSB7CgkkcGF0dGVybiA9ICcv
KChbLV9hLXpdKik9KCIoW14iXSopInwoW14sXSopKSw/KS8nOwoJJG9mZnNldCA9IDA7Cgkk
cGFyYW1zID0gYXJyYXkoKTsKCXdoaWxlIChwcmVnX21hdGNoKCRwYXR0ZXJuLCAkaGVhZGVy
LCAkbWF0Y2hlcywgUFJFR19PRkZTRVRfQ0FQVFVSRSwgJG9mZnNldCkgPiAwKSB7CgkgICRt
YXRjaCA9ICRtYXRjaGVzWzBdOwoJICAkaGVhZGVyX25hbWUgPSAkbWF0Y2hlc1syXVswXTsK
CSAgJGhlYWRlcl9jb250ZW50ID0gKGlzc2V0KCRtYXRjaGVzWzVdKSkgPyAkbWF0Y2hlc1s1
XVswXSA6ICRtYXRjaGVzWzRdWzBdOwoJICBpZiAocHJlZ19tYXRjaCgnL15vYXV0aF8vJywg
JGhlYWRlcl9uYW1lKSB8fCAhJG9ubHlfYWxsb3dfb2F1dGhfcGFyYW1ldGVycykgewoJCSRw
YXJhbXNbJGhlYWRlcl9uYW1lXSA9IE9BdXRoVXRpbDo6dXJsZGVjb2RlX3JmYzM5ODYoJGhl
YWRlcl9jb250ZW50KTsKCSAgfQoJICAkb2Zmc2V0ID0gJG1hdGNoWzFdICsgc3RybGVuKCRt
YXRjaFswXSk7Cgl9CgoJaWYgKGlzc2V0KCRwYXJhbXNbJ3JlYWxtJ10pKSB7CgkgIHVuc2V0
KCRwYXJhbXNbJ3JlYWxtJ10pOwoJfQoKCXJldHVybiAkcGFyYW1zOwogIH0KCiAgLy8gaGVs
cGVyIHRvIHRyeSB0byBzb3J0IG91dCBoZWFkZXJzIGZvciBwZW9wbGUgd2hvIGFyZW4ndCBy
dW5uaW5nIGFwYWNoZQogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gZ2V0X2hlYWRlcnMoKSB7
CglpZiAoZnVuY3Rpb25fZXhpc3RzKCdhcGFjaGVfcmVxdWVzdF9oZWFkZXJzJykpIHsKCSAg
Ly8gd2UgbmVlZCB0aGlzIHRvIGdldCB0aGUgYWN0dWFsIEF1dGhvcml6YXRpb246IGhlYWRl
cgoJICAvLyBiZWNhdXNlIGFwYWNoZSB0ZW5kcyB0byB0ZWxsIHVzIGl0IGRvZXNuJ3QgZXhp
c3QKCSAgJGhlYWRlcnMgPSBhcGFjaGVfcmVxdWVzdF9oZWFkZXJzKCk7CgoJICAvLyBzYW5p
dGl6ZSB0aGUgb3V0cHV0IG9mIGFwYWNoZV9yZXF1ZXN0X2hlYWRlcnMgYmVjYXVzZQoJICAv
LyB3ZSBhbHdheXMgd2FudCB0aGUga2V5cyB0byBiZSBDYXNlZC1MaWtlLVRoaXMgYW5kIGFy
aCgpCgkgIC8vIHJldHVybnMgdGhlIGhlYWRlcnMgaW4gdGhlIHNhbWUgY2FzZSBhcyB0aGV5
IGFyZSBpbiB0aGUKCSAgLy8gcmVxdWVzdAoJICAkb3V0ID0gYXJyYXkoKTsKCSAgZm9yZWFj
aCggJGhlYWRlcnMgQVMgJGtleSA9PiAkdmFsdWUgKSB7CgkJJGtleSA9IHN0cl9yZXBsYWNl
KAoJCQkiICIsCgkJCSItIiwKCQkJdWN3b3JkcyhzdHJ0b2xvd2VyKHN0cl9yZXBsYWNlKCIt
IiwgIiAiLCAka2V5KSkpCgkJICApOwoJCSRvdXRbJGtleV0gPSAkdmFsdWU7CgkgIH0KCX0g
ZWxzZSB7CgkgIC8vIG90aGVyd2lzZSB3ZSBkb24ndCBoYXZlIGFwYWNoZSBhbmQgYXJlIGp1
c3QgZ29pbmcgdG8gaGF2ZSB0byBob3BlCgkgIC8vIHRoYXQgJF9TRVJWRVIgYWN0dWFsbHkg
Y29udGFpbnMgd2hhdCB3ZSBuZWVkCgkgICRvdXQgPSBhcnJheSgpOwoJICBpZiggaXNzZXQo
JF9TRVJWRVJbJ0NPTlRFTlRfVFlQRSddKSApCgkJJG91dFsnQ29udGVudC1UeXBlJ10gPSAk
X1NFUlZFUlsnQ09OVEVOVF9UWVBFJ107CgkgIGlmKCBpc3NldCgkX0VOVlsnQ09OVEVOVF9U
WVBFJ10pICkKCQkkb3V0WydDb250ZW50LVR5cGUnXSA9ICRfRU5WWydDT05URU5UX1RZUEUn
XTsKCgkgIGZvcmVhY2ggKCRfU0VSVkVSIGFzICRrZXkgPT4gJHZhbHVlKSB7CgkJaWYgKHN1
YnN0cigka2V5LCAwLCA1KSA9PSAiSFRUUF8iKSB7CgkJICAvLyB0aGlzIGlzIGNoYW9zLCBi
YXNpY2FsbHkgaXQgaXMganVzdCB0aGVyZSB0byBjYXBpdGFsaXplIHRoZSBmaXJzdAoJCSAg
Ly8gbGV0dGVyIG9mIGV2ZXJ5IHdvcmQgdGhhdCBpcyBub3QgYW4gaW5pdGlhbCBIVFRQIGFu
ZCBzdHJpcCBIVFRQCgkJICAvLyBjb2RlIGZyb20gcHJ6ZW1lawoJCSAgJGtleSA9IHN0cl9y
ZXBsYWNlKAoJCQkiICIsCgkJCSItIiwKCQkJdWN3b3JkcyhzdHJ0b2xvd2VyKHN0cl9yZXBs
YWNlKCJfIiwgIiAiLCBzdWJzdHIoJGtleSwgNSkpKSkKCQkgICk7CgkJICAkb3V0WyRrZXld
ID0gJHZhbHVlOwoJCX0KCSAgfQoJfQoJcmV0dXJuICRvdXQ7CiAgfQoKICAvLyBUaGlzIGZ1
bmN0aW9uIHRha2VzIGEgaW5wdXQgbGlrZSBhPWImYT1jJmQ9ZSBhbmQgcmV0dXJucyB0aGUg
cGFyc2VkCiAgLy8gcGFyYW1ldGVycyBsaWtlIHRoaXMKICAvLyBhcnJheSgnYScgPT4gYXJy
YXkoJ2InLCdjJyksICdkJyA9PiAnZScpCiAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBwYXJz
ZV9wYXJhbWV0ZXJzKCAkaW5wdXQgKSB7CglpZiAoIWlzc2V0KCRpbnB1dCkgfHwgISRpbnB1
dCkgcmV0dXJuIGFycmF5KCk7CgoJJHBhaXJzID0gZXhwbG9kZSgnJicsICRpbnB1dCk7CgoJ
JHBhcnNlZF9wYXJhbWV0ZXJzID0gYXJyYXkoKTsKCWZvcmVhY2ggKCRwYWlycyBhcyAkcGFp
cikgewoJICAkc3BsaXQgPSBleHBsb2RlKCc9JywgJHBhaXIsIDIpOwoJICAkcGFyYW1ldGVy
ID0gT0F1dGhVdGlsOjp1cmxkZWNvZGVfcmZjMzk4Nigkc3BsaXRbMF0pOwoJICAkdmFsdWUg
PSBpc3NldCgkc3BsaXRbMV0pID8gT0F1dGhVdGlsOjp1cmxkZWNvZGVfcmZjMzk4Nigkc3Bs
aXRbMV0pIDogJyc7CgoJICBpZiAoaXNzZXQoJHBhcnNlZF9wYXJhbWV0ZXJzWyRwYXJhbWV0
ZXJdKSkgewoJCS8vIFdlIGhhdmUgYWxyZWFkeSByZWNpZXZlZCBwYXJhbWV0ZXIocykgd2l0
aCB0aGlzIG5hbWUsIHNvIGFkZCB0byB0aGUgbGlzdAoJCS8vIG9mIHBhcmFtZXRlcnMgd2l0
aCB0aGlzIG5hbWUKCgkJaWYgKGlzX3NjYWxhcigkcGFyc2VkX3BhcmFtZXRlcnNbJHBhcmFt
ZXRlcl0pKSB7CgkJICAvLyBUaGlzIGlzIHRoZSBmaXJzdCBkdXBsaWNhdGUsIHNvIHRyYW5z
Zm9ybSBzY2FsYXIgKHN0cmluZykgaW50byBhbiBhcnJheQoJCSAgLy8gc28gd2UgY2FuIGFk
ZCB0aGUgZHVwbGljYXRlcwoJCSAgJHBhcnNlZF9wYXJhbWV0ZXJzWyRwYXJhbWV0ZXJdID0g
YXJyYXkoJHBhcnNlZF9wYXJhbWV0ZXJzWyRwYXJhbWV0ZXJdKTsKCQl9CgoJCSRwYXJzZWRf
cGFyYW1ldGVyc1skcGFyYW1ldGVyXVtdID0gJHZhbHVlOwoJICB9IGVsc2UgewoJCSRwYXJz
ZWRfcGFyYW1ldGVyc1skcGFyYW1ldGVyXSA9ICR2YWx1ZTsKCSAgfQoJfQoJcmV0dXJuICRw
YXJzZWRfcGFyYW1ldGVyczsKICB9CgogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gYnVpbGRf
aHR0cF9xdWVyeSgkcGFyYW1zKSB7CglpZiAoISRwYXJhbXMpIHJldHVybiAnJzsKCgkvLyBV
cmxlbmNvZGUgYm90aCBrZXlzIGFuZCB2YWx1ZXMKCSRrZXlzID0gT0F1dGhVdGlsOjp1cmxl
bmNvZGVfcmZjMzk4NihhcnJheV9rZXlzKCRwYXJhbXMpKTsKCSR2YWx1ZXMgPSBPQXV0aFV0
aWw6OnVybGVuY29kZV9yZmMzOTg2KGFycmF5X3ZhbHVlcygkcGFyYW1zKSk7CgkkcGFyYW1z
ID0gYXJyYXlfY29tYmluZSgka2V5cywgJHZhbHVlcyk7CgoJLy8gUGFyYW1ldGVycyBhcmUg
c29ydGVkIGJ5IG5hbWUsIHVzaW5nIGxleGljb2dyYXBoaWNhbCBieXRlIHZhbHVlIG9yZGVy
aW5nLgoJLy8gUmVmOiBTcGVjOiA5LjEuMSAoMSkKCXVrc29ydCgkcGFyYW1zLCAnc3RyY21w
Jyk7CgoJJHBhaXJzID0gYXJyYXkoKTsKCWZvcmVhY2ggKCRwYXJhbXMgYXMgJHBhcmFtZXRl
ciA9PiAkdmFsdWUpIHsKCSAgaWYgKGlzX2FycmF5KCR2YWx1ZSkpIHsKCQkvLyBJZiB0d28g
b3IgbW9yZSBwYXJhbWV0ZXJzIHNoYXJlIHRoZSBzYW1lIG5hbWUsIHRoZXkgYXJlIHNvcnRl
ZCBieSB0aGVpciB2YWx1ZQoJCS8vIFJlZjogU3BlYzogOS4xLjEgKDEpCgkJbmF0c29ydCgk
dmFsdWUpOwoJCWZvcmVhY2ggKCR2YWx1ZSBhcyAkZHVwbGljYXRlX3ZhbHVlKSB7CgkJICAk
cGFpcnNbXSA9ICRwYXJhbWV0ZXIgLiAnPScgLiAkZHVwbGljYXRlX3ZhbHVlOwoJCX0KCSAg
fSBlbHNlIHsKCQkkcGFpcnNbXSA9ICRwYXJhbWV0ZXIgLiAnPScgLiAkdmFsdWU7CgkgIH0K
CX0KCS8vIEZvciBlYWNoIHBhcmFtZXRlciwgdGhlIG5hbWUgaXMgc2VwYXJhdGVkIGZyb20g
dGhlIGNvcnJlc3BvbmRpbmcgdmFsdWUgYnkgYW4gJz0nIGNoYXJhY3RlciAoQVNDSUkgY29k
ZSA2MSkKCS8vIEVhY2ggbmFtZS12YWx1ZSBwYWlyIGlzIHNlcGFyYXRlZCBieSBhbiAnJicg
Y2hhcmFjdGVyIChBU0NJSSBjb2RlIDM4KQoJcmV0dXJuIGltcGxvZGUoJyYnLCAkcGFpcnMp
OwogIH0KfSI7czozOiJtZDUiO3M6MzI6ImE1MDVhY2UxNWM3ODY3MTU1Zjc1MDA5ZDdjMWJk
MGVjIjt9

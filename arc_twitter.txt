# arc_twitter v4.2
# <a href="http://www.twitter.com">Twitter</a> for Textpattern
# Andy Carter
# http://andy-carter.com/

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YToxMTp7czo0OiJuYW1lIjtzOjExOiJhcmNfdHdpdHRlciI7czo3OiJ2ZXJzaW9uIjtzOjM6
IjQuMiI7czo2OiJhdXRob3IiO3M6MTE6IkFuZHkgQ2FydGVyIjtzOjEwOiJhdXRob3JfdXJp
IjtzOjIzOiJodHRwOi8vYW5keS1jYXJ0ZXIuY29tLyI7czoxMToiZGVzY3JpcHRpb24iO3M6
NjA6IjxhIGhyZWY9Imh0dHA6Ly93d3cudHdpdHRlci5jb20iPlR3aXR0ZXI8L2E+IGZvciBU
ZXh0cGF0dGVybiI7czo1OiJvcmRlciI7czoxOiI1IjtzOjQ6InR5cGUiO3M6MToiNSI7czo1
OiJmbGFncyI7czoxOiIzIjtzOjQ6ImhlbHAiO3M6MTgzNzQ6Igk8aDEgY2xhc3M9InRpdGxl
Ij48c3BhbiBjbGFzcz0iY2FwcyI+VFhQPC9zcGFuPiBUd2VldCAoYXJjX3R3aXR0ZXIgZm9y
IFRleHRwYXR0ZXJuKTwvaDE+CgoJPG9sPgoJCTxsaT48YSBocmVmPSIjYXJjX3R3aXR0ZXJf
YXV0aG9yIj5BdXRob3I8L2E+PC9saT4KCQk8bGk+PGEgaHJlZj0iI2FyY190d2l0dGVyX2lu
c3RhbGxhdGlvbiI+SW5zdGFsbGF0aW9uIC8gVW5pbnN0YWxsYXRpb248L2E+PC9saT4KCQk8
bGk+PGEgaHJlZj0iI2FyY190d2l0dGVyX3RhZyI+VGhlIGFyY190d2l0dGVyIHRhZzwvYT48
L2xpPgoJCTxsaT48YSBocmVmPSIjYXJjX3R3aXR0ZXJfc2VhcmNoX3RhZyI+VGhlIGFyY190
d2l0dGVyX3NlYXJjaCB0YWc8L2E+PC9saT4KCQk8bGk+PGEgaHJlZj0iI2FyY190d2l0dGVy
X3R3ZWV0X2J1dHRvbl90YWciPlRoZSBhcmNfdHdpdHRlcl90d2VldF9idXR0b24gdGFnPC9h
PjwvbGk+CgkJPGxpPjxhIGhyZWY9IiNhcmNfdHdpdHRlcl9mb2xsb3dfYnV0dG9uX3RhZyI+
VGhlIGFyY190d2l0dGVyX2ZvbGxvd19idXR0b24gdGFnPC9hPjwvbGk+CgkJPGxpPjxhIGhy
ZWY9IiNhcmNfdHdpdHRlcl90d2VldF91cmwiPlRoZSBhcmNfdHdpdHRlcl90d2VldF91cmwg
dGFnPC9hPjwvbGk+CgkJPGxpPjxhIGhyZWY9IiNhcmNfdHdpdHRlcl90aW55dXJsIj5UaGUg
YXJjX3R3aXR0ZXJfdGlueXVybCB0YWc8L2E+PC9saT4KCQk8bGk+PGEgaHJlZj0iI2FyY190
d2l0dGVyX2NhY2hpbmciPkNhY2hpbmc8L2E+PC9saT4KCQk8bGk+PGEgaHJlZj0iI2FyY190
d2l0dGVyX3ByZWZzIj5QcmVmZXJlbmNlczwvYT48L2xpPgoJCTxsaT48YSBocmVmPSIjYXJj
X3R3aXR0ZXJfYXJ0aWNsZSI+VHdlZXRpbmcgYXJ0aWNsZXM8L2E+PC9saT4KCQk8bGk+PGEg
aHJlZj0iI2FyY190d2l0dGVyX2FkbWluIj5UaGUgVHdpdHRlciB0YWI8L2E+PC9saT4KCTwv
b2w+CgoJPHA+PHNwYW4gY2xhc3M9ImNhcHMiPlRYUDwvc3Bhbj4gVHdlZXQgcHJvdmlkZXMg
YWNjZXNzIHRvIHlvdXIgVHdpdHRlciBhY2NvdW50IHRocm91Z2ggYm90aCB0aGUgYWRtaW4g
aW50ZXJmYWNlIGFuZCB0aGUgcHVibGljIHNpZGUgb2YgeW91ciBzaXRlLiBVcGRhdGUgVHdp
dHRlciB3aGVuIHlvdSBwb3N0IGEgbmV3IGFydGljbGUgKHdpdGggYXJ0aWNsZS1ieS1hcnRp
Y2xlIG9wdCBvdXQgb3B0aW9uKSwgdXBkYXRlIGFuZCB2aWV3IHlvdXIgVHdpdHRlciBmZWVk
IHRocm91Z2ggdGhlIGFkbWluIFR3aXR0ZXIgdGFiLCBhbmQgZGlzcGxheSBUd2l0dGVyIGZl
ZWRzIG9uIHlvdXIgc2l0ZS48L3A+CgoJPHA+UmVxdWlyZW1lbnRzOi08L3A+CgoJPHVsPgoJ
CTxsaT5UZXh0cGF0dGVybiA0LjUrPC9saT4KCQk8bGk+PHNwYW4gY2xhc3M9ImNhcHMiPlBI
UDwvc3Bhbj4gNSBhbmQgY1VSTDwvbGk+Cgk8L3VsPgoKCTxoMiBjbGFzcz0ic2VjdGlvbiIg
aWQ9ImFyY190d2l0dGVyX2F1dGhvciI+QXV0aG9yPC9oMj4KCgk8cD48YSBocmVmPSJodHRw
Oi8vYW5keS1jYXJ0ZXIuY29tIj5BbmR5IENhcnRlcjwvYT4uIEZvciBvdGhlciBUZXh0cGF0
dGVybiBwbHVnaW5zIGJ5IG1lIHZpc2l0IG15IDxhIGhyZWY9Imh0dHA6Ly9hbmR5LWNhcnRl
ci5jb20vdHhwIj5QbHVnaW5zIHBhZ2U8L2E+LjwvcD4KCgk8cD5Db250cmlidXRvcnM6IEFu
ZHkgQ2FydGVyLCBQaGlsIFdhcmVoYW0gYW5kIFRvbW15IFNjaG11Y2tlci48L3A+CgoJPHA+
VGhhbmtzIHRvIDxhIGhyZWY9Imh0dHA6Ly9tYW5mcmUubmV0LyI+TWljaGFlbCBNYW5mcmU8
L2E+IGZvciBpbnNwaXJhdGlvbiBmb3IgdGhlIGFydGljbGUgdHdlZXQgcGFydCBvZiB0aGlz
IHBsdWdpbiBiYXNlZCBvbiBoaXMgPHNwYW4gY2xhc3M9InRhZyI+bWVtX3R3aXR0ZXI8L3Nw
YW4+IHBsdWdpbi4gIEFkZGl0aW9uYWwgdGhhbmtzIHRvIHRoZSBncmVhdCBUZXh0cGF0dGVy
biBjb21tdW5pdHkgZm9yIGhlbHBpbmcgdG8gdGVzdCB0aGlzIHBsdWdpbiBhbmQgZm9yIHN1
Z2dlc3RpbmcgbmV3IGZlYXR1cmVzLiBUaGUgT0F1dGggcGFydCBvZiB0aGUgcGx1Z2luIGlz
IHRoYW5rcyB0byA8YSBocmVmPSJodHRwOi8vdHdpdHRlci5jb20vYWJyYWhhbSI+QWJyYWhh
bSBXaWxsaWFtczwvYT4uPC9wPgoKCTxoMiBjbGFzcz0ic2VjdGlvbiIgaWQ9ImFyY190d2l0
dGVyX2luc3RhbGxhdGlvbiI+SW5zdGFsbGF0aW9uIC8gVW5pbnN0YWxsYXRpb248L2gyPgoK
CTxwPlRvIGluc3RhbGwgZ28gdG8gdGhlICYjODIxNjtwbHVnaW5zJiM4MjE3OyB0YWIgdW5k
ZXIgJiM4MjE2O2FkbWluJiM4MjE3OyBhbmQgcGFzdGUgdGhlIHBsdWdpbiBjb2RlIGludG8g
dGhlICYjODIxNjtJbnN0YWxsIHBsdWdpbiYjODIxNzsgYm94LCAmIzgyMTY7dXBsb2FkJiM4
MjE3OyBhbmQgdGhlbiAmIzgyMTY7aW5zdGFsbCYjODIxNzsuIFRoZSBwbHVnaW4gd2lsbCBi
ZSBhdXRvbWF0aWNhbGx5IGFjdGl2YXRlZC48L3A+CgoJPHA+QmVmb3JlIHlvdSBzdGFydCB1
c2luZyA8c3BhbiBjbGFzcz0idGFnIj5hcmNfdHdpdHRlcjwvc3Bhbj4geW91IHdpbGwgbmVl
ZCB0byBtYWtlIHN1cmUgdGhhdCB0aGUgY2FjaGUgZGlyZWN0b3J5IGlzIHdyaXRhYmxlLiBT
ZWUgdGhlICYjODIxNjtDYWNoaW5nJiM4MjE3OyBzdWJzZWN0aW9uIGJlbG93IGZvciBmdXJ0
aGVyIGluZm9ybWF0aW9uLjwvcD4KCgk8cD48c3BhbiBjbGFzcz0idGFnIj5hcmNfdHdpdHRl
cjwvc3Bhbj4gc2hvdWxkIG5vdyBiZSByZWFkeSBmb3IgdXNlIG9uIHRoZSBwdWJsaWMtc2lk
ZSBvZiB5b3VyIHNpdGUuPC9wPgoKCTxwPlRvIHVubG9jayB0aGUgYWRtaW4gZmVhdHVyZXMg
b2YgdGhpcyBwbHVnaW4geW91IHdpbGwgbmVlZCB0byBhc3NvY2lhdGUgeW91ciBzaXRlIHdp
dGggYSBUd2l0dGVyIGFjY291bnQgYnkgY29ubmVjdGluZyB0byBUd2l0dGVyIGZyb20gdGhl
IHBsdWdpbiYjODIxNztzIG9wdGlvbnMgc2NyZWVuLiBDbGljayBvbiB0aGUgbGluayB0byBj
b25uZWN0IHRvIFR3aXR0ZXIsIHlvdSB3aWxsIGJlIGFza2VkIHRvIGxvZ2luIHRvIFR3aXR0
ZXIsIGNsaWNraW5nIHRoaXMgbGluayB3aWxsIHRlbXBvcmFyaWx5IHRha2UgeW91IHRvIHRo
ZSBUd2l0dGVyIHNpdGUgd2hlcmUgeW91IHdpbGwgYmUgYXNrZWQgdG8gbG9naW4gYW5kIGFw
cHJvdmUgYWNjZXNzIGZvciA8c3BhbiBjbGFzcz0iY2FwcyI+VFhQPC9zcGFuPiBUd2VldCB0
byByZWFkIGFuZCB3cml0ZSB0byB5b3VyIFR3aXR0ZXIgYWNjb3VudC4gSWYgYWxsIGlzIHN1
Y2Nlc3NmdWwgeW91IHdpbGwgYmUgcmV0dXJuZWQgdG8gdGhlIG9wdGlvbnMgc2NyZWVuIGFu
ZCB5b3VyIHVzZXIgbmFtZSB3aWxsIGFwcGVhci48L3A+CgoJPHA+QXQgYW55IHRpbWUgeW91
IGNhbiBkaXNhc3NvY2lhdGUgeW91ciBUd2l0dGVyIGFjY291bnQgd2l0aCA8c3BhbiBjbGFz
cz0iY2FwcyI+VFhQPC9zcGFuPiBUd2VldCB2aWEgeW91ciBUd2l0dGVyIGFjY291bnQgcHJl
ZmVyZW5jZXMgb24gdGhlIDxhIGhyZWY9Imh0dHA6Ly93d3cudHdpdHRlci5jb20iPlR3aXR0
ZXIgd2Vic2l0ZTwvYT4uPC9wPgoKCTxwPlRvIHVuaW5zdGFsbCA8c3BhbiBjbGFzcz0idGFn
Ij5hcmNfdHdpdHRlcjwvc3Bhbj4gc2ltcGx5IGRlbGV0ZSB0aGUgcGx1Z2luIGZyb20gdGhl
ICYjODIxNjtQbHVnaW5zJiM4MjE3OyB0YWIuICBUaGlzIHdpbGwgcmVtb3ZlIHRoZSBwbHVn
aW4gY29kZSwgZGVsZXRlIHJlbGF0ZWQgcHJlZmVyZW5jZXMgYW5kIGRyb3AgdGhlIDxzcGFu
IGNsYXNzPSJ0YWciPmFyY190d2l0dGVyPC9zcGFuPiB0YWJsZSBmcm9tIHlvdXIgVGV4dHBh
dHRlcm4gZGF0YWJhc2UuPC9wPgoKCTxoMiBjbGFzcz0ic2VjdGlvbiIgaWQ9ImFyY190d2l0
dGVyX3RhZyI+VGhlIGFyY190d2l0dGVyIHRhZzwvaDI+CgoJPGgzPlN5bnRheDwvaDM+CgoJ
PHA+Jmx0O3R4cDphcmNfdHdpdHRlciB1c2VyPSZxdW90O2RybW9ua2V5bmluamEmcXVvdDsg
LyZndDs8L3A+CgoJPGgzPlVzYWdlPC9oMz4KCgk8dGFibGU+CgkJPHRyPgoJCQk8dGg+QXR0
cmlidXRlPC90aD4KCQkJPHRoPkRlc2NyaXB0aW9uPC90aD4KCQkJPHRoPkRlZmF1bHQ8L3Ro
PgoJCQk8dGg+RXhhbXBsZTwvdGg+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD51c2VyPC90ZD4K
CQkJPHRkPlR3aXR0ZXIgdXNlciBuYW1lPC90ZD4KCQkJPHRkPiA8ZW0+YXJjX3R3aXR0ZXIg
dXNlcm5hbWU8L2VtPjwvdGQ+CgkJCTx0ZD51c2VyPSZxdW90O2RybW9ua2V5bmluamEmcXVv
dDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+cmV0d2VldHM8L3RkPgoJCQk8dGQ+MSB0
byBpbmNsdWRlIHJldHdlZXRzLCAwIHRvIGV4Y2x1ZGUgdGhlbSBmcm9tIHRoZSBmZWVkPC90
ZD4KCQkJPHRkPjA8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+cmVwbGllczwvdGQ+CgkJ
CTx0ZD4xIHRvIGluY2x1ZGUgcmVwbGllcywgMCB0byBleGNsdWRlIHRoZW0gZnJvbSB0aGUg
ZmVlZDwvdGQ+CgkJCTx0ZD4xPC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmxpbWl0PC90
ZD4KCQkJPHRkPk1heGltdW0gbnVtYmVyIG9mIHR3ZWV0cyB0byBkaXNwbGF5IChtYXguIDIw
MCk8L3RkPgoJCQk8dGQ+MTA8L3RkPgoJCQk8dGQ+bGltaXQ9JnF1b3Q7MjUmcXVvdDs8L3Rk
PgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+ZmV0Y2g8L3RkPgoJCQk8dGQ+TWF4aW11bSBudW1i
ZXIgb2YgdHdlZXRzIHRvIHJldHJpZXZlIGZyb20gVHdpdHRlciAobWF4LiAyMDApPHN1cCBj
bGFzcz0iZm9vdG5vdGUiPjxhIGhyZWY9IiNmbjYzNzA4ODI0ODUyYTA5ZmRmODRjMzIiPjE8
L2E+PC9zdXA+PC90ZD4KCQkJPHRkPjA8L3RkPgoJCQk8dGQ+ZmV0Y2g9JnF1b3Q7NTAmcXVv
dDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+ZnVsbF91cmxzPC90ZD4KCQkJPHRkPjEg
dG8gZGlzcGxheSBmdWxsIDxzcGFuIGNsYXNzPSJjYXBzIj48c3BhbiBjbGFzcz0iY2FwcyI+
VVJMPC9zcGFuPjwvc3Bhbj5zLCAwIGZvciB0LmNvIDxzcGFuIGNsYXNzPSJjYXBzIj48c3Bh
biBjbGFzcz0iY2FwcyI+VVJMPC9zcGFuPjwvc3Bhbj5zPC90ZD4KCQkJPHRkPjA8L3RkPgoJ
CTwvdHI+CgkJPHRyPgoJCQk8dGQ+ZGF0ZWZvcm1hdDwvdGQ+CgkJCTx0ZD5Gb3JtYXQgdGhh
dCB1cGRhdGUgZGF0ZXMgd2lsbCBhcHBlYXIgYXM8L3RkPgoJCQk8dGQ+IDxlbT5BcmNoaXZl
IGRhdGUgZm9ybWF0PC9lbT48L3RkPgoJCQk8dGQ+ZGF0ZWZvcm1hdD0mcXVvdDslYiAlT2Us
ICVJOiVNICVwJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmxhYmVsPC90ZD4K
CQkJPHRkPkxhYmVsIGZvciB0aGUgdG9wIG9mIHRoZSBsaXN0PC90ZD4KCQkJPHRkPiA8ZW0+
bm8gbGFiZWw8L2VtPjwvdGQ+CgkJCTx0ZD5sYWJlbD0mcXVvdDtNeSBUd2l0dGVyIHRpbWVs
aW5lJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmxhYmVsdGFnPC90ZD4KCQkJ
PHRkPkluZGVwZW5kZW50IHdyYXB0YWcgZm9yIGxhYmVsPC90ZD4KCQkJPHRkPiA8ZW0+dW5z
ZXQ8L2VtPjwvdGQ+CgkJCTx0ZD5sYWJlbHRhZz0mcXVvdDtoMyZxdW90OzwvdGQ+CgkJPC90
cj4KCQk8dHI+CgkJCTx0ZD5icmVhazwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2FwcyI+
PHNwYW4gY2xhc3M9ImNhcHMiPkhUTUw8L3NwYW4+PC9zcGFuPiB0YWcgKHdpdGhvdXQgYnJh
Y2tldHMpLCBvciBzdHJpbmcsIHVzZWQgdG8gc2VwYXJhdGUgdGhlIHVwZGF0ZXM8L3RkPgoJ
CQk8dGQ+bGk8L3RkPgoJCQk8dGQ+YnJlYWs9JnF1b3Q7YnImcXVvdDs8L3RkPgoJCTwvdHI+
CgkJPHRyPgoJCQk8dGQ+d3JhcHRhZzwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2FwcyI+
PHNwYW4gY2xhc3M9ImNhcHMiPkhUTUw8L3NwYW4+PC9zcGFuPiB0YWcgdG8gYmUgdXNlZCBh
cyB0aGUgd3JhcHRhZywgd2l0aG91dCBicmFja2V0czwvdGQ+CgkJCTx0ZD4gPGVtPnVuc2V0
PC9lbT48L3RkPgoJCQk8dGQ+d3JhcHRhZz0mcXVvdDt1bCZxdW90OzwvdGQ+CgkJPC90cj4K
CQk8dHI+CgkJCTx0ZD5jbGFzczwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2FwcyI+PHNw
YW4gY2xhc3M9ImNhcHMiPkNTUzwvc3Bhbj48L3NwYW4+IGNsYXNzIGF0dHJpYnV0ZSBmb3Ig
d3JhcHRhZzwvdGQ+CgkJCTx0ZD5hcmNfdHdpdHRlcjwvdGQ+CgkJCTx0ZD5jbGFzcz0mcXVv
dDt0d2l0dGVyJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmNsYXNzX3Bvc3Rl
ZDwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2FwcyI+PHNwYW4gY2xhc3M9ImNhcHMiPkNT
Uzwvc3Bhbj48L3NwYW4+IGNsYXNzIGF0dHJpYnV0ZSBhcHBsaWVkIHRvIHNwYW4gdGFnIGFy
b3VuZCBwb3N0ZWQgZGF0ZTwvdGQ+CgkJCTx0ZD5hcmNfdHdpdHRlci1wb3N0ZWQ8L3RkPgoJ
CTwvdHI+Cgk8L3RhYmxlPgoKCTxwIGlkPSJmbjYzNzA4ODI0ODUyYTA5ZmRmODRjMzIiIGNs
YXNzPSJmb290bm90ZSI+PHN1cD4xPC9zdXA+IFR3aXR0ZXImIzgyMTc7cyA8c3BhbiBjbGFz
cz0iY2FwcyI+QVBJPC9zcGFuPiBjb3VudHMgdGhlIG51bWJlciBvZiB0d2VldHMgdG8gcmV0
dXJuIGJlZm9yZSBhcHBseWluZyBzb21lIG9mIHRoZSBmaWx0ZXJzLCBzbyB0aGUgcmVzcG9u
c2UgY2FuIGJlIGZld2VyIHR3ZWV0cyB0aGFuIGV4cGVjdGVkLiBUbyBoZWxwIGF2b2lkIHRo
aXMgeW91IGNhbiBzZXQgYSA8ZW0+ZmV0Y2g8L2VtPiBsaW1pdCB0aGF0IGlzIGhpZ2hlciB0
aGFuIHRoZSBkaXNwbGF5IDxlbT5saW1pdDwvZW0+IHRoYXQgeW91IHdhbnQgdG8gb3V0cHV0
LiBJZiA8ZW0+ZmV0Y2g8L2VtPiBpcyBsZXNzIHRoYW4gPGVtPmxpbWl0PC9lbT4gdGhlIGxh
dHRlciB3aWxsIGJlIHVzZWQgaW5zdGVhZC48L3A+CgoJPGgzPkV4YW1wbGUgdXNhZ2U8L2gz
PgoKCTxwPiZsdDt0eHA6YXJjX3R3aXR0ZXIgdXNlcj0mcXVvdDtkcm1vbmtleW5pbmphJnF1
b3Q7IGxpbWl0PSZxdW90OzUmcXVvdDsgd3JhcHRhZz0mcXVvdDt1bCZxdW90OyBicmVhaz0m
cXVvdDtsaSZxdW90OyBkYXRlZm9ybWF0PSZxdW90OyViICVPZSwgJUk6JU0gJXAmcXVvdDsg
LyZndDs8L3A+CgoJPHA+UHJvZHVjZXMgYSBidWxsZXQgcG9pbnQgbGlzdCBvZiB0aGUgbGFz
dCA1IFR3aXR0ZXIgdXBkYXRlcyBmcm9tIGRybW9ua2V5bmluamEmIzgyMTc7cyBUd2l0dGVy
IGZlZWQgd2l0aCBhIGRlZmluZWQgZGF0ZSBmb3JtYXQgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1
bHQgYXJjaGl2ZSBkYXRlIGZvcm1hdC48L3A+CgoJPGgyIGNsYXNzPSJzZWN0aW9uIiBpZD0i
YXJjX3R3aXR0ZXJfc2VhcmNoX3RhZyI+VGhlIGFyY190d2l0dGVyX3NlYXJjaCB0YWc8L2gy
PgoKCTxoMz5TeW50YXg8L2gzPgoKCTxwPiZsdDt0eHA6YXJjX3R3aXR0ZXJfc2VhcmNoIGhh
c2h0YWdzPSZxdW90O3R4cCZxdW90OyAvJmd0OzwvcD4KCgk8aDM+VXNhZ2U8L2gzPgoKCTx0
YWJsZT4KCQk8dHI+CgkJCTx0aD5BdHRyaWJ1dGU8L3RoPgoJCQk8dGg+RGVzY3JpcHRpb248
L3RoPgoJCQk8dGg+RGVmYXVsdDwvdGg+CgkJCTx0aD5FeGFtcGxlPC90aD4KCQk8L3RyPgoJ
CTx0cj4KCQkJPHRkPnNlYXJjaDwvdGQ+CgkJCTx0ZD5Db21tYSBzZXBhcmF0ZWQgbGlzdCBv
ZiBzZWFyY2ggd29yZHM8L3RkPgoJCQk8dGQ+IDxlbT51bnNldDwvZW0+PC90ZD4KCQkJPHRk
PnNlYXJjaD0mcXVvdDt0eHAsdGV4dHBhdHRlcm4mcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRy
PgoJCQk8dGQ+aGFzaHRhZ3M8L3RkPgoJCQk8dGQ+Q29tbWEgc2VwYXJhdGVkIGxpc3Qgb2Yg
aGFzaHRhZ3MgdG8gc2VhcmNoIGZvciAobm90IGluY2x1ZGluZyB0aGUgaGFzaCk8L3RkPgoJ
CQk8dGQ+IDxlbT51bnNldDwvZW0+PC90ZD4KCQkJPHRkPmhhc2h0YWdzPSZxdW90O3R4cCx0
ZXh0cGF0dGVybiZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5yZXBseTwvdGQ+
CgkJCTx0ZD5Vc2VybmFtZSBvZiB0d2VldHMgaW4gcmVwbHkgdG88L3RkPgoJCQk8dGQ+IDxl
bT51bnNldDwvZW0+PC90ZD4KCQkJPHRkPnJlcGx5PSZxdW90O3R3aXR0ZXImcXVvdDs8L3Rk
PgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+bWVudGlvbjwvdGQ+CgkJCTx0ZD5Vc2VybmFtZSBv
ZiB1c2VyIG1lbnRpb25lZCBpbiB0d2VldHMgKDxpPmkuZS48L2k+IHR3ZWV0cyBjb250YWlu
aW5nIEB1c2VybmFtZSk8L3RkPgoJCQk8dGQ+IDxlbT51bnNldDwvZW0+PC90ZD4KCQkJPHRk
Pm1lbnRpb249JnF1b3Q7dHdpdHRlciZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0
ZD5saW1pdDwvdGQ+CgkJCTx0ZD5NYXhpbXVtIG51bWJlciBvZiB0d2VldHMgdG8gZGlzcGxh
eSAobWF4LiAyMDApPC90ZD4KCQkJPHRkPjEwPC90ZD4KCQkJPHRkPmxpbWl0PSZxdW90OzI1
JnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmZ1bGxfdXJsczwvdGQ+CgkJCTx0
ZD4xIHRvIGRpc3BsYXkgZnVsbCA8c3BhbiBjbGFzcz0iY2FwcyI+PHNwYW4gY2xhc3M9ImNh
cHMiPlVSTDwvc3Bhbj48L3NwYW4+cywgMCBmb3IgdC5jbyA8c3BhbiBjbGFzcz0iY2FwcyI+
PHNwYW4gY2xhc3M9ImNhcHMiPlVSTDwvc3Bhbj48L3NwYW4+czwvdGQ+CgkJCTx0ZD4wPC90
ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmRhdGVmb3JtYXQ8L3RkPgoJCQk8dGQ+Rm9ybWF0
IHRoYXQgdXBkYXRlIGRhdGVzIHdpbGwgYXBwZWFyIGFzPC90ZD4KCQkJPHRkPiA8ZW0+QXJj
aGl2ZSBkYXRlIGZvcm1hdDwvZW0+PC90ZD4KCQkJPHRkPmRhdGVmb3JtYXQ9JnF1b3Q7JWIg
JU9lLCAlSTolTSAlcCZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5sYWJlbDwv
dGQ+CgkJCTx0ZD5MYWJlbCBmb3IgdGhlIHRvcCBvZiB0aGUgbGlzdDwvdGQ+CgkJCTx0ZD4g
PGVtPm5vIGxhYmVsPC9lbT48L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+bGFiZWx0YWc8
L3RkPgoJCQk8dGQ+SW5kZXBlbmRlbnQgd3JhcHRhZyBmb3IgbGFiZWw8L3RkPgoJCQk8dGQ+
IDxlbT51bnNldDwvZW0+PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmJyZWFrPC90ZD4K
CQkJPHRkPjxzcGFuIGNsYXNzPSJjYXBzIj48c3BhbiBjbGFzcz0iY2FwcyI+SFRNTDwvc3Bh
bj48L3NwYW4+IHRhZyAod2l0aG91dCBicmFja2V0cyksIG9yIHN0cmluZywgdXNlZCB0byBz
ZXBhcmF0ZSB0aGUgdXBkYXRlczwvdGQ+CgkJCTx0ZD5saTwvdGQ+CgkJPC90cj4KCQk8dHI+
CgkJCTx0ZD53cmFwdGFnPC90ZD4KCQkJPHRkPjxzcGFuIGNsYXNzPSJjYXBzIj48c3BhbiBj
bGFzcz0iY2FwcyI+SFRNTDwvc3Bhbj48L3NwYW4+IHRhZyB0byBiZSB1c2VkIGFzIHRoZSB3
cmFwdGFnLCB3aXRob3V0IGJyYWNrZXRzPC90ZD4KCQkJPHRkPiA8ZW0+dW5zZXQ8L2VtPjwv
dGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5jbGFzczwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFz
cz0iY2FwcyI+PHNwYW4gY2xhc3M9ImNhcHMiPkNTUzwvc3Bhbj48L3NwYW4+IGNsYXNzIGF0
dHJpYnV0ZSBmb3Igd3JhcHRhZzwvdGQ+CgkJCTx0ZD5hcmNfdHdpdHRlcl9zZWFyY2g8L3Rk
PgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+Y2xhc3NfdXNlcjwvdGQ+CgkJCTx0ZD48c3BhbiBj
bGFzcz0iY2FwcyI+PHNwYW4gY2xhc3M9ImNhcHMiPkNTUzwvc3Bhbj48L3NwYW4+IGNsYXNz
IGF0dHJpYnV0ZSBhcHBsaWVkIHRvIHNwYW4gdGFnIGFyb3VuZCB1c2VyIG5hbWU8L3RkPgoJ
CQk8dGQ+YXJjX3R3aXR0ZXItdXNlcjwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5jbGFz
c19wb3N0ZWQ8L3RkPgoJCQk8dGQ+PHNwYW4gY2xhc3M9ImNhcHMiPjxzcGFuIGNsYXNzPSJj
YXBzIj5DU1M8L3NwYW4+PC9zcGFuPiBjbGFzcyBhdHRyaWJ1dGUgYXBwbGllZCB0byBzcGFu
IHRhZyBhcm91bmQgcG9zdGVkIGRhdGU8L3RkPgoJCQk8dGQ+YXJjX3R3aXR0ZXItcG9zdGVk
PC90ZD4KCQk8L3RyPgoJPC90YWJsZT4KCgk8aDM+RXhhbXBsZSB1c2FnZTwvaDM+CgoJPHA+
Jmx0O3R4cDphcmNfdHdpdHRlcl9zZWFyY2ggc2VhcmNoPSZxdW90O3BsdWdpbiZxdW90OyBo
YXNodGFncz0mcXVvdDt0eHAsdGV4dHBhdHRlcm4mcXVvdDsgbGltaXQ9JnF1b3Q7MjUmcXVv
dDsgLyZndDs8L3A+CgoJPHA+UHJvZHVjZXMgYSBsaXN0IG9mIHR3ZWV0cyBjb250YWluaW5n
IHRoZSB3b3JkICYjODIxNjtwbHVnaW4mIzgyMTc7IGFuZCB0aGUgaGFzaHRhZ3MgJiM4MjE2
OyN0eHAmIzgyMTc7IGFuZCAmIzgyMTY7I3RleHRwYXR0ZXJuJiM4MjE3Oy4gVGhlIHRhZyB3
aWxsIHJldHVybiBhIG1heGltdW0gb2YgMjUgdHdlZXRzLjwvcD4KCgk8aDIgY2xhc3M9InNl
Y3Rpb24iIGlkPSJhcmNfdHdpdHRlcl9yZXR3ZWV0X3RhZyI+VGhlIGFyY190d2l0dGVyX3R3
ZWV0X2J1dHRvbiB0YWc8L2gyPgoKCTxwPk91dHB1dHMgdGhlIFR3aXR0ZXIgdHdlZXQgYnV0
dG9uIChmb3JtZXJseSAmbHQ7dHhwOmFyY190d2l0dGVyX3JldHdlZXQgLyZndDspLjwvcD4K
Cgk8aDM+U3ludGF4PC9oMz4KCgk8cD4mbHQ7dHhwOmFyY190d2l0dGVyX3R3ZWV0X2J1dHRv
biAvJmd0OzwvcD4KCgk8aDM+VXNhZ2U8L2gzPgoKCTx0YWJsZT4KCQk8dHI+CgkJCTx0aD5B
dHRyaWJ1dGU8L3RoPgoJCQk8dGg+RGVzY3JpcHRpb248L3RoPgoJCQk8dGg+RGVmYXVsdDwv
dGg+CgkJCTx0aD5FeGFtcGxlPC90aD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPnVzZXI8L3Rk
PgoJCQk8dGQ+VHdpdHRlciB1c2VyIG5hbWUgdG8gcXVvdGU8L3RkPgoJCQk8dGQ+IDxlbT5h
cmNfdHdpdHRlciB1c2VybmFtZTwvZW0+PC90ZD4KCQkJPHRkPnVzZXI9JnF1b3Q7ZHJtb25r
ZXluaW5qYSZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD51cmw8L3RkPgoJCQk8
dGQ+PHNwYW4gY2xhc3M9ImNhcHMiPjxzcGFuIGNsYXNzPSJjYXBzIj5VUkw8L3NwYW4+PC9z
cGFuPiB0byB0d2VldDwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD50ZXh0PC90ZD4KCQkJ
PHRkPlR3ZWV0IHRleHQ8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+Zm9sbG93MTwvdGQ+
CgkJCTx0ZD5TdWdnZXN0ZWQgVHdpdHRlciBhY2NvdW50IHRvIGZvbGxvdywgZm9yIGV4YW1w
bGUgeW91ciBvd248L3RkPgoJCQk8dGQ+QSBUd2l0dGVyIHVzZXIgdG8gcmVjb21tZW5kPC90
ZD4KCQkJPHRkPmZvbGxvdzE9JnF1b3Q7VGV4dHBhdHRlcm4mcXVvdDs8L3RkPgoJCTwvdHI+
CgkJPHRyPgoJCQk8dGQ+Zm9sbG93MjwvdGQ+CgkJCTx0ZD5BcyBmb2xsb3cxPC90ZD4KCQkJ
PHRkPiA8ZW0+dW5zZXQ8L2VtPjwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5sYW5nPC90
ZD4KCQkJPHRkPkxhbmd1YWdlPC90ZD4KCQkJPHRkPmVuPC90ZD4KCQkJPHRkPmxhbmc9JnF1
b3Q7ZXMmcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+Y291bnQ8L3RkPgoJCQk8
dGQ+Q291bnQgYm94IHBvc2l0aW9uLCBvcHRpb25zOiBub25lLCBob3Jpem9udGFsIG9yIHZl
cnRpY2FsPC90ZD4KCQkJPHRkPmhvcml6b250YWw8L3RkPgoJCQk8dGQ+Y291bnQ9JnF1b3Q7
bm9uZSZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5pbmNsdWRlX2pzPC90ZD4K
CQkJPHRkPldoZXRoZXIgb3Igbm90IHRvIGluY2x1ZGUgdGhlIHdpZGdldCBKYXZhU2NyaXB0
PC90ZD4KCQkJPHRkPjE8L3RkPgoJCQk8dGQ+aW5jbHVkZV9qcz0mcXVvdDswJnF1b3Q7PC90
ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPm9wdGltaXNlX2pzPC90ZD4KCQkJPHRkPk9wdGlt
aXNlIHRoZSBKYXZhU2NyaXB0IGJ5IHVzaW5nIGEgbG9jYWwgc2NyaXB0IHJhdGhlciB0aGFu
IHRoYXQgaG9zdGVkIG9uIHRoZSBUd2l0dGVyIHNpdGU8L3RkPgoJCQk8dGQ+MDwvdGQ+CgkJ
CTx0ZD5vcHRpbWlzZV9qcz0mcXVvdDsxJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJ
PHRkPmNsYXNzPC90ZD4KCQkJPHRkPjxzcGFuIGNsYXNzPSJjYXBzIj48c3BhbiBjbGFzcz0i
Y2FwcyI+Q1NTPC9zcGFuPjwvc3Bhbj4gY2xhc3MgYXR0cmlidXRlIGFwcGxpZWQgdG8gdGhl
IHR3ZWV0IGJ1dHRvbjwvdGQ+CgkJCTx0ZD50d2l0dGVyLXNoYXJlLWJ1dHRvbjwvdGQ+CgkJ
PC90cj4KCTwvdGFibGU+CgoJPGgyIGNsYXNzPSJzZWN0aW9uIiBpZD0iYXJjX3R3aXR0ZXJf
Zm9sbG93X2J1dHRvbl90YWciPlRoZSBhcmNfdHdpdHRlcl9mb2xsb3dfYnV0dG9uIHRhZzwv
aDI+CgoJPHA+T3V0cHV0cyB0aGUgVHdpdHRlciBmb2xsb3cgYnV0dG9uIChhbiBhbHRlcm5h
dGl2ZSB2ZXJzaW9uIGlzIGluY2x1ZGVkIGluIGFyY190d2l0dGVyX2ludGVudHMpLjwvcD4K
Cgk8aDM+U3ludGF4PC9oMz4KCgk8cD4mbHQ7dHhwOmFyY190d2l0dGVyX2ZvbGxvd19idXR0
b24gLyZndDs8L3A+CgoJPGgzPlVzYWdlPC9oMz4KCgk8dGFibGU+CgkJPHRyPgoJCQk8dGg+
QXR0cmlidXRlPC90aD4KCQkJPHRoPkRlc2NyaXB0aW9uPC90aD4KCQkJPHRoPkRlZmF1bHQ8
L3RoPgoJCQk8dGg+RXhhbXBsZTwvdGg+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD51c2VyPC90
ZD4KCQkJPHRkPlR3aXR0ZXIgdXNlciBuYW1lIHRvIGZvbGxvdzwvdGQ+CgkJCTx0ZD4gPGVt
PmFyY190d2l0dGVyIHVzZXJuYW1lPC9lbT48L3RkPgoJCQk8dGQ+dXNlcj0mcXVvdDtkcm1v
bmtleW5pbmphJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmxhbmc8L3RkPgoJ
CQk8dGQ+TGFuZ3VhZ2U8L3RkPgoJCQk8dGQ+ZW48L3RkPgoJCQk8dGQ+bGFuZz0mcXVvdDtl
cyZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5jb3VudDwvdGQ+CgkJCTx0ZD5X
aGV0aGVyIG9yIG5vdCB0aGUgZm9sbG93ZXIgY291bnQgaXMgc2hvd248L3RkPgoJCQk8dGQ+
MTwvdGQ+CgkJCTx0ZD5jb3VudD0mcXVvdDswJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4K
CQkJPHRkPmluY2x1ZGVfanM8L3RkPgoJCQk8dGQ+V2hldGhlciBvciBub3QgdG8gaW5jbHVk
ZSB0aGUgd2lkZ2V0IEphdmFTY3JpcHQ8L3RkPgoJCQk8dGQ+MTwvdGQ+CgkJCTx0ZD5pbmNs
dWRlX2pzPSZxdW90OzAmcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+b3B0aW1p
c2VfanM8L3RkPgoJCQk8dGQ+T3B0aW1pc2UgdGhlIEphdmFTY3JpcHQgYnkgdXNpbmcgYSBs
b2NhbCBzY3JpcHQgcmF0aGVyIHRoYW4gdGhhdCBob3N0ZWQgb24gdGhlIFR3aXR0ZXIgc2l0
ZTwvdGQ+CgkJCTx0ZD4wPC90ZD4KCQkJPHRkPm9wdGltaXNlX2pzPSZxdW90OzEmcXVvdDs8
L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+Y2xhc3M8L3RkPgoJCQk8dGQ+PHNwYW4gY2xh
c3M9ImNhcHMiPjxzcGFuIGNsYXNzPSJjYXBzIj5DU1M8L3NwYW4+PC9zcGFuPiBjbGFzcyBh
dHRyaWJ1dGUgYXBwbGllZCB0byB0aGUgZm9sbG93IGJ1dHRvbjwvdGQ+CgkJCTx0ZD50d2l0
dGVyLWZvbGxvdy1idXR0b248L3RkPgoJCTwvdHI+Cgk8L3RhYmxlPgoKCTxoMiBjbGFzcz0i
c2VjdGlvbiIgaWQ9ImFyY190d2l0dGVyX3R3ZWV0X3VybCI+YXJjX3R3aXR0ZXJfdHdlZXRf
dXJsPC9oMj4KCgk8cD5SZXR1cm5zIHRoZSA8c3BhbiBjbGFzcz0iY2FwcyI+VVJMPC9zcGFu
PiBvZiB0aGUgVHdpdHRlciBzdGF0dXMgZm9yIGFuIGFydGljbGUuPC9wPgoKCTxoMz5TeW50
YXg8L2gzPgoKCTxwPiZsdDt0eHA6YXJjX3R3aXR0ZXJfdHdlZXRfdXJsIC8mZ3Q7PC9wPgoK
CTxwPiZsdDt0eHA6YXJjX3R3aXR0ZXJfdHdlZXRfdXJsJmd0O0xpbmsgdGV4dCZsdDsvdHhw
OmFyY190d2l0dGVyX3R3ZWV0X3VybCZndDs8L3A+CgoJPGgzPlVzYWdlPC9oMz4KCgk8dGFi
bGU+CgkJPHRyPgoJCQk8dGg+QXR0cmlidXRlPC90aD4KCQkJPHRoPkRlc2NyaXB0aW9uPC90
aD4KCQkJPHRoPkRlZmF1bHQ8L3RoPgoJCQk8dGg+RXhhbXBsZTwvdGg+CgkJPC90cj4KCQk8
dHI+CgkJCTx0ZD5pZDwvdGQ+CgkJCTx0ZD5UZXh0cGF0dGVybiBhcnRpY2xlIElEPC90ZD4K
CQkJPHRkPiA8ZW0+Y3VycmVudCBhcnRpY2xlPC9lbT48L3RkPgoJCQk8dGQ+aWQ9JnF1b3Q7
MSZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD50aXRsZTwvdGQ+CgkJCTx0ZD5U
aXRsZSBhdHRyaWJ1dGUgb2YgdGhlIGxpbms8L3RkPgoJCQk8dGQ+IDxlbT51bnNldDwvZW0+
PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmNsYXNzPC90ZD4KCQkJPHRkPjxzcGFuIGNs
YXNzPSJjYXBzIj48c3BhbiBjbGFzcz0iY2FwcyI+Q1NTPC9zcGFuPjwvc3Bhbj4gY2xhc3Mg
YXR0cmlidXRlIGFwcGxpZWQgdG8gdGhlIGxpbms8L3RkPgoJCQk8dGQ+IDxlbT51bnNldDwv
ZW0+PC90ZD4KCQk8L3RyPgoJPC90YWJsZT4KCgk8aDIgY2xhc3M9InNlY3Rpb24iIGlkPSJh
cmNfdHdpdHRlcl90aW55dXJsIj5hcmNfdHdpdHRlcl90aW55dXJsPC9oMj4KCgk8cD5SZXR1
cm5zIHRoZSBzaG9ydGVuZWQgPHNwYW4gY2xhc3M9ImNhcHMiPlVSTDwvc3Bhbj4gb2YgdGhl
IGFydGljbGUgdXNlZCBmb3IgdGhlIFR3aXR0ZXIgdXBkYXRlLjwvcD4KCgk8aDM+U3ludGF4
PC9oMz4KCgk8cD4mbHQ7dHhwOmFyY190d2l0dGVyX3Rpbnl1cmwgLyZndDs8L3A+CgoJPHA+
Jmx0O3R4cDphcmNfdHdpdHRlcl90aW55dXJsJmd0O0xpbmsgdGV4dCZsdDsvdHhwOmFyY190
d2l0dGVyX3Rpbnl1cmwmZ3Q7PC9wPgoKCTxoMz5Vc2FnZTwvaDM+CgoJPHRhYmxlPgoJCTx0
cj4KCQkJPHRoPkF0dHJpYnV0ZTwvdGg+CgkJCTx0aD5EZXNjcmlwdGlvbjwvdGg+CgkJCTx0
aD5EZWZhdWx0PC90aD4KCQkJPHRoPkV4YW1wbGU8L3RoPgoJCTwvdHI+CgkJPHRyPgoJCQk8
dGQ+aWQ8L3RkPgoJCQk8dGQ+VGV4dHBhdHRlcm4gYXJ0aWNsZSBJRDwvdGQ+CgkJCTx0ZD4g
PGVtPmN1cnJlbnQgYXJ0aWNsZTwvZW0+PC90ZD4KCQkJPHRkPmlkPSZxdW90OzEmcXVvdDs8
L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+dGl0bGU8L3RkPgoJCQk8dGQ+VGl0bGUgYXR0
cmlidXRlIG9mIHRoZSBsaW5rPC90ZD4KCQkJPHRkPiA8ZW0+dW5zZXQ8L2VtPjwvdGQ+CgkJ
PC90cj4KCQk8dHI+CgkJCTx0ZD5jbGFzczwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2Fw
cyI+PHNwYW4gY2xhc3M9ImNhcHMiPkNTUzwvc3Bhbj48L3NwYW4+IGNsYXNzIGF0dHJpYnV0
ZSBhcHBsaWVkIHRvIHRoZSBsaW5rPC90ZD4KCQkJPHRkPiA8ZW0+dW5zZXQ8L2VtPjwvdGQ+
CgkJPC90cj4KCTwvdGFibGU+CgoJPGgyIGNsYXNzPSJzZWN0aW9uIiBpZD0iYXJjX3R3aXR0
ZXJfY2FjaGluZyI+Q2FjaGluZzwvaDI+CgoJPHA+SW4gb3JkZXIgdG8gcHJldmVudCBleGNl
c3NpdmUgcmVwZWF0aXRpdmUgY2FsbHMgdG8gdGhlIFR3aXR0ZXIgd2Vic2l0ZSBpdCBpcyBy
ZWNvbW1lbmRlZCB0byBjYWNoZSByZXN1bHRzLiBUd2l0dGVyIGxpbWl0cyB0aGUgbnVtYmVy
IG9mIGNhbGxzIHRocm91Z2ggdGhlIDxzcGFuIGNsYXNzPSJjYXBzIj5BUEk8L3NwYW4+LCBh
bmQgY29udGludW91cyBjYWxscyB3aWxsIHJlc3VsdCBpbiBUd2l0dGVyIGNsb3NpbmcgdG8g
ZnVydGhlciByZXF1ZXN0cy4gQnkgZGVmYXVsdCwgYXJjX3R3aXR0ZXIgY2FjaGVzIGZvciAz
MCBtaW51dGUgaW50ZXJ2YWxzLjwvcD4KCgk8dGFibGU+CgkJPHRyPgoJCQk8dGg+QXR0cmli
dXRlPC90aD4KCQkJPHRoPkRlc2NyaXB0aW9uPC90aD4KCQkJPHRoPkRlZmF1bHQ8L3RoPgoJ
CQk8dGg+RXhhbXBsZTwvdGg+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5jYWNoaW5nPC90ZD4K
CQkJPHRkPiYjODIxNjsxJiM4MjE3OyB0byBjYWNoZSBmZWVkLCAmIzgyMTY7MCYjODIxNzsg
dG8gdHVybiBjYWNoaW5nIG9mZiAobm90IHJlY29tbWVuZGVkKTwvdGQ+CgkJCTx0ZD4xPC90
ZD4KCQkJPHRkPmNhY2hpbmc9JnF1b3Q7MSZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJ
CTx0ZD5jYWNoZV9kaXI8L3RkPgoJCQk8dGQ+QWJzb2x1dGUgcGF0aCB0byB0aGUgY2FjaGUg
ZGlyZWN0b3J5IChtdXN0IGJlIHdyaXRhYmxlKTwvdGQ+CgkJCTx0ZD4gPGVtPmFyY190d2l0
dGVyIHByZWZlcmVuY2VzPC9lbT48L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+Y2FjaGVf
dGltZTwvdGQ+CgkJCTx0ZD5UaW1lIGluIG1pbnV0ZXMgdGhhdCB0aGUgY2FjaGUgZmlsZXMg
YXJlIHN0b3JlZCBiZWZvcmUgYmVpbmcgcmVmcmVzaGVkPC90ZD4KCQkJPHRkPjU8L3RkPgoJ
CQk8dGQ+Y2FjaGVfdGltZT0mcXVvdDszMCZxdW90OzwvdGQ+CgkJPC90cj4KCTwvdGFibGU+
CgoJPHA+VGhlIGFkbWluIHNpZGUgb2YgdGhpcyBwbHVnaW4gZW5mb3JjZXMgY2FjaGluZywg
YXBhcnQgZnJvbSB3aGVuIGl0IGlzIHBvc3RpbmcgdG8gVHdpdHRlciAoPGk+ZS5nLjwvaT4g
d2hlbiBwb3N0aW5nIG9yIGRlbGV0aW5nIGFuIHVwZGF0ZSkuPC9wPgoKCTxoMiBjbGFzcz0i
c2VjdGlvbiIgaWQ9ImFyY190d2l0dGVyX3ByZWZzIj5QcmVmZXJlbmNlczwvaDI+CgoJPHA+
WW91IGNhbiBhY2Nlc3MgdGhlIHBsdWdpbnMgY29yZSBwcmVmZXJlbmNlcyBmcm9tIGVpdGhl
ciB0aGUgUHJlZmVyZW5jZXMgb3IgUGx1Z2lucyB0YWJzIGluIGFkbWluLiBTZXR1cCB5b3Vy
IFR3aXR0ZXIgYWNjb3VudCAoeW91IHdpbGwgYmUgYXNrZWQgdG8gY29ubmVjdCB2aWEgVHdp
dHRlciBhbmQgdGhpcyBuZWVkcyBkb2luZyBiZWZvcmUgeW91IGNhbiB1c2UgdGhlIHBsdWdp
bikgYW5kIGNoYW5nZSB0aGUgY2FjaGUgZGlyZWN0b3J5IHVzaW5nIGFyY190d2l0dGVyJiM4
MjE3O3MgcHJlZmVyZW5jZXMuIFdpdGhvdXQgcHJvdmlkaW5nIHlvdXIgYWNjb3VudCBsb2dp
biBkZXRhaWxzIHRoZSBhZG1pbiBhcmVhIGZlYXR1cmVzIG9mIHRoaXMgcGx1Z2luIHdpbGwg
YmUgaW5hY3RpdmUuPC9wPgoKCTxwPllvdSBjYW4gc2VsZWN0IHRoZSA8c3BhbiBjbGFzcz0i
Y2FwcyI+VVJMPC9zcGFuPiBzaG9ydGVuZXIgbWV0aG9kIHlvdSB3YW50IHRvIHVzZSB0byBs
aW5rIGJhY2sgdG8geW91ciBhcnRpY2xlIG9uIFR3aXR0ZXIuIFBsZWFzZSBub3RlIHRoYXQg
aWYgeW91IHNlbGVjdCBzbWRfc2hvcnRfdXJsIHlvdSB3aWxsIG5lZWQgdG8gaGF2ZSBpbnN0
YWxsZWQgYW5kIGFjdGl2YXRlZCB0aGUgPGEgaHJlZj0iaHR0cDovL3RleHRwYXR0ZXJuLm9y
Zy9wbHVnaW5zLzEwOTkvc21kX3Nob3J0X3VybCI+PHNwYW4gY2xhc3M9InRhZyI+c21kX3No
b3J0X3VybDwvc3Bhbj4gcGx1Z2luPC9hPiBkZXZlbG9wZWQgYnkgU3RlZiBEYXdzb24uPC9w
PgoKCTxoMiBjbGFzcz0ic2VjdGlvbiIgaWQ9ImFyY190d2l0dGVyX2FydGljbGUiPlR3ZWV0
aW5nIGFydGljbGVzPC9oMj4KCgk8cD5CeSBkZWZhdWx0IGFyY190d2l0dGVyIHdpbGwgcG9z
dCBhbiB1cGRhdGUgdG8gVHdpdHRlciBpbmNsdWRpbmcgYSBzaG9ydGVuZWQgPHNwYW4gY2xh
c3M9ImNhcHMiPlVSTDwvc3Bhbj4gdG8geW91ciBhcnRpY2xlLiBPbmx5IGxpdmUgYW5kIGFj
dGl2ZSBhcnRpY2xlcyB3aWxsIGJlIHNlbnQgdG8gVHdpdHRlciwgPGk+aS5lLjwvaT4gYXJ0
aWNsZXMgcG9zdGVkIGluIHRoZSBmdXR1cmUgb3IgYXMgc3RpY2t5IGFydGljbGVzIHdpbGwg
bm90IGJlIHNlbnQuIElmIHlvdXIgYXJ0aWNsZSBpcyBzdWNjZXNzZnVsbHkgc3VibWl0dGVk
IHRvIFR3aXR0ZXIgdGhlIHVwZGF0ZSB3aWxsIGFwcGVhciBpbiBwbGFjZSBvZiB0aGUgVHdp
dHRlciBvcHRpb24gb24gdGhlIHJpZ2h0LWhhbmQtc2lkZSBvZiB0aGUgYXJ0aWNsZSBlZGl0
IHNjcmVlbi48L3A+CgoJPHA+VHdlZXRzIGFyZSBzZW50IGluIHRoZSBmb2xsb3dpbmcgZm9y
bWF0OiA8ZW0+VHdlZXQgcHJlZml4PC9lbT4gPGVtPkFydGljbGUgdGl0bGU8L2VtPiA8ZW0+
U2hvcnRlbmVkIDxzcGFuIGNsYXNzPSJjYXBzIj5VUkw8L3NwYW4+PC9lbT4gPGVtPlR3ZWV0
IHN1ZmZpeDwvZW0+LiBZb3UgY2FuIGNoYW5nZSB0aGUgcHJlZml4IGFuZCBzdWZmaXggb24g
YW4gYXJ0aWNsZS1ieS1hcnRpY2xlIGJhc2lzIGJ5IGNoYW5naW5nIHRoZSB0d2VldCBvcHRp
b25zIHVuZGVyICYjODIxNjtVcGRhdGUgVHdpdHRlciYjODIxNzsgb24gdGhlIGFydGljbGUg
ZWRpdG9yIHNjcmVlbi4gVGhlIGRlZmF1bHQgPGVtPlR3ZWV0IHByZWZpeDwvZW0+IGNhbiBi
ZSBzZXQgdW5kZXIgdGhlIDxzcGFuIGNsYXNzPSJ0YWciPmFyY190d2l0dGVyPC9zcGFuPiBw
cmVmZXJlbmNlcyBzY3JlZW4gKHRoZSBkZWZhdWx0IG9uIGluc3RhbGxhdGlvbiBpcyAmIzgy
MjA7SnVzdCBwb3N0ZWQ6JiM4MjIxOykuPC9wPgoKCTxwPlBsZWFzZSBub3RlIHRoYXQgb25j
ZSBhbiBhcnRpY2xlIGhhcyBiZWVuIHR3ZWV0ZWQgdGhlIHR3ZWV0IGNhbm5vdCBiZSBlZGl0
ZWQuPC9wPgoKCTxoMiBjbGFzcz0ic2VjdGlvbiIgaWQ9ImFyY190d2l0dGVyX2FkbWluIj5U
aGUgVHdpdHRlciB0YWI8L2gyPgoKCTxwPlVuZGVyIHRoZSBFeHRlbnNpb25zIHRhYiAodGhp
cyBjYW4gYmUgY2hhbmdlZCBmcm9tIHRoZSBwbHVnaW4mIzgyMTc7cyBwcmVmZXJlbmNlIHBh
Z2UpIGEgbmV3IFR3aXR0ZXIgdGFiIHNob3VsZCBhcHBlYXIgb25jZSB5b3UgaGF2ZSBjb25u
ZWN0ZWQgeW91ciBzaXRlIHRvIHlvdXIgVHdpdHRlciBhY2NvdW50LiBGcm9tIGhlcmUgeW91
IHdpbGwgYmUgYWJsZSB0byBzdWJtaXQgbmV3IFR3aXR0ZXIgdXBkYXRlcywgdmlldyBiYXNp
YyBhY2NvdW50IHN0YXRpc3RpY3MsIGFuZCBjaGVjayBvdXQgeW91ciByZWNlbnQgdXBkYXRl
cyAoaW5jbHVkaW5nIHRoZSBvcHRpb24gdG8gZGVsZXRlIHlvdXIgdHdlZXRzKS48L3A+Ijtz
OjQ6ImNvZGUiO3M6NzI0NjM6Imdsb2JhbCAkcHJlZnMsJHR4cGNmZywkYXJjX3R3aXR0ZXJf
Y29uc3VtZXJLZXksJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0OwoKJGFyY190d2l0dGVy
ID0gYXJyYXkoKTsKCiRhcmNfdHdpdHRlcl9jb25zdW1lcktleSA9ICduS2NYc2x3elpoQmQw
a2ZLTWV0blBBJzsKJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0ID0gJ0M2blNQQ0wzZWVI
R1RCaEtDZ3dkOW9jbGN1RDBzckI4V1ZrZlhRWUM1NCc7CgphZGRfcHJpdnMoJ3BsdWdpbl9w
cmVmcy5hcmNfdHdpdHRlcicsJzEsMicpOwpyZWdpc3Rlcl9jYWxsYmFjaygnYXJjX3R3aXR0
ZXJfaW5zdGFsbCcsJ3BsdWdpbl9saWZlY3ljbGUuYXJjX3R3aXR0ZXInLCAnaW5zdGFsbGVk
Jyk7CnJlZ2lzdGVyX2NhbGxiYWNrKCdhcmNfdHdpdHRlcl91bmluc3RhbGwnLCdwbHVnaW5f
bGlmZWN5Y2xlLmFyY190d2l0dGVyJywgJ2RlbGV0ZWQnKTsKcmVnaXN0ZXJfY2FsbGJhY2so
J2FyY190d2l0dGVyX3ByZWZzJywncGx1Z2luX3ByZWZzLmFyY190d2l0dGVyJyk7CgovKgog
KiBTZXR1cCBpbml0aWFsIHByZWZlcmVuY2VzIGlmIG5vdCBpbiB0aGUgdHhwX3ByZWZzIHRh
YmxlLgogKi8KaWYgKCFpc3NldCgkcHJlZnNbJ2FyY190d2l0dGVyX3VzZXInXSkpCglzZXRf
cHJlZignYXJjX3R3aXR0ZXJfdXNlcicsICcnLCAnYXJjX3R3aXR0ZXInLCAxLCAndGV4dF9p
bnB1dCcpOwppZiAoIWlzc2V0KCRwcmVmc1snYXJjX3R3aXR0ZXJfcHJlZml4J10pKQogIHNl
dF9wcmVmKCdhcmNfdHdpdHRlcl9wcmVmaXgnLCdKdXN0IHBvc3RlZDonLCAnYXJjX3R3aXR0
ZXInLCAyLCAndGV4dF9pbnB1dCcpOwppZiAoIWlzc2V0KCRwcmVmc1snYXJjX3R3aXR0ZXJf
c3VmZml4J10pKQogIHNldF9wcmVmKCdhcmNfdHdpdHRlcl9zdWZmaXgnLCcnLCAnYXJjX3R3
aXR0ZXInLCAyLCAndGV4dF9pbnB1dCcpOwppZiAoIWlzc2V0KCRwcmVmc1snYXJjX3R3aXR0
ZXJfY2FjaGVfZGlyJ10pKQogIHNldF9wcmVmKCdhcmNfdHdpdHRlcl9jYWNoZV9kaXInLCR0
eHBjZmdbJ3R4cGF0aCddLiRwcmVmc1sndGVtcGRpciddLCAnYXJjX3R3aXR0ZXInLCAxLCAn
dGV4dF9pbnB1dCcpOwppZiAoIWlzc2V0KCRwcmVmc1snYXJjX3R3aXR0ZXJfdHdlZXRfZGVm
YXVsdCddKSkKICBzZXRfcHJlZignYXJjX3R3aXR0ZXJfdHdlZXRfZGVmYXVsdCcsIDEsICdh
cmNfdHdpdHRlcicsIDIsICd5ZXNub1JhZGlvJyk7CmlmICghaXNzZXQoJHByZWZzWydhcmNf
dHdpdHRlcl91cmxfbWV0aG9kJ10pKQogIHNldF9wcmVmKCdhcmNfdHdpdHRlcl91cmxfbWV0
aG9kJywgJ2Z1bGwnLCAnYXJjX3R3aXR0ZXInLCAyLAoJJ2FyY190d2l0dGVyX3VybF9tZXRo
b2Rfc2VsZWN0Jyk7CmlmICghaXNzZXQoJHByZWZzWydhcmNfc2hvcnRfdXJsJ10pKQogIHNl
dF9wcmVmKCdhcmNfc2hvcnRfdXJsJywgMCwgJ2FyY190d2l0dGVyJywgMiwgJ3llc25vUmFk
aW8nKTsKaWYgKCFpc3NldCgkcHJlZnNbJ2FyY19zaG9ydF9zaXRlX3VybCddKSkKICBzZXRf
cHJlZignYXJjX3Nob3J0X3NpdGVfdXJsJywgJHByZWZzWydzaXRldXJsJ10sICdhcmNfdHdp
dHRlcicsIDIsICd0ZXh0X2lucHV0Jyk7Ci8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBUd2l0dGVy
IHRhYiBoYXMgYmVlbiBkZWZpbmVkCmlmICghaXNzZXQoJHByZWZzWydhcmNfdHdpdHRlcl90
YWInXSkpIHsKICBzZXRfcHJlZignYXJjX3R3aXR0ZXJfdGFiJywgJ2V4dGVuc2lvbnMnLCAn
YXJjX3R3aXR0ZXInLCAyLAoJJ2FyY190d2l0dGVyX3RhYl9zZWxlY3QnKTsKCSRwcmVmc1sn
YXJjX3R3aXR0ZXJfdGFiJ10gPSAnZXh0ZW5zaW9ucyc7Cn0KCi8vIENoZWNrIGlmIGFyY19z
aG9ydF91cmwgaXMgZW5hYmxlZAppZiAoKGlzc2V0KCRwcmVmc1snYXJjX3Nob3J0X3VybCdd
KSYmJHByZWZzWydhcmNfc2hvcnRfdXJsJ10pCnx8IChpc3NldCgkcHJlZnNbJ2FyY19zaG9y
dF91cmxfbWV0aG9kJ10pJiYkcHJlZnNbJ2FyY190d2l0dGVyX3VybF9tZXRob2QnXT09J2Fy
Y190d2l0dGVyJykpIHsKICByZWdpc3Rlcl9jYWxsYmFjaygnYXJjX3Nob3J0X3VybF9yZWRp
cmVjdCcsICd0eHBfZGllJywgNDA0KTsKfQoKaWYgKEB0eHBpbnRlcmZhY2UgPT0gJ2FkbWlu
JykgewoJcmVnaXN0ZXJfY2FsbGJhY2soJ19hcmNfdHdpdHRlcl9hdXRvX2VuYWJsZScsICdw
bHVnaW5fbGlmZWN5Y2xlLmFyY190d2l0dGVyJywgJ2luc3RhbGxlZCcpOwoJaWYgKCFlbXB0
eSgkcHJlZnNbJ2FyY190d2l0dGVyX3VzZXInXSkKCQkmJiAhZW1wdHkoJHByZWZzWydhcmNf
dHdpdHRlcl9hY2Nlc3NUb2tlbiddKQoJCSYmICFlbXB0eSgkcHJlZnNbJ2FyY190d2l0dGVy
X2FjY2Vzc1Rva2VuU2VjcmV0J10pICkgewoKCQlpZiAoJHByZWZzWydhcmNfdHdpdHRlcl90
YWInXSkgewoJCQlhZGRfcHJpdnMoJ2FyY19hZG1pbl90d2l0dGVyJywgJzEsMiwzLDQnKTsK
CQkJcmVnaXN0ZXJfdGFiKCRwcmVmc1snYXJjX3R3aXR0ZXJfdGFiJ10sICdhcmNfYWRtaW5f
dHdpdHRlcicsICdUd2l0dGVyJyk7CgkJCXJlZ2lzdGVyX2NhbGxiYWNrKCdhcmNfYWRtaW5f
dHdpdHRlcicsICdhcmNfYWRtaW5fdHdpdHRlcicpOwoJCX0KCgkJcmVnaXN0ZXJfY2FsbGJh
Y2soJ2FyY19hcnRpY2xlX3R3ZWV0JywgJ3BpbmcnKTsKCQlyZWdpc3Rlcl9jYWxsYmFjaygn
YXJjX2FydGljbGVfdHdlZXQnLCAnYXJ0aWNsZV9zYXZlZCcpOwoJCXJlZ2lzdGVyX2NhbGxi
YWNrKCdhcmNfYXJ0aWNsZV90d2VldCcsICdhcnRpY2xlX3Bvc3RlZCcpOwoJCXJlZ2lzdGVy
X2NhbGxiYWNrKCdhcmNfYXBwZW5kX3R3aXR0ZXInLCAnYXJ0aWNsZV91aScsICdzdGF0dXMn
KTsKCX0KfQoKLyoKCVB1YmxpYy1zaWRlIGZ1bmN0aW9ucwoJPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQoqLwoKZnVu
Y3Rpb24gYXJjX3R3aXR0ZXIoJGF0dHMpCnsKICBnbG9iYWwgJHByZWZzLCRhcmNfdHdpdHRl
cl9jb25zdW1lcktleSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0OwoKICBleHRyYWN0
KGxBdHRzKGFycmF5KAoJJ3VzZXInICAgICAgPT4gJHByZWZzWydhcmNfdHdpdHRlcl91c2Vy
J10sCgkncGFzc3dvcmQnICA9PiAnJywKCSd0aW1lbGluZScgID0+ICd1c2VyJywKCSdsaW1p
dCcgICAgID0+ICcxMCcsCgknZmV0Y2gnICAgICA9PiAwLAoJJ2Z1bGxfdXJscycgPT4gZmFs
c2UsCgkncmV0d2VldHMnICA9PiBmYWxzZSwKCSdyZXBsaWVzJyAgID0+IHRydWUsCgknZGF0
ZWZvcm1hdCc9PiAkcHJlZnNbJ2FyY2hpdmVfZGF0ZWZvcm1hdCddLAoJJ2NhY2hpbmcnICAg
PT4gJzEnLAoJJ2NhY2hlX2RpcicgPT4gJHByZWZzWydhcmNfdHdpdHRlcl9jYWNoZV9kaXIn
XSwKCSdjYWNoZV90aW1lJz0+ICc1JywKCSdsYWJlbCcgICAgID0+ICcnLAoJJ2xhYmVsdGFn
JyAgPT4gJycsCgknYnJlYWsnICAgICA9PiAnbGknLAoJJ3dyYXB0YWcnICAgPT4gJycsCgkn
Y2xhc3MnICAgICA9PiBfX0ZVTkNUSU9OX18sCgknY2xhc3NfcG9zdGVkJyA9PiBfX0ZVTkNU
SU9OX18uJy1wb3N0ZWQnCgkpLCRhdHRzKSk7CgogICR0d2l0ID0gbmV3IGFyY190d2l0dGVy
KCRhcmNfdHdpdHRlcl9jb25zdW1lcktleQoJCQksICRhcmNfdHdpdHRlcl9jb25zdW1lclNl
Y3JldCwgJHByZWZzWydhcmNfdHdpdHRlcl9hY2Nlc3NUb2tlbiddCgkJCSwgJHByZWZzWydh
cmNfdHdpdHRlcl9hY2Nlc3NUb2tlblNlY3JldCddKTsKCiAgaWYgKCRjYWNoaW5nKSB7ICAv
LyB0dXJuIG9uIGNhY2hpbmcsIHJlY29tbWVuZGVkIChkZWZhdWx0KQoJJHR3aXQtPnNldENh
Y2hpbmcodHJ1ZSk7CgkkdHdpdC0+Y2FjaGVEaXIoJGNhY2hlX2Rpcik7CgkkdHdpdC0+Y2Fj
aGVUaW1lKCRjYWNoZV90aW1lKTsKICB9IGVsc2UgeyAgLy8gdHVybiBvZmYgY2FjaGluZywg
bm90IHJlY29tbWVuZGVkIG90aGVyIHRoYW4gZm9yIHRlc3RpbmcKCSR0d2l0LT5zZXRDYWNo
aW5nKGZhbHNlKTsKICB9CgogIHN3aXRjaCAoJHRpbWVsaW5lKSB7CgljYXNlICdob21lJzog
Y2FzZSAnZnJpZW5kcyc6CgkgICR0aW1lbGluZSA9ICdob21lX3RpbWVsaW5lJzsgYnJlYWs7
CgljYXNlICdtZW50aW9ucyc6CgkgICR0aW1lbGluZSA9ICdzdGF0dXNlcy9tZW50aW9uc190
aW1lbGluZSc7IGJyZWFrOwoJY2FzZSAndXNlcic6IGRlZmF1bHQ6ICR0aW1lbGluZSA9ICdz
dGF0dXNlcy91c2VyX3RpbWVsaW5lJzsKICB9CgogIC8vIENoZWNrIHRoYXQgdGhlIGZldGNo
IChUd2l0dGVyJ3MgY291bnQgYXR0cmlidXRlKSBpcyBzZXQgY29ycmVjdGx5CiAgJGZldGNo
ID0gKCEkZmV0Y2ggfHwgJGZldGNoPCRsaW1pdCkgPyAkbGltaXQgOiAkZmV0Y2g7CgogICRv
dXQgPSBhcnJheSgpOwogICR0d2VldHMgPSAkdHdpdC0+Z2V0KCR0aW1lbGluZSwgYXJyYXko
CgkgICdzY3JlZW5fbmFtZSc9PiR1c2VyLAoJICAnY291bnQnPT4kZmV0Y2gsCgkgICdpbmNs
dWRlX3J0cyc9PiRyZXR3ZWV0cywKCSAgJ2V4Y2x1ZGVfcmVwbGllcyc9PiEkcmVwbGllcwoJ
KSk7CgogIGlmICgkdHdlZXRzKSB7CgkvLyBBcHBseSB0aGUgZGlzcGxheSBsaW1pdCB0byB0
aGUgcmV0dXJuZWQgdHdlZXRzCgkkdHdlZXRzID0gYXJyYXlfc2xpY2UoJHR3ZWV0cywgMCwg
JGxpbWl0KTsKCWZvcmVhY2ggKCR0d2VldHMgYXMgJHR3ZWV0KSB7CgkgICR0aW1lID0gc3Ry
dG90aW1lKGh0bWxlbnRpdGllcygkdHdlZXQtPmNyZWF0ZWRfYXQpKTsKCSAgJGRhdGUgPSBz
YWZlX3N0cmZ0aW1lKCRkYXRlZm9ybWF0LCR0aW1lKTsKCSAgJGxpbmtzID0gZmFsc2U7Cgkg
IGlmIChpc3NldCgkdHdlZXQtPmVudGl0aWVzLT51cmxzKSkgewoJCSRsaW5rcyA9IGFycmF5
KCk7CgkJZm9yZWFjaCAoJHR3ZWV0LT5lbnRpdGllcy0+dXJscyBhcyAkdXJsKSB7CgkJICAk
bGlua3NbJHVybC0+dXJsXSA9IGFycmF5KAoJCQknZXhwYW5kZWRfdXJsJyA9PiAkdXJsLT5l
eHBhbmRlZF91cmwsCgkJCSdkaXNwbGF5X3VybCcgPT4gJHVybC0+ZGlzcGxheV91cmwKCQkg
ICk7CgkJfQoJICB9CgkgICRvdXRbXSA9IGFyY19Ud2l0dGVyOjptYWtlTGlua3MoaHRtbGVu
dGl0aWVzKCR0d2VldC0+dGV4dCwgRU5UX1FVT1RFUywnVVRGLTgnKSwgJGxpbmtzLCAkZnVs
bF91cmxzKQoJCS4nICcudGFnKGh0bWxlbnRpdGllcygkZGF0ZSksJ3NwYW4nLCcgY2xhc3M9
IicuJGNsYXNzX3Bvc3RlZC4nIicpOwoJfQogIH0KCglyZXR1cm4gZG9MYWJlbCgkbGFiZWws
ICRsYWJlbHRhZykuZG9XcmFwKCRvdXQsICR3cmFwdGFnLCAkYnJlYWssICRjbGFzcyk7Cgp9
CgpmdW5jdGlvbiBhcmNfdHdpdHRlcl9zZWFyY2goJGF0dHMpCnsKCWdsb2JhbCAkcHJlZnMs
JGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJTZWNyZXQ7
CgoJZXh0cmFjdChsQXR0cyhhcnJheSgKCQkndXNlcicgICAgICA9PiAkcHJlZnNbJ2FyY190
d2l0dGVyX3VzZXInXSwKCQknc2VhcmNoJyAgICA9PiAnJywKCQknaGFzaHRhZ3MnICA9PiAn
JywKCQkndXNlcicgICAgICA9PiAnJywKCQkncmVwbHknICAgICA9PiAnJywKCQknbWVudGlv
bicgICA9PiAnJywKCQknbGltaXQnICAgICA9PiAnMTAnLAoJCSdmdWxsX3VybHMnID0+IGZh
bHNlLAoJCSdsYW5nJyAgICAgID0+ICcnLAoJCSdkYXRlZm9ybWF0Jz0+ICRwcmVmc1snYXJj
aGl2ZV9kYXRlZm9ybWF0J10sCgkJJ2NhY2hpbmcnICAgPT4gJzEnLAoJCSdjYWNoZV9kaXIn
ID0+ICRwcmVmc1snYXJjX3R3aXR0ZXJfY2FjaGVfZGlyJ10sCgkJJ2NhY2hlX3RpbWUnPT4g
JzUnLAoJCSdsYWJlbCcgICAgID0+ICcnLAoJCSdsYWJlbHRhZycgID0+ICcnLAoJCSdicmVh
aycgICAgID0+ICdsaScsCgkJJ3dyYXB0YWcnICAgPT4gJycsCgkJJ2NsYXNzJyAgICAgPT4g
X19GVU5DVElPTl9fLAoJCSdjbGFzc19wb3N0ZWQnID0+IF9fRlVOQ1RJT05fXy4nLXBvc3Rl
ZCcsCgkJJ2NsYXNzX3VzZXInICAgPT4gX19GVU5DVElPTl9fLictdXNlcicKCSksJGF0dHMp
KTsKCgkJJHR3aXQgPSBuZXcgYXJjX3R3aXR0ZXIoJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5
CgkJCSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0LCAkcHJlZnNbJ2FyY190d2l0dGVy
X2FjY2Vzc1Rva2VuJ10KCQkJLCAkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vzc1Rva2VuU2Vj
cmV0J10pOwoKCQlpZiAoJGNhY2hpbmcpIHsgIC8vIHR1cm4gb24gY2FjaGluZywgcmVjb21t
ZW5kZWQgKGRlZmF1bHQpCgkJCSR0d2l0LT5zZXRDYWNoaW5nKHRydWUpOwoJCQkkdHdpdC0+
Y2FjaGVEaXIoJGNhY2hlX2Rpcik7CgkJCSR0d2l0LT5jYWNoZVRpbWUoJGNhY2hlX3RpbWUp
OwoJCX0gZWxzZSB7ICAvLyB0dXJuIG9mZiBjYWNoaW5nLCBub3QgcmVjb21tZW5kZWQgb3Ro
ZXIgdGhhbiBmb3IgdGVzdGluZwoJCQkkdHdpdC0+c2V0Q2FjaGluZyhmYWxzZSk7CgkJfQoK
CQkvLyBjb25zdHJ1Y3Qgc2VhcmNoIHF1ZXJ5CgkJaWYgKCFlbXB0eSgkc2VhcmNoKSkgewoJ
CQkkdGVybXMgPSBleHBsb2RlKCcsJywkc2VhcmNoKTsgJHRlcm1zID0gYXJyYXlfbWFwKCd0
cmltJywkdGVybXMpOwoJCQkkc2VhcmNoID0gaW1wbG9kZSgnICcsJHRlcm1zKTsKCQl9CgkJ
aWYgKCRoYXNodGFncykgewoJCQkkaGFzaGVzID0gZXhwbG9kZSgnLCcsJGhhc2h0YWdzKTsg
JGhhc2hlcyA9IGFycmF5X21hcCgndHJpbScsJGhhc2hlcyk7CgkJCSRzZWFyY2guPSAoKCRz
ZWFyY2gpPycgJzonJykuJyMnLmltcGxvZGUoJyAjJywkaGFzaGVzKTsKCQl9CgkJaWYgKCRy
ZXBseSkgewoJCQkkc2VhcmNoLj0gKCgkc2VhcmNoKT8nICc6JycpLid0bzonLnRyaW0oJHJl
cGx5KTsKCQl9CgkJaWYgKCR1c2VyKSB7CgkJCSRzZWFyY2guPSAoKCRzZWFyY2gpPycgJzon
JykuJ2Zyb206Jy50cmltKCR1c2VyKTsKCQl9CgkJaWYgKCRtZW50aW9uKSB7CgkJCSRzZWFy
Y2guPSAoKCRzZWFyY2gpPycgJzonJykuJ0AnLnRyaW0oJG1lbnRpb24pOwoJCX0KCgkJaWYg
KGVtcHR5KCRzZWFyY2gpKSB7CgkJCXJldHVybiAnJzsKCQl9IGVsc2UgewoJCQkkc2VhcmNo
ID0gdXJsZW5jb2RlKCRzZWFyY2gpOwoJCX0KCgkJJG91dCA9IGFycmF5KCk7CgkJJHJlc3Vs
dHMgPSAkdHdpdC0+Z2V0KCdzZWFyY2gvdHdlZXRzJwoJCQksIGFycmF5KCdxJz0+JHNlYXJj
aCwnY291bnQnPT4kbGltaXQsJ2xhbmcnPT4kbGFuZykpOwoKCQkkdHdlZXRzID0gJHJlc3Vs
dHMtPnN0YXR1c2VzOwoJCWlmICgkdHdlZXRzKSB7CgoJCQlmb3JlYWNoICgkdHdlZXRzIGFz
ICR0d2VldCkgewoKCQkJCSR1bmFtZSA9ICR0d2VldC0+dXNlci0+c2NyZWVuX25hbWU7CgkJ
CQkkbmFtZSA9ICR0d2VldC0+dXNlci0+bmFtZTsKCQkJCSR0aW1lID0gc3RydG90aW1lKGh0
bWxlbnRpdGllcygkdHdlZXQtPmNyZWF0ZWRfYXQpKTsKCQkJCSRkYXRlID0gc2FmZV9zdHJm
dGltZSgkZGF0ZWZvcm1hdCwkdGltZSk7CgkJCQkkdGV4dCA9ICR0d2VldC0+dGV4dDsKCgkJ
CQkkbGlua3MgPSBmYWxzZTsKCQkJCWlmIChpc3NldCgkdHdlZXQtPmVudGl0aWVzLT51cmxz
KSkgewoJCQkJCSRsaW5rcyA9IGFycmF5KCk7CgkJCQkJZm9yZWFjaCAoJHR3ZWV0LT5lbnRp
dGllcy0+dXJscyBhcyAkdXJsKSB7CgkJCQkJCSRsaW5rc1skdXJsLT51cmxdID0gYXJyYXko
CgkJCQkJCQknZXhwYW5kZWRfdXJsJyA9PiAkdXJsLT5leHBhbmRlZF91cmwsCgkJCQkJCQkn
ZGlzcGxheV91cmwnID0+ICR1cmwtPmRpc3BsYXlfdXJsCgkJCQkJCSk7CgkJCQkJfQoJCQkJ
fQoKCQkJCSRvdXRbXSA9IHRhZyhocmVmKGh0bWxlbnRpdGllcygkdW5hbWUpLCdodHRwOi8v
dHdpdHRlci5jb20vJyAuICR0d2VldC0+dXNlci0+c2NyZWVuX25hbWUsCgkJCQkJJyB0aXRs
ZT0iJy5odG1sZW50aXRpZXMoJG5hbWUpLiciJykuJzogJywnc3BhbicKCQkJCQkJLCcgY2xh
c3M9IicuJGNsYXNzX3VzZXIuJyInKQoJCQkJCS5hcmNfVHdpdHRlcjo6bWFrZUxpbmtzKGh0
bWxlbnRpdGllcygkdGV4dCwgRU5UX1FVT1RFUywnVVRGLTgnKSwgJGxpbmtzLCAkZnVsbF91
cmxzKQoJCQkJCS4nICcudGFnKGh0bWxlbnRpdGllcygkZGF0ZSksJ3NwYW4nCgkJCQkJCSwn
IGNsYXNzPSInLiRjbGFzc19wb3N0ZWQuJyInKTsKCgkJCX0KCgkJCXJldHVybiBkb0xhYmVs
KCRsYWJlbCwgJGxhYmVsdGFnKS5kb1dyYXAoJG91dCwgJHdyYXB0YWcsICRicmVhaywgJGNs
YXNzKTsKCQl9Cgp9CgpmdW5jdGlvbiBhcmNfdHdpdHRlcl90d2VldCgkYXR0cykgewoJZ2xv
YmFsICR0aGlzYXJ0aWNsZTsKCglleHRyYWN0KGxBdHRzKGFycmF5KAoJICAnaWQnICAgICAg
ICA9PiAkdGhpc2FydGljbGVbJ3RoaXNpZCddLAoJICAnaW5jbHVkZV91cmwnICAgPT4gdHJ1
ZQoJKSwkYXR0cykpOwoKCWlmICgkaWQpIHsKCSAgLy8gRmV0Y2ggYXJjX3R3aXR0ZXIgc3R1
ZmYgdG8gYnVpbGQgdHdlZXQgZnJvbQoJICAkdHdlZXQgPSAoJGluY2x1ZGVfdXJsKSA/IHNh
ZmVfcm93KCJ0d2VldCIsICdhcmNfdHdpdHRlcicsICJhcnRpY2xlX2lkPXskaWR9IikKCQk6
IHNhZmVfcm93KCJSRVBMQUNFKHR3ZWV0LENPTkNBVCgnICcsdGlueXVybCksJycpIEFTIHR3
ZWV0IgoJCSAgLCAnYXJjX3R3aXR0ZXInLCAiYXJ0aWNsZV9pZD17JGlkfSIpOwoJfQoKCWlm
ICgkdHdlZXRbJ3R3ZWV0J10pIHsKCSAgcmV0dXJuIGFyY19Ud2l0dGVyOjptYWtlTGlua3Mo
CgkJaHRtbGVudGl0aWVzKCR0d2VldFsndHdlZXQnXSwgRU5UX1FVT1RFUywnVVRGLTgnKSk7
Cgl9Cn0KCmZ1bmN0aW9uIGFyY190d2l0dGVyX3R3ZWV0X3VybCgkYXR0cywgJHRoaW5nPW51
bGwpIHsKCWdsb2JhbCAkdGhpc2FydGljbGUsJHByZWZzOwoKCWV4dHJhY3QobEF0dHMoYXJy
YXkoCgkgICdpZCcgICAgICA9PiAkdGhpc2FydGljbGVbJ3RoaXNpZCddLAoJICAndGl0bGUn
ICAgPT4gJycsCgkgICdjbGFzcycgICA9PiAnJwoJKSwkYXR0cykpOwoKCWlmICgkaWQpIHsK
CSAgLy8gRmV0Y2ggYXJjX3R3aXR0ZXIgc3R1ZmYgdG8gYnVpbGQgdHdlZXQgZnJvbQoJICAk
dHdlZXQgPSBzYWZlX3JvdygidHdlZXRfaWQiCgkJLCAnYXJjX3R3aXR0ZXInLCAiYXJ0aWNs
ZV9pZD17JGlkfSIpOwoJfQoKCWlmICgkdHdlZXRbJ3R3ZWV0X2lkJ10pIHsKCSAgJHVybCA9
ICJodHRwOi8vdHdpdHRlci5jb20vIi4kcHJlZnNbJ2FyY190d2l0dGVyX3VzZXInXS4iL3N0
YXR1cy8iLiR0d2VldFsndHdlZXRfaWQnXTsKCSAgaWYgKCR0aGluZz09PW51bGwpIHsKCQly
ZXR1cm4gJHVybDsKCSAgfQoJICByZXR1cm4gaHJlZihwYXJzZSgkdGhpbmcpLCAkdXJsLAoJ
CSgkdGl0bGUgPyAnIHRpdGxlPSInLiR0aXRsZS4nIicgOiAnJykKCQkuKCRjbGFzcyA/ICcg
Y2xhc3M9IicuJGNsYXNzLiciJyA6ICcnKSk7Cgl9Cn0KCmZ1bmN0aW9uIGFyY190d2l0dGVy
X3Rpbnl1cmwoJGF0dHMsICR0aGluZz1udWxsKSB7CglnbG9iYWwgJHRoaXNhcnRpY2xlOwoK
CWV4dHJhY3QobEF0dHMoYXJyYXkoCgkgICdpZCcgICAgICA9PiAkdGhpc2FydGljbGVbJ3Ro
aXNpZCddLAoJICAndGl0bGUnICAgPT4gJycsCgkgICdjbGFzcycgICA9PiAnJwoJKSwkYXR0
cykpOwoKCWlmICgkaWQpIHsKCSAgLy8gRmV0Y2ggYXJjX3R3aXR0ZXIgc3R1ZmYgdG8gYnVp
bGQgdHdlZXQgZnJvbQoJICAkdHdlZXQgPSBzYWZlX3JvdygidGlueXVybCIKCQksICdhcmNf
dHdpdHRlcicsICJhcnRpY2xlX2lkPXskaWR9Iik7Cgl9CgoJaWYgKCR0d2VldFsndGlueXVy
bCddKSB7CgkgIGlmICgkdGhpbmc9PT1udWxsKSB7CgkJcmV0dXJuICR0d2VldFsndGlueXVy
bCddOwoJICB9CgoJICByZXR1cm4gaHJlZihwYXJzZSgkdGhpbmcpLCAkdHdlZXRbJ3Rpbnl1
cmwnXSwKCQkoJHRpdGxlID8gJyB0aXRsZT0iJy4kdGl0bGUuJyInIDogJycpCgkJLigkY2xh
c3MgPyAnIGNsYXNzPSInLiRjbGFzcy4nIicgOiAnJykpOwoJfQp9CgovKgogKiBQdWJsaWMg
dGFnIGZvciBvdXRwdXR0aW5nIHdpZGdldCBKUwogKi8KZnVuY3Rpb24gYXJjX3R3aXR0ZXJf
d2lkZ2V0X2pzKCRhdHRzKQp7CiAgZXh0cmFjdChsQXR0cyhhcnJheSgKCQknb3B0aW1pc2Un
ID0+IGZhbHNlCgkpLCRhdHRzKSk7CgogIHJldHVybiBfYXJjX3R3aXR0ZXJfd2lkZ2V0X2pz
KCRvcHRpbWlzZSk7Cn0KCmZ1bmN0aW9uIF9hcmNfdHdpdHRlcl93aWRnZXRfanMoJG9wdGlt
aXNlPXRydWUpCnsKICBnbG9iYWwgJGFyY190d2l0dGVyOwoKICAvLyBDaGVjayBpZiB3aWRn
ZXQgSlMgaGFzIGFscmVhZHkgYmVlbiBvdXRwdXQKICBpZiAoJGFyY190d2l0dGVyWyd3aWRn
ZXRfanMnXSkgcmV0dXJuOwoKICBpZiAoJG9wdGltaXNlPT1mYWxzZSkgewoJcmV0dXJuICc8
c2NyaXB0IHNyYz0iaHR0cDovL3BsYXRmb3JtLnR3aXR0ZXIuY29tL3dpZGdldHMuanMiIHR5
cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+JzsKICB9CgogICRqcyA9IDw8PEpTCjxz
Y3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KKGZ1bmN0aW9uKCkgewogIGlmICh3aW5k
b3cuX190d2l0dGVySW50ZW50SGFuZGxlcikgcmV0dXJuOwogIHZhciBpbnRlbnRSZWdleCA9
IC90d2l0dGVyXC5jb20oXDpcZHsyLDR9KT9cL2ludGVudFwvKFx3KykvLAoJICB3aW5kb3dP
cHRpb25zID0gJ3Njcm9sbGJhcnM9eWVzLHJlc2l6YWJsZT15ZXMsdG9vbGJhcj1ubyxsb2Nh
dGlvbj15ZXMnLAoJICB3aWR0aCA9IDU1MCwKCSAgaGVpZ2h0ID0gNDIwLAoJICB3aW5IZWln
aHQgPSBzY3JlZW4uaGVpZ2h0LAoJICB3aW5XaWR0aCA9IHNjcmVlbi53aWR0aDsKCiAgZnVu
Y3Rpb24gaGFuZGxlSW50ZW50KGUpIHsKCWUgPSBlIHx8IHdpbmRvdy5ldmVudDsKCXZhciB0
YXJnZXQgPSBlLnRhcmdldCB8fCBlLnNyY0VsZW1lbnQsCgkJbSwgbGVmdCwgdG9wOwoKCXdo
aWxlICh0YXJnZXQgJiYgdGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICdhJykg
ewoJICB0YXJnZXQgPSB0YXJnZXQucGFyZW50Tm9kZTsKCX0KCglpZiAodGFyZ2V0ICYmIHRh
cmdldC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnYScgJiYgdGFyZ2V0LmhyZWYpIHsK
CSAgbSA9IHRhcmdldC5ocmVmLm1hdGNoKGludGVudFJlZ2V4KTsKCSAgaWYgKG0pIHsKCQls
ZWZ0ID0gTWF0aC5yb3VuZCgod2luV2lkdGggLyAyKSAtICh3aWR0aCAvIDIpKTsKCQl0b3Ag
PSAwOwoKCQlpZiAod2luSGVpZ2h0ID4gaGVpZ2h0KSB7CgkJICB0b3AgPSBNYXRoLnJvdW5k
KCh3aW5IZWlnaHQgLyAyKSAtIChoZWlnaHQgLyAyKSk7CgkJfQoKCQl3aW5kb3cub3Blbih0
YXJnZXQuaHJlZiwgJ2ludGVudCcsIHdpbmRvd09wdGlvbnMgKyAnLHdpZHRoPScgKyB3aWR0
aCArCgkJCQkJCQkJCQkgICAnLGhlaWdodD0nICsgaGVpZ2h0ICsgJyxsZWZ0PScgKyBsZWZ0
ICsgJyx0b3A9JyArIHRvcCk7CgkJZS5yZXR1cm5WYWx1ZSA9IGZhbHNlOwoJCWUucHJldmVu
dERlZmF1bHQgJiYgZS5wcmV2ZW50RGVmYXVsdCgpOwoJICB9Cgl9CiAgfQoKICBpZiAoZG9j
dW1lbnQuYWRkRXZlbnRMaXN0ZW5lcikgewoJZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcign
Y2xpY2snLCBoYW5kbGVJbnRlbnQsIGZhbHNlKTsKICB9IGVsc2UgaWYgKGRvY3VtZW50LmF0
dGFjaEV2ZW50KSB7Cglkb2N1bWVudC5hdHRhY2hFdmVudCgnb25jbGljaycsIGhhbmRsZUlu
dGVudCk7CiAgfQogIHdpbmRvdy5fX3R3aXR0ZXJJbnRlbnRIYW5kbGVyID0gdHJ1ZTsKfSgp
KTsKPC9zY3JpcHQ+CkpTOwogICRhcmNfdHdpdHRlclsnd2lkZ2V0X2pzJ10gPSB0cnVlOwog
IHJldHVybiAkanM7Cn0KCi8vIERlcHJlY2F0ZWQgYXJjX3R3aXR0ZXJfcmV0d2VldCB0YWcs
IHVzZSBhcmNfdHdpdHRlcl90d2VldF9idXR0b24gaW5zdGVhZApmdW5jdGlvbiBhcmNfdHdp
dHRlcl9yZXR3ZWV0KCRhdHRzLCAkdGhpbmc9bnVsbCkKewogIHJldHVybiBhcmNfdHdpdHRl
cl90d2VldF9idXR0b24oJGF0dHMsICR0aGluZz1udWxsKTsKfQpmdW5jdGlvbiBhcmNfdHdp
dHRlcl90d2VldF9idXR0b24oJGF0dHMsICR0aGluZz1udWxsKQp7CglnbG9iYWwgJHByZWZz
LCRhcmNfdHdpdHRlcl9jb25zdW1lcktleSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0
OwoJZ2xvYmFsICR0aGlzYXJ0aWNsZTsKCglleHRyYWN0KGxBdHRzKGFycmF5KAoJCSd1c2Vy
JyAgICAgICAgPT4gJHByZWZzWydhcmNfdHdpdHRlcl91c2VyJ10sIC8vIHZpYSB1c2VyIGFj
Y291bnQKCQkndXJsJyAgICAgICAgID0+ICcnLAoJCSd0ZXh0JyAgICAgICAgPT4gJycsCgkJ
J2ZvbGxvdzEnICAgICA9PiAnJywKCQknZm9sbG93MicgICAgID0+ICcnLAoJCSdsYW5nJyAg
ICAgICAgPT4gJycsCgkJJ2NvdW50JyAgICAgICA9PiAnaG9yaXpvbnRhbCcsCgkJJ2luY2x1
ZGVfanMnICA9PiB0cnVlLAoJCSdvcHRpbWlzZV9qcycgPT4gZmFsc2UsCgkJJ3dyYXB0YWcn
ICAgICA9PiAnJywKCQknY2xhc3MnICAgICAgID0+ICd0d2l0dGVyLXNoYXJlLWJ1dHRvbicK
CSksJGF0dHMpKTsKCgkkcSA9ICcnOyAvLyBxdWVyeSBzdHJpbmcKCglpZiAoJGlkPSR0aGlz
YXJ0aWNsZVsndGhpc2lkJ10pIHsKCSAgLy8gRmV0Y2ggYXJjX3R3aXR0ZXIgc3R1ZmYgdG8g
YnVpbGQgdHdlZXQgZnJvbQoJICAkcm93ID0gc2FmZV9yb3coIlJFUExBQ0UodHdlZXQsQ09O
Q0FUKCcgJyx0aW55dXJsKSwnJykgQVMgdHdlZXQsdGlueXVybCIKCQksICdhcmNfdHdpdHRl
cicsICJhcnRpY2xlX2lkPXskaWR9Iik7CgoJICBpZiAoJHVybD09JycpIHsKCQkkdXJsID0g
KCR1cmwpID8gJHVybCA6IHBlcm1saW5rdXJsKCR0aGlzYXJ0aWNsZSk7CgkJJHEgPSAndXJs
PScudXJsZW5jb2RlKCR1cmwpOwoJICB9CgkgIGlmICgkdGV4dD09JycpIHsKCQkkdGV4dCA9
ICgkcm93Wyd0d2VldCddKSA/ICRyb3dbJ3R3ZWV0J10gOiAkdGhpc2FydGljbGVbJ3RpdGxl
J107CgkgIH0KCSAgJHEgLj0gKCRxID8gJyZhbXA7JyA6ICcnKS4ndGV4dD0nLnVybGVuY29k
ZSgkdGV4dCk7Cgl9CglpZiAoJHVzZXIpIHsKCSAgJHEgLj0gKCRxID8gJyZhbXA7JyA6ICcn
KS4ndmlhPScudXJsZW5jb2RlKCR1c2VyKTsKCX0KCWlmICgkZm9sbG93MSYmJGZvbGxvdzIp
IHsKCSAgJHEgLj0gKCRxID8gJyZhbXA7JyA6ICcnKS4ncmVsYXRlZD0nLnVybGVuY29kZSgk
Zm9sbG93MS4nOicuJGZvbGxvdzIpOwoJfSBlbHNlaWYgKCRmb2xsb3cxfHwkZm9sbG93Mikg
ewoJICAkcSAuPSAoJHEgPyAnJmFtcDsnIDogJycpLidyZWxhdGVkPScudXJsZW5jb2RlKCRm
b2xsb3cxLiRmb2xsb3cyKTsKCX0KCglzd2l0Y2ggKCRsYW5nKSB7CgkgIGNhc2UgJ2ZyJzog
YnJlYWs7IGNhc2UgJ2RlJzogYnJlYWs7IGNhc2UgJ2VzJzogYnJlYWs7IGNhc2UgJ2pwJzog
YnJlYWs7CgkgIGRlZmF1bHQ6CgkJJGxhbmcgPSAnZW4nOwoJfQoJJHEgLj0gKCRxID8gJyZh
bXA7JyA6ICcnKS4nbGFuZz0nLnVybGVuY29kZSgkbGFuZyk7CgoJc3dpdGNoICgkY291bnQp
IHsKCSAgY2FzZSAnbm9uZSc6IGJyZWFrOyBjYXNlICd2ZXJ0aWNhbCc6IGJyZWFrOwoJICBk
ZWZhdWx0OgoJCSRjb3VudCA9ICdob3Jpem9udGFsJzsKCX0KCSRxIC49ICgkcSA/ICcmYW1w
OycgOiAnJykuJ2NvdW50PScudXJsZW5jb2RlKCRjb3VudCk7CgoJJHRoaW5nID0gKCR0aGlu
Zz09PW51bGwpID8gJ1R3ZWV0JyA6IHBhcnNlKCR0aGluZyk7CgoJJGh0bWwgPSBocmVmKCR0
aGluZywnaHR0cDovL3R3aXR0ZXIuY29tL3NoYXJlPycuJHEKCSAgLCAnIGNsYXNzPSInLiRj
bGFzcy4nIicpOwoKCSRqcyA9ICgkaW5jbHVkZV9qcykgPyBfYXJjX3R3aXR0ZXJfd2lkZ2V0
X2pzKCRvcHRpbWlzZV9qcz90cnVlOmZhbHNlKSA6ICcnOwoKCXJldHVybiAkanMuJGh0bWw7
Cn0KCi8qCiAqIFR3aXR0ZXIgRm9sbG93IGJ1dHRvbgogKi8KZnVuY3Rpb24gYXJjX3R3aXR0
ZXJfZm9sbG93X2J1dHRvbigkYXR0cywgJHRoaW5nPW51bGwpCnsKCWdsb2JhbCAkcHJlZnMs
JGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJTZWNyZXQ7
CglnbG9iYWwgJHRoaXNhcnRpY2xlOwoKCWV4dHJhY3QobEF0dHMoYXJyYXkoCgkJJ3VzZXIn
ICAgICAgICA9PiAkcHJlZnNbJ2FyY190d2l0dGVyX3VzZXInXSwgLy8gdmlhIHVzZXIgYWNj
b3VudAoJCSdsYW5nJyAgICAgICAgPT4gJycsCgkJJ2NvdW50JyAgICAgICA9PiB0cnVlLAoJ
CSdpbmNsdWRlX2pzJyAgPT4gdHJ1ZSwKCQknb3B0aW1pc2VfanMnID0+IGZhbHNlLAoJCSdj
bGFzcycgICAgICAgPT4gJ3R3aXR0ZXItZm9sbG93LWJ1dHRvbicKCSksJGF0dHMpKTsKCgkk
YXR0cyA9ICcnOyAvLyBkYXRhIGF0dHJpYnV0ZXMKCglzd2l0Y2ggKCRsYW5nKSB7CgkgIGNh
c2UgJ2ZyJzogYnJlYWs7IGNhc2UgJ2RlJzogYnJlYWs7IGNhc2UgJ2VzJzogYnJlYWs7IGNh
c2UgJ2pwJzogYnJlYWs7CgkgIGRlZmF1bHQ6CgkJJGxhbmcgPSAnZW4nOwoJfQoJJGF0dHMg
Lj0gJyBkYXRhLWxhbmc9IicudXJsZW5jb2RlKCRsYW5nKS4nIic7CgoJJGF0dHMgLj0gJyBk
YXRhLXNob3ctY291bnQ9IicuKCRjb3VudD8ndHJ1ZSc6J2ZhbHNlJykuJyInOwoKCSR0aGlu
ZyA9ICgkdGhpbmc9PT1udWxsKSA/ICdGb2xsb3cgQCcuJHVzZXIgOiBwYXJzZSgkdGhpbmcp
OwoKCSRodG1sID0gaHJlZigkdGhpbmcsJ2h0dHA6Ly90d2l0dGVyLmNvbS8nLnVybGVuY29k
ZSgkdXNlcikKCSAgLCAnIGNsYXNzPSInLiRjbGFzcy4nIicuJGF0dHMpOwoKCSRqcyA9ICgk
aW5jbHVkZV9qcykgPyBfYXJjX3R3aXR0ZXJfd2lkZ2V0X2pzKCRvcHRpbWlzZV9qcz90cnVl
OmZhbHNlKSA6ICcnOwoKCXJldHVybiAkanMuJGh0bWw7Cn0KCi8qCglBZG1pbi1zaWRlIGZ1
bmN0aW9ucwoJPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQoqLwoKLy8gSW5zdGFsbGF0aW9uIGZ1bmN0aW9uIC0gYnVp
bGRzIE15U1FMIHRhYmxlCmZ1bmN0aW9uIGFyY190d2l0dGVyX2luc3RhbGwoKQp7CgoJLy8g
Rm9yIGZpcnN0IGluc3RhbGwsIGNyZWF0ZSB0YWJsZSBmb3IgdHdlZXRzCgkkc3FsID0gIkNS
RUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTICIuUEZYLiJhcmNfdHdpdHRlciAiOwoJJHNxbC49
ICIoYXJjX3R3aXR0ZXJpZCBJTlRFR0VSIEFVVE9fSU5DUkVNRU5UIFBSSU1BUlkgS0VZLAoJ
CWFydGljbGVfaWQgSU5URUdFUigxMSksCgkJdHdlZXRfaWQgVkFSQ0hBUigxMDApLAoJCXR3
ZWV0IFZBUkNIQVIoMTQwKSwKCQl0aW55dXJsIFZBUkNIQVIoMzApKTsiOwoKCWlmICghc2Fm
ZV9xdWVyeSgkc3FsKSkgewoJCXJldHVybiAnRXJyb3IgLSB1bmFibGUgdG8gY3JlYXRlIGFy
Y190d2l0dGVyIHRhYmxlJzsKCX0KCn0KCi8vIFVuaW5zdGFsbCBmdW5jdGlvbiAtIGRlbGV0
ZXMgTXlTUUwgdGFibGUgYW5kIHJlbGF0ZWQgcHJlZmVyZW5jZXMKZnVuY3Rpb24gYXJjX3R3
aXR0ZXJfdW5pbnN0YWxsKCkKewoKCSRzcWwgPSAiRFJPUCBUQUJMRSBJRiBFWElTVFMgIi5Q
RlguImFyY190d2l0dGVyOyI7CglpZiAoIXNhZmVfcXVlcnkoJHNxbCkpIHsKCQlyZXR1cm4g
J0Vycm9yIC0gdW5hYmxlIHRvIGRlbGV0ZSBhcmNfdHdpdHRlciB0YWJsZSc7Cgl9CgoJJHNx
bCA9ICJERUxFVEUgRlJPTSAgIi5QRlguInR4cF9wcmVmcyBXSEVSRSBldmVudD0nYXJjX3R3
aXR0ZXInOyI7CglpZiAoIXNhZmVfcXVlcnkoJHNxbCkpIHsKCQlyZXR1cm4gJ0Vycm9yIC0g
dW5hYmxlIHRvIGRlbGV0ZSBhcmNfdHdpdHRlciBwcmVmZXJlbmNlcyc7Cgl9Cgp9CmZ1bmN0
aW9uIGFyY190d2l0dGVyX3VybF9tZXRob2Rfc2VsZWN0KCRuYW1lLCAkdmFsKQp7CgkkbWV0
aG9kcyA9IGFycmF5KAoJCSdmdWxsJyA9PiAnRG8gbm90IHNob3J0ZW4nLAoJCSd0aW55dXJs
JyA9PiAnVGlueXVybCcsCgkJJ2lzZ2QnID0+ICdJcy5nZCcsCgkJJ2FyY190d2l0dGVyJyA9
PiAnVFhQIFR3ZWV0JywKCQknc21kJyA9PiAnc21kX3Nob3J0X3VybCcKCSk7CglyZXR1cm4g
c2VsZWN0SW5wdXQoJG5hbWUsICRtZXRob2RzLCAkdmFsLCAnJywgJycsICRuYW1lKTsKfQpm
dW5jdGlvbiBhcmNfdHdpdHRlcl90YWJfc2VsZWN0KCRuYW1lLCAkdmFsKQp7CgkkdGFicyA9
IGFycmF5KCdjb250ZW50JyA9PiAnQ29udGVudCcsCgkJJ2V4dGVuc2lvbnMnID0+ICdFeHRl
bnNpb25zJywKCQknJyA9PiAnSGlkZGVuJyk7CglyZXR1cm4gc2VsZWN0SW5wdXQoJG5hbWUs
ICR0YWJzLCAkdmFsLCAnJywgJycsICRuYW1lKTsKfQovLyBQcm92aWRlIGludGVyZmFjZSBm
b3Igc2V0dGluZyBwcmVmZXJlbmNlcwpmdW5jdGlvbiBhcmNfdHdpdHRlcl9wcmVmcygkZXZl
bnQsJHN0ZXApCnsKCglnbG9iYWwgJHByZWZzLCRhcmNfdHdpdHRlcl9jb25zdW1lcktleSwk
YXJjX3R3aXR0ZXJfY29uc3VtZXJTZWNyZXQ7CgoJJHVzZXIgICAgICAgICAgPSAkcHJlZnNb
J2FyY190d2l0dGVyX3VzZXInXTsKCSRwcmVmaXggICAgICAgID0gJHByZWZzWydhcmNfdHdp
dHRlcl9wcmVmaXgnXTsKCSRzdWZmaXggICAgICAgID0gJHByZWZzWydhcmNfdHdpdHRlcl9z
dWZmaXgnXTsKCSR0d2VldF9kZWZhdWx0ID0gJHByZWZzWydhcmNfdHdpdHRlcl90d2VldF9k
ZWZhdWx0J107CgkkdXJsX21ldGhvZCAgICA9ICRwcmVmc1snYXJjX3R3aXR0ZXJfdXJsX21l
dGhvZCddOwoJJHNob3J0X3VybCAgICAgPSAkcHJlZnNbJ2FyY19zaG9ydF91cmwnXTsKCSRz
aG9ydF9zaXRlX3VybD0gJHByZWZzWydhcmNfc2hvcnRfc2l0ZV91cmwnXTsKCSRjYWNoZV9k
aXIgICAgID0gJHByZWZzWydhcmNfdHdpdHRlcl9jYWNoZV9kaXInXTsKCSR0YWIgICAgICAg
ICAgID0gJHByZWZzWydhcmNfdHdpdHRlcl90YWInXTsKCglzd2l0Y2ggKCRzdGVwKSB7CgkJ
Y2FzZSAncHJlZnNfc2F2ZSc6IHBhZ2V0b3AoJ1RYUCBUd2VldCcsICdQcmVmZXJlbmNlcyBz
YXZlZCcpOyBicmVhazsKCQljYXNlICdyZWdpc3Rlcic6IHBhZ2V0b3AoJ1RYUCBUd2VldCcs
J0Nvbm5lY3QgdG8gVHdpdHRlcicpOyBicmVhazsKCQljYXNlICd2YWxpZGF0ZSc6CgkJZGVm
YXVsdDogcGFnZXRvcCgnVFhQIFR3ZWV0Jyk7Cgl9CgoJJGh0bWwgPSAnJzsKCglpZiAoJHN0
ZXA9PSdyZWdpc3RlcicpIHsgLy8gT0F1dGggcmVnaXN0cmF0aW9uIHByb2Nlc3MKCgkJJHR3
aXQgPSBuZXcgYXJjX3R3aXR0ZXIoJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAkYXJjX3R3
aXR0ZXJfY29uc3VtZXJTZWNyZXQpOwoKCQkvLyBCdWlsZCBhIGNhbGxiYWNrIFVSTCBmb3Ig
VHdpdHRlciB0byByZXR1cm4gdG8gdGhlIG5leHQgc3RhZ2UKCQkkY2FsbGJhY2tVUkwgPSAk
dHdpdC0+Y2FsbGJhY2tVUkwoJGV2ZW50LCd2YWxpZGF0ZScpOwoKCQkkcmVxdWVzdCA9ICR0
d2l0LT5nZXRSZXF1ZXN0VG9rZW4oJGNhbGxiYWNrVVJMKTsKCQkkcmVxdWVzdF90b2tlbiA9
ICRyZXF1ZXN0WyJvYXV0aF90b2tlbiJdOwoJCSRyZXF1ZXN0X3Rva2VuX3NlY3JldCA9ICRy
ZXF1ZXN0WyJvYXV0aF90b2tlbl9zZWNyZXQiXTsKCgkJc2V0X3ByZWYoJ2FyY190d2l0dGVy
X3JlcXVlc3RUb2tlbicsJHJlcXVlc3RfdG9rZW4sICdhcmNfdHdpdHRlcicsMik7CgkJc2V0
X3ByZWYoJ2FyY190d2l0dGVyX3JlcXVlc3RUb2tlblNlY3JldCcsJHJlcXVlc3RfdG9rZW5f
c2VjcmV0LCAnYXJjX3R3aXR0ZXInLDIpOwoKCSRodG1sID0gIjxkaXYgY2xhc3M9J3RleHQt
Y29sdW1uJz4iCgkgIC4iPHA+Ii5ocmVmKCdTaWduLWluIHRvIFR3aXR0ZXInLCAkdHdpdC0+
Z2V0QXV0aG9yaXplVVJMKCRyZXF1ZXN0KSkuIiBhbmQgZm9sbG93IHRoZSBpbnN0cnVjdGlv
bnMgdG8gYWxsb3cgVFhQIFR3ZWV0IHRvIHVzZSB5b3VyIGFjY291bnQuIElmIHlvdSBhcmUg
YWxyZWFkeSBzaWduZWQgaW4gdG8gVHdpdHRlciB0aGVuIHRoYXQgYWNjb3VudCB3aWxsIGJl
IGFzc29jaWF0ZWQgd2l0aCBUWFAgVHdlZXQgc28geW91IG1heSBuZWVkIHRvIHNpZ24gb3V0
IGZpcnN0IGlmIHlvdSB3YW50IHRvIHVzZSBhIGRpZmZlcmVudCBhY2NvdW50LjwvcD4iCgkg
IC4iPC9kaXY+IjsKCgl9IGVsc2VpZiAoJHN0ZXA9PSd2YWxpZGF0ZScpIHsKCQkkdHdpdCA9
IG5ldyBhcmNfdHdpdHRlcigkYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXkKCQkJLCAkYXJjX3R3
aXR0ZXJfY29uc3VtZXJTZWNyZXQsICRwcmVmc1snYXJjX3R3aXR0ZXJfcmVxdWVzdFRva2Vu
J10KCQkJLCAkcHJlZnNbJ2FyY190d2l0dGVyX3JlcXVlc3RUb2tlblNlY3JldCddKTsKCQkv
LyBBc2sgVHdpdHRlciBmb3IgYW4gYWNjZXNzIHRva2VuIChhbmQgYW4gYWNjZXNzIHRva2Vu
IHNlY3JldCkKCQkkcmVxdWVzdCA9ICR0d2l0LT5nZXRBY2Nlc3NUb2tlbiggZ3BzKCdvYXV0
aF92ZXJpZmllcicpICk7CgkJJGFjY2Vzc190b2tlbiA9ICRyZXF1ZXN0WydvYXV0aF90b2tl
biddOwoJCSRhY2Nlc3NfdG9rZW5fc2VjcmV0ID0gJHJlcXVlc3RbJ29hdXRoX3Rva2VuX3Nl
Y3JldCddOwoJCSR1c2VyID0gJHJlcXVlc3RbJ3NjcmVlbl9uYW1lJ107CgkJLy8gU3RvcmUg
dGhlIGFjY2VzcyB0b2tlbiBhbmQgc2VjcmV0CgkJc2V0X3ByZWYoJ2FyY190d2l0dGVyX2Fj
Y2Vzc1Rva2VuJywkYWNjZXNzX3Rva2VuLCAnYXJjX3R3aXR0ZXInLDIpOwoJCXNldF9wcmVm
KCdhcmNfdHdpdHRlcl9hY2Nlc3NUb2tlblNlY3JldCcsJGFjY2Vzc190b2tlbl9zZWNyZXQK
CQkJLCAnYXJjX3R3aXR0ZXInLDIpOwoJCXNldF9wcmVmKCdhcmNfdHdpdHRlcl91c2VyJywk
dXNlcik7CgkJJHByZWZzWydhcmNfdHdpdHRlcl9hY2Nlc3NUb2tlbiddID0gJGFjY2Vzc190
b2tlbjsKCQkkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vzc1Rva2VuU2VjcmV0J10gPSAkYWNj
ZXNzX3Rva2VuX3NlY3JldDsKCQl1bnNldCgkdHdpdCk7Cgl9CgoJaWYgKCRzdGVwPT0icHJl
ZnNfc2F2ZSIpIHsKCQkkcHJlZml4ID0gdHJpbShncHMoJ2FyY190d2l0dGVyX3ByZWZpeCcp
KTsKCQkkc3VmZml4ID0gdHJpbShncHMoJ2FyY190d2l0dGVyX3N1ZmZpeCcpKTsKCQkkdHdl
ZXRfZGVmYXVsdCA9IGdwcygnYXJjX3R3aXR0ZXJfdHdlZXRfZGVmYXVsdCcpOwoJCSR1cmxf
bWV0aG9kID0gZ3BzKCdhcmNfdHdpdHRlcl91cmxfbWV0aG9kJyk7CgkJJHNob3J0X3VybCA9
IGdwcygnYXJjX3Nob3J0X3VybCcpOwoJCSRzaG9ydF9zaXRlX3VybCA9IGdwcygnYXJjX3No
b3J0X3NpdGVfdXJsJyk7CgkJJGNhY2hlX2RpciA9IGdwcygnYXJjX3R3aXR0ZXJfY2FjaGVf
ZGlyJyk7CgkJJHRhYiA9IGdwcygnYXJjX3R3aXR0ZXJfdGFiJyk7CgkJaWYgKHN0cmxlbigk
cHJlZml4KTw9MjApIHsKCQkJc2V0X3ByZWYoJ2FyY190d2l0dGVyX3ByZWZpeCcsJHByZWZp
eCk7CgkJfSBlbHNlIHsKCQkJJHByZWZpeCA9ICRwcmVmc1snYXJjX3R3aXR0ZXJfcHJlZml4
J107CgkJfQoJCWlmIChzdHJsZW4oJHN1ZmZpeCk8PTIwKSB7CgkJCXNldF9wcmVmKCdhcmNf
dHdpdHRlcl9zdWZmaXgnLCRzdWZmaXgpOwoJCX0gZWxzZSB7CgkJCSRzdWZmaXggPSAkcHJl
ZnNbJ2FyY190d2l0dGVyX3N1ZmZpeCddOwoJCX0KCQkkdHdlZXRfZGVmYXVsdCA9ICgkdHdl
ZXRfZGVmYXVsdCkgPyAxIDogMDsKCQkkc2hvcnRfdXJsID0gKCRzaG9ydF91cmwpID8gMSA6
IDA7CgkJaWYgKCEkc2hvcnRfc2l0ZV91cmwpICRzaG9ydF9zaXRlX3VybCA9ICRwcmVmc1sn
c2l0ZXVybCddOwoJCXNldF9wcmVmKCdhcmNfdHdpdHRlcl90d2VldF9kZWZhdWx0JywkdHdl
ZXRfZGVmYXVsdCk7CgkJc2V0X3ByZWYoJ2FyY19zaG9ydF91cmwnLCRzaG9ydF91cmwpOwoJ
CXNldF9wcmVmKCdhcmNfdHdpdHRlcl91cmxfbWV0aG9kJywkdXJsX21ldGhvZCk7CgkJc2V0
X3ByZWYoJ2FyY19zaG9ydF9zaXRlX3VybCcsJHNob3J0X3NpdGVfdXJsKTsKCQlzZXRfcHJl
ZignYXJjX3R3aXR0ZXJfY2FjaGVfZGlyJywkY2FjaGVfZGlyKTsKCQlzZXRfcHJlZignYXJj
X3R3aXR0ZXJfdGFiJywkdGFiKTsKCX0KCglpZiAoICRzdGVwIT0ncmVnaXN0ZXInICkgewoJ
CWlmICggaXNzZXQoJHByZWZzWydhcmNfdHdpdHRlcl9hY2Nlc3NUb2tlbiddKQoJCSYmIGlz
c2V0KCRwcmVmc1snYXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW5TZWNyZXQnXSkgKSB7CgkJCSR0
d2l0ID0gbmV3IGFyY190d2l0dGVyKCRhcmNfdHdpdHRlcl9jb25zdW1lcktleQoJCQkJLCAk
YXJjX3R3aXR0ZXJfY29uc3VtZXJTZWNyZXQsICRwcmVmc1snYXJjX3R3aXR0ZXJfYWNjZXNz
VG9rZW4nXQoJCQkJLCAkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vzc1Rva2VuU2VjcmV0J10p
OwoJCQkkcmVnaXN0ZXJVUkwgPSAkdHdpdC0+Y2FsbGJhY2tVUkwoJGV2ZW50LCdyZWdpc3Rl
cicpOwoKCQkJLy8gRGVmaW5lIHRoZSBmaWVsZHMgcmVhZHkgdG8gYnVpbGQgdGhlIGZvcm0K
CQkJJGZpZWxkcyA9IGFycmF5KAoJCSdUd2VldCBTZXR0aW5ncycgPT4gYXJyYXkoCgkJICAn
YXJjX3R3aXR0ZXJfcHJlZml4JyA9PiBhcnJheSgKCQkJJ2xhYmVsJyA9PiAnVHdlZXQgcHJl
Zml4JywKCQkJJ3ZhbHVlJyA9PiAkcHJlZml4CgkJICApLAoJCSAgJ2FyY190d2l0dGVyX3N1
ZmZpeCcgPT4gYXJyYXkoCgkJCSdsYWJlbCcgPT4gJ1R3ZWV0IHN1ZmZpeCcsCgkJCSd2YWx1
ZScgPT4gJHN1ZmZpeAoJCSAgKSwKCQkgICdhcmNfdHdpdHRlcl90d2VldF9kZWZhdWx0JyA9
PiBhcnJheSgKCQkJJ2xhYmVsJyA9PiAnVHdlZXQgYXJ0aWNsZXMgYnkgZGVmYXVsdCcsCgkJ
CSd0eXBlJyA9PiAneWVzbm9SYWRpbycsCgkJCSd2YWx1ZScgPT4gJHR3ZWV0X2RlZmF1bHQK
CQkgICksCgkJICAnYXJjX3R3aXR0ZXJfdXJsX21ldGhvZCcgPT4gYXJyYXkoCgkJCSdsYWJl
bCcgPT4gJ1VSTCBzaG9ydG5lcicsCgkJCSd0eXBlJyA9PiAnYXJjX3R3aXR0ZXJfdXJsX21l
dGhvZF9zZWxlY3QnLAoJCQkndmFsdWUnID0+ICR1cmxfbWV0aG9kCgkJICApCgkJKSwKCQkn
VFhQIFR3ZWV0IHNob3J0IFVSTCcgPT4gYXJyYXkoCgkJICAnYXJjX3Nob3J0X3VybCcgPT4g
YXJyYXkoCgkJCSdsYWJlbCcgPT4gJ0VuYWJsZSBUWFAgVHdlZXQgc2hvcnQgVVJMIHJlZGly
ZWN0JywKCQkJJ3R5cGUnID0+ICd5ZXNub1JhZGlvJywKCQkJJ3ZhbHVlJyA9PiAkc2hvcnRf
dXJsCgkJICApLAoJCSAgJ2FyY19zaG9ydF9zaXRlX3VybCcgPT4gYXJyYXkoCgkJCSdsYWJl
bCcgPT4gJ1RYUCBUd2VldCBzaG9ydCBzaXRlIFVSTCcsCgkJCSd2YWx1ZScgPT4gJHNob3J0
X3NpdGVfdXJsCgkJICApCgkJKSwKCQknVHdpdHRlciBUYWInID0+IGFycmF5KAoJCSAgJ2Fy
Y190d2l0dGVyX3RhYicgPT4gYXJyYXkoCgkJCSdsYWJlbCcgPT4gJ0xvY2F0aW9uIG9mIHRh
YicsCgkJCSd0eXBlJyA9PiAnYXJjX3R3aXR0ZXJfdGFiX3NlbGVjdCcsCgkJCSd2YWx1ZScg
PT4gJHRhYgoJCSAgKQoJCSksCgkJJ0NhY2hlJyA9PiBhcnJheSgKCQkgICdhcmNfdHdpdHRl
cl9jYWNoZV9kaXInID0+IGFycmF5KAoJCQknbGFiZWwnID0+ICdDYWNoZSBkaXJlY3Rvcnkn
LAoJCQkndmFsdWUnID0+ICRjYWNoZV9kaXIKCQkgICkKCQkpCgkJCSk7CgoJCQkkZm9ybSA9
ICI8aDI+VHdpdHRlciBhY2NvdW50IGRldGFpbHM8L2gyPiIKCQkuIjxwPjxzcGFuIGNsYXNz
PSdlZGl0LWxhYmVsJz5Ud2l0dGVyIHVzZXJuYW1lPC9zcGFuPiIKCQkuIjxzcGFuIGNsYXNz
PSdlZGl0LXZhbHVlJz4iCgkJLigkcHJlZnNbJ2FyY190d2l0dGVyX3VzZXInXSA/ICR1c2Vy
LicgKCcuaHJlZignUmUtY29ubmVjdCcsJHJlZ2lzdGVyVVJMKS4nKScgOiAnPGVtPnVua25v
d248L2VtPicuaHJlZignQ29ubmVjdCB0byBUd2l0dGVyJywkcmVnaXN0ZXJVUkwpKQoJCQkJ
LiI8L3NwYW4+PC9wPiI7CgoJCQkkZm9ybSAuPSBfYXJjX3R3aXR0ZXJfZm9ybV9idWlsZGVy
KCRmaWVsZHMpOwoKCQkJJGZvcm0gLj0gc0lucHV0KCdwcmVmc19zYXZlJykubi5lSW5wdXQo
J3BsdWdpbl9wcmVmcy5hcmNfdHdpdHRlcicpOwoKCSAgJGZvcm0gLj0gJzxwPicuZklucHV0
KCdzdWJtaXQnLCAnU3VibWl0JywgZ1R4dCgnc2F2ZV9idXR0b24nKSwgJ3B1Ymxpc2gnKS4n
PC9wPic7CgoJICAkaHRtbCA9ICI8aDEgY2xhc3M9J3R4cC1oZWFkaW5nJz5UWFAgVHdlZXQ8
L2gxPiIKCQkuIjxwIGNsYXNzPSduYXYtdGVydGlhcnknPiIKCQkuIjxhIGhyZWY9Jy4vP2V2
ZW50PWFyY19hZG1pbl90d2l0dGVyJyBjbGFzcz0nbmF2bGluayc+VHdpdHRlcjwvYT48YSBo
cmVmPScuLz9ldmVudD1wbHVnaW5fcHJlZnMuYXJjX3R3aXR0ZXInIGNsYXNzPSduYXZsaW5r
LWFjdGl2ZSc+T3B0aW9uczwvYT4iCgkJLiI8L3A+IjsKCgkgICRodG1sIC49IGZvcm0oIjxk
aXYgY2xhc3M9J3BsdWdpbi1jb2x1bW4nPiIuJGZvcm0uIjwvZGl2PiIsICIgY2xhc3M9J2Vk
aXQtZm9ybSciKTsKCgkJfSBlbHNlaWYgKCAkc3RlcCE9J3JlZ2lzdGVyJyApIHsKCgkJCSRy
ZWdpc3RlclVSTCA9IGFyY190d2l0dGVyOjpjYWxsYmFja1VSTCgkZXZlbnQsJ3JlZ2lzdGVy
Jyk7CgoJCQkkZm9ybSA9ICI8aDI+VHdpdHRlciBhY2NvdW50IGRldGFpbHM8L2gyPiIKCQku
IjxzcGFuIGNsYXNzPSdlZGl0LWxhYmVsJz5Ud2l0dGVyIHVzZXJuYW1lPC9zcGFuPiIKCQku
IjxzcGFuIGNsYXNzPSdlZGl0LXZhbHVlJz48ZW0+dW5rbm93bjwvZW0+ICZtZGFzaDsgIgoJ
CS5ocmVmKCdDb25uZWN0IHRvIFR3aXR0ZXInLCRyZWdpc3RlclVSTCkKCQkJCS4iPC9zcGFu
PiI7CgoJICAkaHRtbCA9IGZvcm0oIjxkaXYgY2xhc3M9J3BsdWdpbi1jb2x1bW4nPiIuJGZv
cm0uIjwvZGl2PiIsICIgY2xhc3M9J2VkaXQtZm9ybSciKTsKCgkJfQoJfQoKCS8vIFNldCBq
UXVlcnkgZm9yIHN3aXRjaGluZyBvbi9vZmYgcmVsZXZhbnQgYXJjX3Nob3J0X3VybCBmaWVs
ZHMKCSRqcyA9IDw8PEpTCjxzY3JpcHQgbGFuZ3VhZ2U9ImphdmFzY3JpcHQiIHR5cGU9InRl
eHQvamF2YXNjcmlwdCI+CiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7CiAgdmFyIG9u
b2ZmID0gJCgnLmFyY19zaG9ydF91cmwnKTsKICB2YXIgYXJjX3Nob3J0X3VybF9vZmYgPSAk
KCcjYXJjX3Nob3J0X3VybC1hcmNfc2hvcnRfdXJsLTAnKTsKICB2YXIgdXJsID0gJCgnLmFy
Y19zaG9ydF9zaXRlX3VybCcpOwogIHZhciB1cmxfbWV0aG9kID0gJCgnc2VsZWN0W25hbWU9
ImFyY190d2l0dGVyX3VybF9tZXRob2QiXScpOwoKICBpZiAoYXJjX3Nob3J0X3VybF9vZmYu
YXR0cignY2hlY2tlZCcpPT0nY2hlY2tlZCcgJiYgJCgnb3B0aW9uOnNlbGVjdGVkJywgdXJs
X21ldGhvZCkudmFsKCkhPSdhcmNfdHdpdHRlcicpIHsKCXVybC5oaWRlKCk7CiAgfQogICQo
J2lucHV0Jywgb25vZmYpLmNoYW5nZShmdW5jdGlvbigpewoJaWYgKCQoJ29wdGlvbjpzZWxl
Y3RlZCcsIHVybF9tZXRob2QpLnZhbCgpIT0nYXJjX3R3aXR0ZXInKSB7CgkgIGFyY19zaG9y
dF91cmxfb2ZmLmF0dHIoJ2NoZWNrZWQnKT09J2NoZWNrZWQnID8gdXJsLmhpZGUoKSA6IHVy
bC5zaG93KCk7Cgl9CiAgfSk7CgogIGlmICgkKCdvcHRpb246c2VsZWN0ZWQnLCB1cmxfbWV0
aG9kKS52YWwoKT09J2FyY190d2l0dGVyJykgewoJb25vZmYuaGlkZSgpOyB1cmwuc2hvdygp
OwogIH0KICB1cmxfbWV0aG9kLmNoYW5nZShmdW5jdGlvbigpewoJaWYgKCQoJ29wdGlvbjpz
ZWxlY3RlZCcsIHVybF9tZXRob2QpLnZhbCgpPT0nYXJjX3R3aXR0ZXInKSB7CgkgIG9ub2Zm
LnRvZ2dsZSgpOyB1cmwuc2hvdygpOwoJfSBlbHNlIHsKCSAgb25vZmYudG9nZ2xlKCk7Cgkg
IGFyY19zaG9ydF91cmxfb2ZmLmF0dHIoJ2NoZWNrZWQnKT09J2NoZWNrZWQnID8gdXJsLmhp
ZGUoKSA6IHVybC5zaG93KCk7Cgl9CiAgfSkKfSk7Cjwvc2NyaXB0PgpKUzsKCgllY2hvICRq
cy4kaHRtbDsKfQoKZnVuY3Rpb24gX2FyY190d2l0dGVyX2Zvcm1fYnVpbGRlcigkZmllbGRz
KSB7CgogICRmb3JtID0gJyc7CgogIGZvcmVhY2ggKCRmaWVsZHMgYXMgJGZrID0+ICRmdikg
ewoKCSRmb3JtIC49ICgkZmspID8gIjxoMj4kZms8L2gyPiIgOiAnJzsKCglmb3JlYWNoICgk
ZnYgYXMgJGsgPT4gJHYpIHsKCgkgICR0eXBlID0gaXNzZXQoJHZbJ3R5cGUnXSkgPyAkdlsn
dHlwZSddIDogJ3RleHQnOwoKCSAgJGZvcm0gLj0gIjxwIGNsYXNzPSckayc+IgoJCS4iPHNw
YW4gY2xhc3M9J2VkaXQtbGFiZWwnPjxsYWJlbCBmb3I9JyRrJz4iLiR2WydsYWJlbCddLiI8
L2xhYmVsPjwvc3Bhbj4iOwoKCSAgc3dpdGNoICgkdHlwZSkgIHsKCgkJY2FzZSAndGV4dGFy
ZWEnOgoKCQkgICRmb3JtIC49IHRleHRfYXJlYSgkaywgJzUwJywgJzU1MCcsICR2Wyd2YWx1
ZSddLCAkayk7CgkJICBicmVhazsKCgkJY2FzZSAneWVzbm9SYWRpbyc6CgoJCSAgJGZvcm0g
Lj0gIjxzcGFuIGNsYXNzPSdlZGl0LXZhbHVlJz4iLnllc25vUmFkaW8oJGssICR2Wyd2YWx1
ZSddLCAnJywgJGspLiI8L3NwYW4+IjsKCQkgIGJyZWFrOwoKCQljYXNlICdhcmNfdHdpdHRl
cl90YWJfc2VsZWN0JzoKCgkJICAkZm9ybSAuPSAiPHNwYW4gY2xhc3M9J2VkaXQtdmFsdWUn
PiIuYXJjX3R3aXR0ZXJfdGFiX3NlbGVjdCgkaywgJHZbJ3ZhbHVlJ10pLiI8L3NwYW4+IjsK
CQkgIGJyZWFrOwoKCQljYXNlICdhcmNfdHdpdHRlcl91cmxfbWV0aG9kX3NlbGVjdCc6CgoJ
CSAgJGZvcm0gLj0gIjxzcGFuIGNsYXNzPSdlZGl0LXZhbHVlJz4iLmFyY190d2l0dGVyX3Vy
bF9tZXRob2Rfc2VsZWN0KCRrLCAkdlsndmFsdWUnXSkuIjwvc3Bhbj4iOwoJCSAgYnJlYWs7
CgoJCWRlZmF1bHQ6CgoJCSAgJGZvcm0gLj0gIjxzcGFuIGNsYXNzPSdlZGl0LXZhbHVlJz4i
LmZJbnB1dCgndGV4dCcsJGssJHZbJ3ZhbHVlJ10sJycsJycsJycsJycsJycsJGspLiI8L3Nw
YW4+IjsKCQkgIGJyZWFrOwoKCSAgfQoKCSAgJGZvcm0gLj0gIjwvcD4iOwoJfQoKICB9Cgog
IHJldHVybiAkZm9ybTsKfQoKLy8gQWRkIFR3aXR0ZXIgdGFiIHRvIFRleHRwYXR0ZXJuCmZ1
bmN0aW9uIGFyY19hZG1pbl90d2l0dGVyKCRldmVudCwkc3RlcCkKewoJZ2xvYmFsICRwcmVm
cywgJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJTZWNy
ZXQ7CgoJJHR3aXQgPSBuZXcgYXJjX3R3aXR0ZXIoJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5
CgkJCSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0LCAkcHJlZnNbJ2FyY190d2l0dGVy
X2FjY2Vzc1Rva2VuJ10KCQkJLCAkcHJlZnNbJ2FyY190d2l0dGVyX2FjY2Vzc1Rva2VuU2Vj
cmV0J10pOwoKCSR0d2l0LT5jYWNoZURpcigkcHJlZnNbJ2FyY190d2l0dGVyX2NhY2hlX2Rp
ciddKTsKCgkkZGF0YSA9ICR0d2l0LT5nZXQoJ3VzZXJzL3Nob3cnCgkJLCBhcnJheSgnc2Ny
ZWVuX25hbWUnPT4kcHJlZnNbJ2FyY190d2l0dGVyX3VzZXInXSkpOwoJJHR3aXR0ZXJVc2Vy
ID0gJGRhdGE7CgkkdHdpdHRlclVzZXJVUkwgPSAnaHR0cDovL3d3dy50d2l0dGVyLmNvbS8n
LiR0d2l0dGVyVXNlci0+c2NyZWVuX25hbWU7CgoJaWYgKCRzdGVwPT0idHdlZXQiKSB7IC8v
IHBvc3QgYW4gdXBkYXRlIHRvIFR3aXR0ZXIKCgkJLy8gZmV0Y2ggYW5kIGNsZWFuIG1lc3Nh
Z2UKCQkkbWVzc2FnZSA9IHN0cmlwX3RhZ3MoZ3BzKCdtZXNzYWdlJykpOwoJCS8vIFdlIG5l
ZWQgdG8gYWNjb3VudCBmb3IgdC5jbyBVUkwgc2hvcnRlbmluZyBpbiBvdXIgY291bnQgKDIy
IGNoYXJhY3RlcnMgZm9yIGEgVVJMLCAyMyBpZiBodHRwcykuCgkJJHVybFBhdHRlcm4gPSAi
LyhodHRwfGh0dHBzKTpcL1wvW1x3LV0rKFwuW1x3LV0rKSsoW1x3LixAP149JSZhbXA7Olwv
fisjLV0qW1x3QD9ePSUmYW1wO1wvfisjLV0pPy8iOwoJCSR0bXBNZXNzYWdlID0gcHJlZ19y
ZXBsYWNlKCR1cmxQYXR0ZXJuLCAiJDF4eHh4eHh4eHh4eHh4eHh4eHgiLCAkbWVzc2FnZSk7
CgkJJGNvdW50ID0gc3RybGVuKCR0bXBNZXNzYWdlKTsKCQl1bnNldCgkdG1wTWVzc2FnZSk7
CgoJCWlmICgkY291bnQ8PTE0MCAmJiAkY291bnQ+MCkgeyAvLyBwb3N0IHVwZGF0ZQoJCQkk
cmVzdWx0ID0gJHR3aXQtPnBvc3QoJ3N0YXR1c2VzL3VwZGF0ZScsIGFycmF5KCdzdGF0dXMn
ID0+ICRtZXNzYWdlKSk7CgkJfSBlbHNlIHsgLy8gbWVzc2FnZSB0b28gbG9uZywgSmF2YVNj
cmlwdCBpbnRlcmZhY2Ugc2hvdWxkIHByZXZlbnQgdGhpcwoJCQkkcmVzdWx0ID0gZmFsc2U7
CgkJfQoKCQlwYWdldG9wKCdUd2l0dGVyJywKCQkJKCgkcmVzdWx0IT1mYWxzZSk/J1R3aXR0
ZXIgdXBkYXRlZCc6J0Vycm9yIHVwZGF0aW5nIFR3aXR0ZXInKSk7CgoJfSBlbHNlaWYgKCRz
dGVwPT0iZGVsZXRlIikgeyAvLyBkZWxldGUgYW4gdXBkYXRlIGZyb20gVHdpdHRlcgoKCQkk
aWQgPSBzdHJpcF90YWdzKGdwcygnaWQnKSk7CgkJaWYgKCRpZCkgewoJCQkkdHdpdC0+ZGVs
ZXRlKCdzdGF0dXNlcy9kZXN0cm95LycuJGlkKTsKCQkJc2FmZV9kZWxldGUoJ2FyY190d2l0
dGVyJywidHdlZXRfaWQgPSAkaWQiKTsKCQl9CgoJCXBhZ2V0b3AoJ1R3aXR0ZXInLCdUd2l0
dGVyIHVwZGF0ZWQnKTsKCgl9IGVsc2UgewoKCQlwYWdldG9wKCdUd2l0dGVyJyk7CgoJfQoK
CS8vIFByZXBhcmUgSmF2YVNjcmlwdCB0byBjcmVhdGUgVHdpdHRlciB1cGRhdGUgaW50ZXJm
YWNlCgoJJGpzID0gJzxzY3JpcHQgbGFuZ3VhZ2U9ImphdmFzY3JpcHQiIHR5cGU9InRleHQv
amF2YXNjcmlwdCI+JzsKCSRqcy49IDw8PEpTCiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9u
KCl7Cgl2YXIgY291bnRlciA9ICQoJzxzcGFuPicsIHsKCQkndGV4dCcgOiAnMTQwJywKCQkn
aWQnIDogJ3R3ZWV0Y291bnQnCgl9KTsKCSQoJy5tZXNzYWdlJykuYXBwZW5kKGNvdW50ZXIp
OwoJdmFyIGNvdW50ZXJTdHlsZSA9ICdmb250LXdlaWdodDpib2xkO3BhZGRpbmctbGVmdDou
NWVtO2ZvbnQtc2l6ZToyZW07bGluZS1oZWlnaHQ6MS4yZW07JzsKCSQoJyN0d2VldGNvdW50
JykuYXR0cignc3R5bGUnLCBjb3VudGVyU3R5bGUrJ2NvbG9yOiNjY2M7Jyk7CgkkKCcjbWVz
c2FnZScpLmtleXVwKGZ1bmN0aW9uKCkgewoJCS8vIFdlIG5lZWQgdG8gYWNjb3VudCBmb3Ig
dC5jbyBVUkwgc2hvcnRlbmluZyBpbiBvdXIgY291bnQgKDIyIGNoYXJhY3RlcnMgZm9yIGEg
VVJMLCAyMyBpZiBodHRwcykuCgkJdmFyIG1lc3NhZ2UgPSAkKCcjbWVzc2FnZScpLnZhbCgp
OwoJCXZhciB1cmxQYXR0ZXJuID0gLyhodHRwfGh0dHBzKTpcL1wvW1x3LV0rKFwuW1x3LV0r
KSsoW1x3LixAP149JSZhbXA7OlwvfisjLV0qW1x3QD9ePSUmYW1wO1wvfisjLV0pPy87CgkJ
bWVzc2FnZSA9IG1lc3NhZ2UucmVwbGFjZSh1cmxQYXR0ZXJuLCAnJDF4eHh4eHh4eHh4eHh4
eHh4eHgnKTsKCQl2YXIgY291bnQgPSAxNDAtbWVzc2FnZS5sZW5ndGg7CgkJJCgnI3R3ZWV0
Y291bnQnKS5odG1sKGNvdW50KycnKTsgLy8gaGFjayB0byBmb3JjZSBvdXRwdXQgb2YgMAoJ
CWlmIChjb3VudDwwKSB7CgkJCSQoJ2lucHV0LnB1Ymxpc2gnKS5wcm9wKCdkaXNhYmxlZCcs
ICdkaXNhYmxlZCcpOwoJCX0gZWxzZSB7CgkJCSQoJ2lucHV0LnB1Ymxpc2gnKS5wcm9wKCdk
aXNhYmxlZCcsICcnKTsKCQl9CgkJaWYgKGNvdW50PDApIHsKCQkJJCgnI3R3ZWV0Y291bnQn
KS5hdHRyKCdzdHlsZScsIGNvdW50ZXJTdHlsZSsnY29sb3I6I2YwMDsnKTsKCQl9IGVsc2Ug
aWYgKGNvdW50PDEwKSB7CgkJCSQoJyN0d2VldGNvdW50JykuYXR0cignc3R5bGUnLCBjb3Vu
dGVyU3R5bGUrJ2NvbG9yOiMwMDA7Jyk7CgkJfSBlbHNlIHsKCQkJJCgnI3R3ZWV0Y291bnQn
KS5hdHRyKCdzdHlsZScsIGNvdW50ZXJTdHlsZSsnY29sb3I6I2NjYzsnKTsKCQl9Cgl9KQp9
KTsKSlM7CgkkanMuPSAiPC9zY3JpcHQ+IjsKCgkkb3V0ID0gJyc7CgkkdHdlZXRzID0gJHR3
aXQtPmdldCgnc3RhdHVzZXMvdXNlcl90aW1lbGluZScKCQksIGFycmF5KCdzY3JlZW5fbmFt
ZSc9PiRwcmVmc1snYXJjX3R3aXR0ZXJfdXNlciddLCdjb3VudCc9PjI1KSk7CglpZiAoJHR3
ZWV0cykgZm9yZWFjaCAoJHR3ZWV0cyBhcyAkdHdlZXQpIHsKCQkkdGltZSA9IHN0cnRvdGlt
ZShodG1sZW50aXRpZXMoJHR3ZWV0LT5jcmVhdGVkX2F0KSk7CgkJJGRhdGUgPSBzYWZlX3N0
cmZ0aW1lKCRwcmVmc1snYXJjaGl2ZV9kYXRlZm9ybWF0J10sJHRpbWUpOwoJCSRsaW5rcyA9
IGZhbHNlOwoJCWlmIChpc3NldCgkdHdlZXQtPmVudGl0aWVzLT51cmxzKSkgewoJCQkkbGlu
a3MgPSBhcnJheSgpOwoJCQlmb3JlYWNoICgkdHdlZXQtPmVudGl0aWVzLT51cmxzIGFzICR1
cmwpIHsKCQkJCSRsaW5rc1skdXJsLT51cmxdID0gYXJyYXkoCgkJCQkJJ2V4cGFuZGVkX3Vy
bCcgPT4gJHVybC0+ZXhwYW5kZWRfdXJsLAoJCQkJCSdkaXNwbGF5X3VybCcgPT4gJHVybC0+
ZGlzcGxheV91cmwKCQkJCSk7CgkJCX0KCQl9CgkJJG91dC49IHRyKHRkKCRkYXRlLCdzcGFu
JykKCQkJLnRkKGFyY19Ud2l0dGVyOjptYWtlTGlua3MoaHRtbGVudGl0aWVzKCR0d2VldC0+
dGV4dAoJCQkJLCBFTlRfUVVPVEVTLCdVVEYtOCcpLCAkbGlua3MsIHRydWUpKQoJCQkudGQo
ZExpbmsoJ2FyY19hZG1pbl90d2l0dGVyJywnZGVsZXRlJywnaWQnLCR0d2VldC0+aWRfc3Ry
LCcnKSkKCQkpOwoJfQoKCSRmaWVsZHMgPSBhcnJheSgKCScnID0+IGFycmF5KAoJICAnbWVz
c2FnZScgPT4gYXJyYXkoCgkJJ2xhYmVsJyA9PiAnVXBkYXRlIFR3aXR0ZXInLAoJCSd0eXBl
JyA9PiAndGV4dGFyZWEnLAoJCSd2YWx1ZScgPT4gJycKCSAgKQoJKQoJKTsKCgkkcHJvZmls
ZSA9ICc8aW1nIHNyYz0iJy4kdHdpdHRlclVzZXItPnByb2ZpbGVfaW1hZ2VfdXJsLiciIGFs
dD0iVHdpdHRlciBhdmF0YXIiIHN0eWxlPSJmbG9hdDpsZWZ0OyBtYXJnaW4tcmlnaHQ6IDFl
bSIgLz4nCgkuZ3JhZihocmVmKCR0d2l0dGVyVXNlci0+bmFtZSwkdHdpdHRlclVzZXJVUkwp
LCcgc3R5bGU9ImZvbnQtc2l6ZToxLjJlbTtmb250LXdlaWdodDpib2xkOyInKQoJLmdyYWYo
aHJlZigkdHdpdHRlclVzZXItPmZyaWVuZHNfY291bnQuJyBmb2xsb3dpbmcnLCR0d2l0dGVy
VXNlclVSTC4nL2ZvbGxvd2luZycpCgkuJywgJy5ocmVmKCR0d2l0dGVyVXNlci0+Zm9sbG93
ZXJzX2NvdW50LicgZm9sbG93ZXJzJywkdHdpdHRlclVzZXJVUkwuJy9mb2xsb3dlcnMnKQoJ
LicsICcuaHJlZigkdHdpdHRlclVzZXItPnN0YXR1c2VzX2NvdW50LicgdXBkYXRlcycsJHR3
aXR0ZXJVc2VyVVJMKSk7CgoJJGZvcm0gPSBfYXJjX3R3aXR0ZXJfZm9ybV9idWlsZGVyKCRm
aWVsZHMpCgkuZUlucHV0KCdhcmNfYWRtaW5fdHdpdHRlcicpCgkuc0lucHV0KCd0d2VldCcp
OwogICRmb3JtIC49ICc8cD4nLmZJbnB1dCgnc3VibWl0JywgJ1N1Ym1pdCcsIGdUeHQoJ1Vw
ZGF0ZScpLCAncHVibGlzaCcpLic8L3A+JzsKCiAgJGh0bWwgPSAiPGgxIGNsYXNzPSd0eHAt
aGVhZGluZyc+VFhQIFR3ZWV0PC9oMT4iCgkuIjxwIGNsYXNzPSduYXYtdGVydGlhcnknPiIK
CS4iPGEgaHJlZj0nLi8/ZXZlbnQ9YXJjX2FkbWluX3R3aXR0ZXInIGNsYXNzPSduYXZsaW5r
LWFjdGl2ZSc+VHdpdHRlcjwvYT48YSBocmVmPScuLz9ldmVudD1wbHVnaW5fcHJlZnMuYXJj
X3R3aXR0ZXInIGNsYXNzPSduYXZsaW5rJz5PcHRpb25zPC9hPiIKCS4iPC9wPiI7CgoJJGh0
bWwgLj0gIjxkaXYgY2xhc3M9J3RleHQtY29sdW1uJz4iLiRwcm9maWxlLiI8L2Rpdj4iCgku
IjxiciBzdHlsZT0nY2xlYXI6Ym90aCcgLz4iCgkuZm9ybSgiPGRpdiBjbGFzcz0ncGx1Z2lu
LWNvbHVtbic+Ii4kZm9ybS4iPC9kaXY+Ii5icik7CgoJLy8gQXR0YWNoIHJlY2VudCBUd2l0
dGVyIHVwZGF0ZXMKCgkkaHRtbC49ICI8ZGl2IGNsYXNzPSd0eHAtbGlzdHRhYmxlcyc+IgoJ
LnN0YXJ0VGFibGUoJ2FyY190d2l0dGVyX3RpbWVsaW5lJywnJywndHhwLWxpc3QnKS4kb3V0
LmVuZFRhYmxlKCkKCS4iPC9kaXY+IjsKCgkvLyBPdXRwdXQgSmF2YVNjcmlwdCBhbmQgSFRN
TAoKCWVjaG8gJGpzLiRodG1sOwp9CgovLyBBZGQgVHdpdHRlciBvcHRpb25zIHRvIGFydGlj
bGUgYXJ0aWNsZSBzY3JlZW4KZnVuY3Rpb24gYXJjX2FwcGVuZF90d2l0dGVyKCRldmVudCwg
JHN0ZXAsICRkYXRhLCAkcnMxKQp7CglnbG9iYWwgJHByZWZzLCAkYXJjX3R3aXR0ZXIsICRh
cHBfbW9kZTsKCgkkcHJlZml4ID0gdHJpbShncHMoJ2FyY190d2l0dGVyX3ByZWZpeCcpKTsK
CSRwcmVmaXggPSAoJHByZWZpeCkgPyAkcHJlZml4IDogJHByZWZzWydhcmNfdHdpdHRlcl9w
cmVmaXgnXTsKCSRzdWZmaXggPSB0cmltKGdwcygnYXJjX3R3aXR0ZXJfc3VmZml4JykpOwoJ
JHN1ZmZpeCA9ICgkc3VmZml4KSA/ICRzdWZmaXggOiAkcHJlZnNbJ2FyY190d2l0dGVyX3N1
ZmZpeCddOwoKCWlmICgkcnMxWydJRCddKSB7CgkJJHNxbCA9ICJTRUxFQ1QgdHdlZXRfaWQs
dHdlZXQgRlJPTSAiLlBGWC4iYXJjX3R3aXR0ZXIgV0hFUkUgYXJ0aWNsZV9pZD0iLiRyczFb
J0lEJ10uIjsiOwoJCSRyczIgPSBzYWZlX3F1ZXJ5KCRzcWwpOyAkcnMyID0gbmV4dFJvdygk
cnMyKTsKCX0gZWxzZSB7IC8vIG5ldyBhcnRpY2xlCgkJJHJzMiA9ICcnOwoJfQoKCWlmICgk
YXBwX21vZGUgPT0gJ2FzeW5jJykKCXsKCSBzZW5kX3NjcmlwdF9yZXNwb25zZSgnJCgiI2Fy
Y190d2l0dGVyIikucmVtb3ZlKCk7Jyk7Cgl9CgoJaWYgKCRyczFbJ0lEJ10gJiYgJHJzMlsn
dHdlZXRfaWQnXSkgewoJCSRjb250ZW50ID0gdGFnKGFyY19Ud2l0dGVyOjptYWtlTGlua3Mo
JHJzMlsndHdlZXQnXSksJ3AnKTsKCQlyZXR1cm4gJGRhdGEuZmllbGRzZXQoJGNvbnRlbnQs
ICdUd2l0dGVyIHVwZGF0ZScsICdhcmNfdHdpdHRlcicpOwoJfSBlbHNlIHsKCQkkdmFyID0g
Z3BzKCdhcmNfdHdlZXRfdGhpcycpOwoJCSR2YXIgPSAoJHJzMVsnSUQnXSYmISR2YXIpID8g
MCA6ICRwcmVmc1snYXJjX3R3aXR0ZXJfdHdlZXRfZGVmYXVsdCddOwoJCSRjb250ZW50ICA9
IHRhZyh5ZXNub1JhZGlvKCdhcmNfdHdlZXRfdGhpcycsICR2YXIsICcnLCAnYXJjX3R3ZWV0
X3RoaXMnKSwncCcpOwoJCSRjb250ZW50IC49IHRhZyhocmVmKCdPcHRpb25zJywnI2FyY190
d2l0dGVyX29wdGlvbnMnLCAnIG9uY2xpY2s9IiQoXCcjYXJjX3R3aXR0ZXJfb3B0aW9uc1wn
KS50b2dnbGUoKTsgcmV0dXJuIGZhbHNlOyInKSwncCcsJyBzdHlsZT0ibWFyZ2luLXRvcDo1
cHg7IicpOwoJCSRjb250ZW50IC49IHRhZyh0YWcodGFnKCdUd2VldCBwcmVmaXgnLCdsYWJl
bCcsICcgZm9yPSJhcmNfdHdpdHRlcl9wcmVmaXgiJykKCQkJLmZJbnB1dCgndGV4dCcsJ2Fy
Y190d2l0dGVyX3ByZWZpeCcsJHByZWZpeCwnZWRpdCcsJycsJycsJzIyJywnJywnYXJjX3R3
aXR0ZXJfcHJlZml4JyksJ3AnKQoJCQkudGFnKHRhZygnVHdlZXQgc3VmZml4IChlZyAjaGFz
aHRhZ3MpJywnbGFiZWwnLCAnIGZvcj0iYXJjX3R3aXR0ZXJfc3VmZml4IicpCgkJCS5mSW5w
dXQoJ3RleHQnLCdhcmNfdHdpdHRlcl9zdWZmaXgnLCRzdWZmaXgsJ2VkaXQnLCcnLCcnLCcy
MicsJycsJ2FyY190d2l0dGVyX3N1ZmZpeCcpLCdwJykKCQkJLCdkaXYnLCcgaWQ9ImFyY190
d2l0dGVyX29wdGlvbnMiIGNsYXNzPSJ0b2dnbGUiIHN0eWxlPSJkaXNwbGF5Om5vbmUiJyk7
CgkJaWYgKGlzc2V0KCRhcmNfdHdpdHRlclsnZXJyb3InXSkpIHsKCQkJJGNvbnRlbnQgLj0g
JzxwPicuJGFyY190d2l0dGVyWydlcnJvciddLic8L3A+JzsKCQl9CgkJcmV0dXJuICRkYXRh
LmZpZWxkc2V0KCRjb250ZW50LCAnVXBkYXRlIFR3aXR0ZXInLCAnYXJjX3R3aXR0ZXInKTsK
CX0KCn0KCi8vIFVwZGF0ZSBUd2l0dGVyIHdpdGggcG9zdGVkIGFydGljbGUKZnVuY3Rpb24g
YXJjX2FydGljbGVfdHdlZXQoJGV2ZW50LCRzdGVwKQp7CglnbG9iYWwgJHByZWZzLCAkYXJj
X3R3aXR0ZXIsICRhcmNfdHdpdHRlcl9jb25zdW1lcktleQoJCSwgJGFyY190d2l0dGVyX2Nv
bnN1bWVyU2VjcmV0OwoKCSRhcnRpY2xlX2lkID0gZW1wdHkoJEdMT0JBTFNbJ0lEJ10pID8g
Z3BzKCdJRCcpIDogJEdMT0JBTFNbJ0lEJ107CglpZiAoIWVtcHR5KCRhcnRpY2xlX2lkKSkg
ewoKCQlpbmNsdWRlX29uY2UgdHhwYXRoLicvcHVibGlzaC90YWdoYW5kbGVycy5waHAnOwoK
CQkkYXJ0aWNsZSA9IHNhZmVfcm93KCJJRCwgVGl0bGUsIFNlY3Rpb24sIFBvc3RlZCIsICd0
ZXh0cGF0dGVybicsCgkJCSJJRD17JGFydGljbGVfaWR9IEFORCBTdGF0dXM9NCBBTkQgbm93
KCk+PVBvc3RlZCIpOwoKCQlpZiAoJGFydGljbGUgJiYgZ3BzKCdhcmNfdHdlZXRfdGhpcycp
KSB7IC8vIHR3ZWV0IGFydGljbGUKCgkJCS8vIE5lZWQgdG8gbWFudWFsbHkgdXBkYXRlIHRo
ZSAnVVJMIG9ubHkgdGl0bGUnIGJlZm9yZSBidWlsZGluZyB0aGUKCQkJLy8gVVJMCgkJCSRh
cnRpY2xlWyd1cmxfdGl0bGUnXSA9IGdwcygndXJsX3RpdGxlJyk7CgkJCS8vIE1ha2Ugc2hv
cnQgVVJMCgkJCSR1cmwgPSBwZXJtbGlua3VybCgkYXJ0aWNsZSk7CgkJCSRzaG9ydF91cmwg
PSBhcmNfc2hvcnRlbl91cmwoJHVybCwkcHJlZnNbJ2FyY190d2l0dGVyX3VybF9tZXRob2Qn
XSwKCQkJCWFycmF5KCdpZCc9PiRhcnRpY2xlX2lkKSk7CgoJCQlpZiAoISRzaG9ydF91cmwp
IHsgLy8gRmFpbGVkIHRvIG9idGFpbiBhIHNob3J0ZW5lZCBVUkwsIGRvIG5vdCB0d2VldCEK
CQkJCSRhcmNfdHdpdHRlclsnZXJyb3InXSA9ICdVbmFibGUgdG8gb2J0YWluIGEgc2hvcnQg
VVJMIGZvciB0aGlzIGFydGljbGUuJzsKCgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCgkJCS8v
IENvbnN0cnVjdCBUd2l0dGVyIHVwZGF0ZQoJCQkkcHJlZml4ICA9IHRyaW0oZ3BzKCdhcmNf
dHdpdHRlcl9wcmVmaXgnKSk7CgkJCSRwcmVfbGVuID0gc3RybGVuKCRwcmVmaXgpOwoJCQkk
cHJlZml4ICA9ICgkcHJlZml4ICYmICRwcmVfbGVuPD0yMCkgPyAkcHJlZml4LicgJyA6ICcn
OwoJCQkkc3VmZml4ICA9IHRyaW0oZ3BzKCdhcmNfdHdpdHRlcl9zdWZmaXgnKSk7CgkJCSRz
dWZfbGVuID0gc3RybGVuKCRzdWZmaXgpOwoJCQkkc3VmZml4ICA9ICgkc3VmZml4ICYmICRz
dWZfbGVuPD00MCkgPyAnICcuJHN1ZmZpeCA6ICcnOwoJCQkkdXJsX2xlbiA9IHByZWdfbWF0
Y2goJ3xeaHR0cHN8aScsICRzaG9ydF91cmwpID8gMjMgOiAyMjsgLy8gY291bnQgVVJMIGxl
bmd0aCArIDEgZm9yIHByZWZpeGVkIHNwYWNlCgkJCWlmICgkcHJlZml4KSB7CgkJCQkkcHJl
X2xlbiArPSAxOwoJCQl9CgkJCWlmICgkc3VmZml4KSB7CgkJCQkkc3VmX2xlbiArPSAxOwoJ
CQl9CgkJCWlmICgoc3RybGVuKCRhcnRpY2xlWydUaXRsZSddKSskdXJsX2xlbiskcHJlX2xl
biskc3VmX2xlbik+MTQwKSB7CgkJCQkkYXJ0aWNsZVsnVGl0bGUnXSA9IHN1YnN0cigkYXJ0
aWNsZVsnVGl0bGUnXSwwLDEzNS0kdXJsX2xlbi0kcHJlX2xlbi0kc3VmX2xlbikuJy4uLic7
CgkJCX0KCQkJJHR3ZWV0ID0gJHByZWZpeC4kYXJ0aWNsZVsnVGl0bGUnXS4iICIuJHNob3J0
X3VybC4kc3VmZml4OwoKCQkJLy8gVXBkYXRlIFR3aXR0ZXIKCQkJJHR3aXQgPSBuZXcgYXJj
X3R3aXR0ZXIoJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5CgkJCQksICRhcmNfdHdpdHRlcl9j
b25zdW1lclNlY3JldCwgJHByZWZzWydhcmNfdHdpdHRlcl9hY2Nlc3NUb2tlbiddCgkJCQks
ICRwcmVmc1snYXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW5TZWNyZXQnXSk7CgkJCSRyZXN1bHQg
PSAkdHdpdC0+cG9zdCgnc3RhdHVzZXMvdXBkYXRlJywgYXJyYXkoJ3N0YXR1cycgPT4gJHR3
ZWV0KSk7CgoJCQkkdHdlZXRfaWQgPSAoaXNfb2JqZWN0KCRyZXN1bHQpKSA/ICRyZXN1bHQt
PmlkX3N0ciA6IDA7CgoJCQlpZiAoJHR3ZWV0X2lkKSB7CgoJCQkJJHR3ZWV0ID0gYWRkc2xh
c2hlcygkdHdlZXQpOwoKCQkJCS8vIElmIHdlJ3JlIG5vdCB1c2luZyBhIFVSTCBzaG9ydGVu
ZXIgZG9uJ3Qgc3RvcmUgdGhlIHNob3J0IFVSTC4KCQkJCWlmICgkcHJlZnNbJ2FyY190d2l0
dGVyX3VybF9tZXRob2QnXT09J2Z1bGwnKSB7CgkJCQkJJHNob3J0X3VybCA9IG51bGw7CgkJ
CQl9CgoJCQkJLy8gdXBkYXRlIGFyY190d2l0dGVyIHRhYmxlIHdpdGggdHdlZXQKCQkJCSRz
cWwgPSAiSU5TRVJUIElOVE8gIi5QRlguImFyY190d2l0dGVyIChhcnRpY2xlX2lkLHR3ZWV0
X2lkLHR3ZWV0LHRpbnl1cmwpICI7CgkJCQkkc3FsLj0gIlZBTFVFUygkYXJ0aWNsZV9pZCwk
dHdlZXRfaWQsXCIkdHdlZXRcIiwnJHNob3J0X3VybCcpOyI7CgkJCQlzYWZlX3F1ZXJ5KCRz
cWwpOwoKCQkJCXJldHVybiB0cnVlOwoKCQkJfSBlbHNlIHsKCgkJCQkkYXJjX3R3aXR0ZXJb
J2Vycm9yJ10gPSAnVHdpdHRlciByZXNwb25zZTogJwoJCQkJCS4kdHdpdC0+aHR0cF9jb2Rl
OwoJCQkJcmV0dXJuIGZhbHNlOwoKCQkJfQoKCQl9CgoJfQoKCXJldHVybiBmYWxzZTsKCn0K
Ci8qCiAqIFNob3J0ZW4gVVJMcyB1c2luZyB2YXJpb3VzIG1ldGhvZHMKICovCgpmdW5jdGlv
biBhcmNfc2hvcnRlbl91cmwoJHVybCwgJG1ldGhvZD0nJywgJGF0dHM9YXJyYXkoKSkKewog
IGdsb2JhbCAkcHJlZnM7CgogICRjaCA9IGN1cmxfaW5pdCgpOwogIGN1cmxfc2V0b3B0KCRj
aCwgQ1VSTE9QVF9IRUFERVIsIDApOwogIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRV
Uk5UUkFOU0ZFUiwgdHJ1ZSk7CiAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1RJTUVPVVQs
IDEwKTsKCiAgc3dpdGNoICgkbWV0aG9kKSB7CgljYXNlICdzbWQnOiAvLyBjcmVhdGUgYSBz
aG9ydGVuZWQgVVJMIHVzaW5nIFNNRCBTaG9ydCBVUkwKCQlyZXR1cm4gKCRhdHRzWydpZCdd
KSA/IGh1LiRhdHRzWydpZCddIDogZmFsc2U7IGJyZWFrOwoJY2FzZSAnYXJjX3R3aXR0ZXIn
OiAvLyBuYXRpdmUgVVJMIHNob3J0ZW5pbmcKCgkJcmV0dXJuICgkYXR0c1snaWQnXSkgPyBQ
Uk9UT0NPTC4kcHJlZnNbJ2FyY19zaG9ydF9zaXRlX3VybCddLicvJy4kYXR0c1snaWQnXSA6
IGZhbHNlOwoJCWJyZWFrOwoKCWNhc2UgJ2lzZ2QnOgoKCQkkdSA9ICdodHRwOi8vaXMuZ2Qv
YXBpLnBocD9sb25ndXJsPScudXJsZW5jb2RlKCR1cmwpOwoJCWN1cmxfc2V0b3B0KCRjaCwg
Q1VSTE9QVF9VUkwsICR1KTsKCgkJJHRpbnl1cmwgPSBjdXJsX2V4ZWMoJGNoKTsKCQlpZiAo
JHRpbnl1cmwhPSdFcnJvcicgJiYgJHRpbnl1cmwhPScnKSB7CgkJCXJldHVybiAkdGlueXVy
bDsKCQl9IGVsc2UgewoJCQl0cmlnZ2VyX2Vycm9yKCdhcmNfdHdpdHRlciBmYWlsZWQgdG8g
Z2V0IGEgaXMuZ2QgVVJMIGZvciAnCgkJCQkuJHVybCxFX1VTRVJfV0FSTklORyk7CgkJfQoJ
CWJyZWFrOwoKCWNhc2UgJ3Rpbnl1cmwnOiAvLyBjcmVhdGUgYSBzaG9ydGVuZWQgVVJMIHVz
aW5nIFRpbnlVUkwKCgkJJHUgPSAnaHR0cDovL3Rpbnl1cmwuY29tL2FwaS1jcmVhdGUucGhw
P3VybD0nLnVybGVuY29kZSgkdXJsKTsKCQljdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVJM
LCAkdSk7CgkJJHRpbnl1cmwgPSBjdXJsX2V4ZWMoJGNoKTsKCQlpZiAoJHRpbnl1cmwhPSdF
cnJvcicgJiYgJHRpbnl1cmwhPScnKSB7CgkJCXJldHVybiAkdGlueXVybDsKCQl9IGVsc2Ug
ewoJCQl0cmlnZ2VyX2Vycm9yKCdhcmNfdHdpdHRlciBmYWlsZWQgdG8gZ2V0IGEgVGlueVVS
TCBmb3IgJy4kdXJsLEVfVVNFUl9XQVJOSU5HKTsKCQl9CgoJZGVmYXVsdDoKCgkJcmV0dXJu
ICR1cmw7CgogIH0KCiAgcmV0dXJuIGZhbHNlOyAvLyBmYWlsCgp9CgovKgogKiBTaG9ydGVu
ZWQgVVJMIHJlZGlyZWN0IGJhc2VkIG9uIHNtZF9zaG9ydF91cmwKICovCmZ1bmN0aW9uIGFy
Y19zaG9ydF91cmxfcmVkaXJlY3QoJGV2ZW50LCAkc3RlcCkgewogIGdsb2JhbCAkcHJlZnM7
CgogICRoYXZlX2lkID0gMDsKCiAgLy8gQ2hlY2sgaWYgdGhlcmUgaXMgYW4gYXZhaWxhYmxl
IHNob3J0IHNpdGUgdXJsIGFuZCBpZiBpdCBpcyBiZWluZyB1c2VkIGluCiAgLy8gdGhpcyBp
bnN0YW5jZQogICRzaG9ydF9zaXRlX3VybCA9ICRwcmVmc1snYXJjX3Nob3J0X3NpdGVfdXJs
J107CiAgaWYgKCRzaG9ydF9zaXRlX3VybCkgewoJJHNob3J0X3NpdGVfdXJsID0gUFJPVE9D
T0wuJHNob3J0X3NpdGVfdXJsLicvJzsKCSR1cmxfcGFydHMgPSBwYXJzZV91cmwoJHNob3J0
X3NpdGVfdXJsKTsKCSRyZSA9ICcjXicuJHVybF9wYXJ0c1sncGF0aCddLicoWzAtOV0uKikj
JzsKCSRoYXZlX2lkID0gcHJlZ19tYXRjaCgkcmUsICRfU0VSVkVSWydSRVFVRVNUX1VSSSdd
LCAkbSk7CiAgfQoKICAvLyBGYWxsIGJhY2sgdG8gc3RhbmRhcmQgc2l0ZSB1cmwgKHNtZF9z
aG9ydF91cmwgYmVoYXZpb3VyKQogIGlmICgkaGF2ZV9pZCkgewoJJHVybF9wYXJ0cyA9IHBh
cnNlX3VybChodSk7CgkkcmUgPSAnI14nLiR1cmxfcGFydHNbJ3BhdGgnXS4nKFswLTldLiop
Iyc7CgkkaGF2ZV9pZCA9IHByZWdfbWF0Y2goJHJlLCAkX1NFUlZFUlsnUkVRVUVTVF9VUkkn
XSwgJG0pOwogIH0KCiAgLy8gRG8gdGhlIHJlZGlyZWN0IGlmIHdlJ3ZlIGdvdCBhbiBhcnRp
Y2xlIGlkCiAgaWYgKCRoYXZlX2lkKSB7CgkkaWQgPSAkbVsxXTsKCSRwZXJtbGluayA9IHBl
cm1saW5rdXJsX2lkKCRpZCk7CgoJaWYgKCRwZXJtbGluaykgewoJICBvYl9lbmRfY2xlYW4o
KTsKCgkgIC8vIFN0dXBpZCwgb3ZlciB0aGUgdG9wIGhlYWRlciBzZXR0aW5nIGZvciBJRQoJ
ICBoZWFkZXIoIlN0YXR1czogMzAxIik7CgkgIGhlYWRlcigiSFRUUC8xLjAgMzAxIE1vdmVk
IFBlcm1hbmVudGx5Iik7CgkgIGhlYWRlcigiTG9jYXRpb246ICIuJHBlcm1saW5rLCBUUlVF
LCAzMDEpOwoKCSAgLy8gSW4gY2FzZSB0aGUgaGVhZGVyKCkgbWV0aG9kIGZhaWxzLCBmYWxs
IGJhY2sgb24gYSBjbGFzc2ljIHJlZGlyZWN0CgkgIGVjaG8gJzxodG1sPjxoZWFkPjxNRVRB
IEhUVFAtRVFVSVY9IlJlZnJlc2giIENPTlRFTlQ9IjA7VVJMPScKCQkuJHBlcm1saW5rLici
PjwvaGVhZD48Ym9keT48L2JvZHk+PC9odG1sPic7CgkgIGRpZSgpOwoJfQogIH0KCn0KCi8v
IEF1dG8gZW5hYmxlIHBsdWdpbiBvbiBpbnN0YWxsIChvcmlnaW5hbCBpZGVhIGJ5IE1pY2hh
ZWwgTWFuZnJlKQpmdW5jdGlvbiBfYXJjX3R3aXR0ZXJfYXV0b19lbmFibGUoJGV2ZW50LCAk
c3RlcCwgJHByZWZpeD0nYXJjX3R3aXR0ZXInKQp7CiAgJHBsdWdpbiA9IHN1YnN0cigkZXZl
bnQsIHN0cmxlbigncGx1Z2luX2xpZmVjeWNsZS4nKSk7CiAgaWYgKHN0cm5jbXAoJHBsdWdp
biwgJHByZWZpeCwgc3RybGVuKCRwcmVmaXgpKSA9PSAwKQogIHsKCXNhZmVfdXBkYXRlKCd0
eHBfcGx1Z2luJywgInN0YXR1cyA9IDEiLCAibmFtZSA9ICciIC4gZG9TbGFzaCgkcGx1Z2lu
KSAuICInIik7CiAgfQp9CgovKgogKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqLwoKY2xh
c3MgYXJjX3R3aXR0ZXIgZXh0ZW5kcyBUd2l0dGVyT0F1dGggewoJLy8gQ2FjaGluZyB2YXJp
YWJsZXMKCXByaXZhdGUgJF9jYWNoZSA9IHRydWU7Cglwcml2YXRlICRfY2FjaGVfZGlyID0g
Jy4vdG1wJzsKCXByaXZhdGUgJF9jYWNoZV90aW1lID0gMTgwMDsgLy8gMzAgbWludXRlIGNh
Y2hlCgoJZnVuY3Rpb24gX19jb25zdHJ1Y3QoJGNvbnN1bWVyX2tleSwgJGNvbnN1bWVyX3Nl
Y3JldCwgJG9hdXRoX3Rva2VuID0gTlVMTAoJCSwgJG9hdXRoX3Rva2VuX3NlY3JldCA9IE5V
TEwpCgl7CgkJcGFyZW50OjpfX2NvbnN0cnVjdCgkY29uc3VtZXJfa2V5LCAkY29uc3VtZXJf
c2VjcmV0LCAkb2F1dGhfdG9rZW4KCQkJLCAkb2F1dGhfdG9rZW5fc2VjcmV0KTsKCQkkdGhp
cy0+Zm9ybWF0ID0gJ2pzb24nOwoJCSR0aGlzLT50aW1lb3V0ID0gMTU7CgkJJHRoaXMtPmNv
bm5lY3R0aW1lb3V0ID0gMTU7Cgl9CgoJcHVibGljIGZ1bmN0aW9uIGNhbGxiYWNrVVJMKCRl
dmVudCwkc3RlcCkKCXsKCQlyZXR1cm4gcHJlZ19yZXBsYWNlKCcvXD8uKi8nLCAnJyxQUk9U
T0NPTC4kX1NFUlZFUlsnU0VSVkVSX05BTUUnXS4kX1NFUlZFUlsnUkVRVUVTVF9VUkknXSkK
CQkgIC4nP2V2ZW50PScuJGV2ZW50LicmYW1wO3N0ZXA9Jy4kc3RlcDsKCX0KCgkvLyBjcmVh
dGUgVHdpdHRlciBhbmQgZXh0ZXJuYWwgbGlua3MgaW4gdGV4dAoJcHVibGljIHN0YXRpYyBm
dW5jdGlvbiBtYWtlTGlua3MoJHRleHQsICR1cmxzID0gZmFsc2UsICRleHBhbmRlZFVybHMg
PSBmYWxzZSkKCXsKCQlpZiAoJHVybHMhPT1mYWxzZSkgewoKCQkJZm9yZWFjaCAoJHVybHMg
YXMgJHRjb1VybCA9PiAkdXJsKQoJCQl7CgkJCQlpZiAoISRleHBhbmRlZFVybHMpCgkJCQl7
CgkJCQkJJHVybFsnZXhwYW5kZWRfdXJsJ10gPSAkdGNvVXJsOwoJCQkJCSR1cmxbJ2Rpc3Bs
YXlfdXJsJ10gPSBwcmVnX3JlcGxhY2UoJ3xeaHR0cHM/OlwvXC98aScsICcnLCAkdGNvVXJs
KTsKCQkJCX0KCQkJCSR0ZXh0ID0gc3RyX3JlcGxhY2UoCgkJCQkJJHRjb1VybCwKCQkJCQki
PGEgaHJlZj0neyR1cmxbJ2V4cGFuZGVkX3VybCddfSc+eyR1cmxbJ2Rpc3BsYXlfdXJsJ119
PC9hPiIsCgkJCQkJJHRleHQKCQkJCSk7CgkJCX0KCgkJfQoJCWVsc2VpZiAoJHVybHMhPT1m
YWxzZSkKCQl7CgoJCX0KCQllbHNlCgkJewoJCQkkbGlua3MgPSBhcnJheSgKCQkJCScvXGIo
aHR0cHxodHRwc3xmdHApOlwvXC8oW0EtWjAtOV1bQS1aMC05Xy1dKig/OlwuW0EtWjAtOV1b
QS1aMC05Xy1dKikrKTo/KFxkKyk/XC8/KFtcL1x3K1wuXSspXGIvaScgPT4gIjxhIGhyZWY9
JyQwJyByZWw9J2V4dGVybmFsJz4kMDwvYT4iLAoJCQkJJy9cYihefFxzKXd3dy4oW2Etel9B
LVowLTldKykoKFwuW2Etel0rKSspXGIvaScgPT4gIjxhIGhyZWY9J2h0dHA6Ly93d3cuJDIk
MycgcmVsPSdleHRlcm5hbCc+d3d3LiQyJDM8L2E+IgoJCQkpOwoJCQkkdGV4dCA9IHByZWdf
cmVwbGFjZSgKCQkJCWFycmF5X2tleXMoJGxpbmtzKSwKCQkJCWFycmF5X3ZhbHVlcygkbGlu
a3MpLAoJCQkJJHRleHQKCQkJKTsKCQl9CgoJCSRsaW5rcyA9IGFycmF5KAoJCQknLyhefFxz
KS4/QChbYS16X0EtWjAtOV0rKS8nID0+ICIkMTxhIGhyZWY9J2h0dHA6Ly90d2l0dGVyLmNv
bS8kMicgcmVsPSdleHRlcm5hbCc+QCQyPC9hPiIsCgkJCScvKF58XHMpKFwjKFthLXpfQS1a
MC05Ol8tXSspKS8nID0+ICIkMTxhIGhyZWY9J2h0dHA6Ly90d2l0dGVyLmNvbS9zZWFyY2g/
cT0lMjMkMycgcmVsPSdleHRlcm5hbCc+JDI8L2E+IgoJCSk7CgkJcmV0dXJuIHByZWdfcmVw
bGFjZSgKCQkJYXJyYXlfa2V5cygkbGlua3MpLAoJCQlhcnJheV92YWx1ZXMoJGxpbmtzKSwK
CQkJJHRleHQKCQkpOwogIH0KCglwdWJsaWMgZnVuY3Rpb24gZ2V0KCR1cmwsICRwYXJhbXMg
PSBhcnJheSgpKQoJewoJCSRhcGlfdXJsID0gbWQ1KCR1cmwudXJsZW5jb2RlKHNlcmlhbGl6
ZSgkcGFyYW1zKSkpOwoJCSRkYXRhID0gJyc7CgoJCWlmICgkdGhpcy0+X2NhY2hlKSB7IC8v
IGNoZWNrIGZvciBjYWNoZWQganNvbgoKCQkJJGRhdGEgPSAkdGhpcy0+X3JldHJpZXZlQ2Fj
aGUoJGFwaV91cmwpOwoKCQl9CgkJaWYgKGVtcHR5KCRkYXRhKSkgewoJCQkkZGF0YSA9IHBh
cmVudDo6Z2V0KCR1cmwsICRwYXJhbXMpOyAvLyBkYXRhIGFscmVhZHkganNvbl9kZWNvZGUn
ZAoJCQlpZiAoJHRoaXMtPmh0dHBfY29kZT09PTIwMCAmJiAkZW5jb2RlZF9kYXRhPWpzb25f
ZW5jb2RlKCRkYXRhKSkgeyAvLyBzYXZlIGNhY2hlCgkJCQkkZmlsZSA9ICR0aGlzLT5fY2Fj
aGVfZGlyLicvJy4kYXBpX3VybDsKCQkJCWZpbGVfcHV0X2NvbnRlbnRzKCRmaWxlLCRlbmNv
ZGVkX2RhdGEsTE9DS19FWCk7CgkJCQlyZXR1cm4gJGRhdGE7CgkJCX0gZWxzZSB7IC8vIGZh
aWxlZCB0byByZXRyaWV2ZSBkYXRhIGZyb20gVHdpdHRlcgoKCQkJCWlmICgkdGhpcy0+X2Nh
Y2hlKSB7IC8vIGF0dGVtcHQgdG8gZm9yY2UgY2FjaGVkIGpzb24gcmV0dXJuCgoJCQkJCSRk
YXRhID0gJHRoaXMtPl9yZXRyaWV2ZUNhY2hlKCRhcGlfdXJsLHRydWUpOwoJCQkJCWlmICgk
ZGF0YSkgcmV0dXJuIGpzb25fZGVjb2RlKCRkYXRhKTsKCgkJCQl9CgoJCQkJcmV0dXJuIGZh
bHNlOwoKCQkJfQoJCX0gZWxzZSB7IC8vIHJldHVybiBjYWNoZWQganNvbgoJCQlyZXR1cm4g
anNvbl9kZWNvZGUoJGRhdGEpOwoJCX0KCX0gLy9lbmQgZ2V0KCkKCglmdW5jdGlvbiBwb3N0
KCR1cmwsICRwYXJhbXMgPSBhcnJheSgpKQoJewoJCSRkYXRhID0gcGFyZW50Ojpwb3N0KCR1
cmwsJHBhcmFtcyk7CgkJcmV0dXJuICRkYXRhOwoJfQoKCWZ1bmN0aW9uIGRlbGV0ZSgkdXJs
LCAkcGFyYW1zID0gYXJyYXkoKSkKCXsKCQkkZGF0YSA9IHBhcmVudDo6ZGVsZXRlKCR1cmws
JHBhcmFtcyk7CgkJcmV0dXJuICRkYXRhOwoJfQoKCS8vIENhY2hlIG1ldGhvZHMKCglwdWJs
aWMgZnVuY3Rpb24gc2V0Q2FjaGluZygkY2FjaGU9dHJ1ZSkKCXsKCQkkdGhpcy0+X2NhY2hl
ID0gKCRjYWNoZSkgPyB0cnVlIDogZmFsc2U7CgkJcmV0dXJuIHRydWU7Cgl9CgoJcHVibGlj
IGZ1bmN0aW9uIGNhY2hlRGlyKCRsb2MpCgl7CgkJJHRoaXMtPl9jYWNoZV9kaXIgPSAkbG9j
OwoJCXJldHVybiB0cnVlOwoJfQoKCXB1YmxpYyBmdW5jdGlvbiBjYWNoZVRpbWUoJG1pbnMp
Cgl7CgkJJHRoaXMtPl9jYWNoZV90aW1lID0gJG1pbnMqNjA7IC8vIGNvbnZlcnQgbWludXRl
cyBpbnRvIHNlY29uZHMKCQlyZXR1cm4gdHJ1ZTsKCX0KCglwcml2YXRlIGZ1bmN0aW9uIF9y
ZXRyaWV2ZUNhY2hlKCR1cmwsJG92ZXJpZGVfdGltZW91dD1mYWxzZSkKCXsKCQkkZmlsZSA9
ICR0aGlzLT5fY2FjaGVfZGlyLicvJy4kdXJsOwoJCWlmIChmaWxlX2V4aXN0cygkZmlsZSkp
IHsKCgkJCSRkaWZmID0gdGltZSgpIC0gZmlsZW10aW1lKCRmaWxlKTsKCQkJaWYgKCRvdmVy
aWRlX3RpbWVvdXQgfHwgJGRpZmYgPCAkdGhpcy0+X2NhY2hlX3RpbWUpIHsKCQkJCXJldHVy
biBmaWxlX2dldF9jb250ZW50cygkZmlsZSk7CgkJCX0gZWxzZSB7CgkJCQlyZXR1cm4gZmFs
c2U7CgkJCX0KCgkJfSBlbHNlIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCX0KfQoKLyoKICog
QWJyYWhhbSBXaWxsaWFtcyAoYWJyYWhhbUBhYnJhaC5hbSkgaHR0cDovL2FicmFoLmFtCiAq
CiAqIFRoZSBmaXJzdCBQSFAgTGlicmFyeSB0byBzdXBwb3J0IE9BdXRoIGZvciBUd2l0dGVy
J3MgUkVTVCBBUEkuCiAqLwoKLyoqCiAqIFR3aXR0ZXIgT0F1dGggY2xhc3MKICovCmNsYXNz
IFR3aXR0ZXJPQXV0aCB7CiAgLyogQ29udGFpbnMgdGhlIGxhc3QgSFRUUCBzdGF0dXMgY29k
ZSByZXR1cm5lZC4gKi8KICBwdWJsaWMgJGh0dHBfY29kZTsKICAvKiBDb250YWlucyB0aGUg
bGFzdCBBUEkgY2FsbC4gKi8KICBwdWJsaWMgJHVybDsKICAvKiBTZXQgdXAgdGhlIEFQSSBy
b290IFVSTC4gKi8KICBwdWJsaWMgJGhvc3QgPSAiaHR0cHM6Ly9hcGkudHdpdHRlci5jb20v
MS4xLyI7CiAgLyogU2V0IHRpbWVvdXQgZGVmYXVsdC4gKi8KICBwdWJsaWMgJHRpbWVvdXQg
PSAzMDsKICAvKiBTZXQgY29ubmVjdCB0aW1lb3V0LiAqLwogIHB1YmxpYyAkY29ubmVjdHRp
bWVvdXQgPSAzMDsKICAvKiBWZXJpZnkgU1NMIENlcnQuICovCiAgcHVibGljICRzc2xfdmVy
aWZ5cGVlciA9IEZBTFNFOwogIC8qIFJlc3BvbnMgZm9ybWF0LiAqLwogIHB1YmxpYyAkZm9y
bWF0ID0gJ2pzb24nOwogIC8qIERlY29kZSByZXR1cm5lZCBqc29uIGRhdGEuICovCiAgcHVi
bGljICRkZWNvZGVfanNvbiA9IFRSVUU7CiAgLyogQ29udGFpbnMgdGhlIGxhc3QgSFRUUCBo
ZWFkZXJzIHJldHVybmVkLiAqLwogIHB1YmxpYyAkaHR0cF9pbmZvOwogIC8qIFNldCB0aGUg
dXNlcmFnbmV0LiAqLwogIHB1YmxpYyAkdXNlcmFnZW50ID0gJ1R3aXR0ZXJPQXV0aCB2MC4y
LjAtYmV0YTInOwogIC8qIEltbWVkaWF0ZWx5IHJldHJ5IHRoZSBBUEkgY2FsbCBpZiB0aGUg
cmVzcG9uc2Ugd2FzIG5vdCBzdWNjZXNzZnVsLiAqLwogIC8vcHVibGljICRyZXRyeSA9IFRS
VUU7CgogIC8qKgogICAqIFNldCBBUEkgVVJMUwogICAqLwogIGZ1bmN0aW9uIGFjY2Vzc1Rv
a2VuVVJMKCkgIHsgcmV0dXJuICdodHRwczovL2FwaS50d2l0dGVyLmNvbS9vYXV0aC9hY2Nl
c3NfdG9rZW4nOyB9CiAgZnVuY3Rpb24gYXV0aGVudGljYXRlVVJMKCkgeyByZXR1cm4gJ2h0
dHBzOi8vYXBpLnR3aXR0ZXIuY29tL29hdXRoL2F1dGhlbnRpY2F0ZSc7IH0KICBmdW5jdGlv
biBhdXRob3JpemVVUkwoKSAgICB7IHJldHVybiAnaHR0cHM6Ly9hcGkudHdpdHRlci5jb20v
b2F1dGgvYXV0aG9yaXplJzsgfQogIGZ1bmN0aW9uIHJlcXVlc3RUb2tlblVSTCgpIHsgcmV0
dXJuICdodHRwczovL2FwaS50d2l0dGVyLmNvbS9vYXV0aC9yZXF1ZXN0X3Rva2VuJzsgfQoK
ICAvKioKICAgKiBEZWJ1ZyBoZWxwZXJzCiAgICovCiAgZnVuY3Rpb24gbGFzdFN0YXR1c0Nv
ZGUoKSB7IHJldHVybiAkdGhpcy0+aHR0cF9zdGF0dXM7IH0KICBmdW5jdGlvbiBsYXN0QVBJ
Q2FsbCgpIHsgcmV0dXJuICR0aGlzLT5sYXN0X2FwaV9jYWxsOyB9CgogIC8qKgogICAqIGNv
bnN0cnVjdCBUd2l0dGVyT0F1dGggb2JqZWN0CiAgICovCiAgZnVuY3Rpb24gX19jb25zdHJ1
Y3QoJGNvbnN1bWVyX2tleSwgJGNvbnN1bWVyX3NlY3JldCwgJG9hdXRoX3Rva2VuID0gTlVM
TCwgJG9hdXRoX3Rva2VuX3NlY3JldCA9IE5VTEwpIHsKCSR0aGlzLT5zaGExX21ldGhvZCA9
IG5ldyBPQXV0aFNpZ25hdHVyZU1ldGhvZF9ITUFDX1NIQTEoKTsKCSR0aGlzLT5jb25zdW1l
ciA9IG5ldyBPQXV0aENvbnN1bWVyKCRjb25zdW1lcl9rZXksICRjb25zdW1lcl9zZWNyZXQp
OwoJaWYgKCFlbXB0eSgkb2F1dGhfdG9rZW4pICYmICFlbXB0eSgkb2F1dGhfdG9rZW5fc2Vj
cmV0KSkgewoJICAkdGhpcy0+dG9rZW4gPSBuZXcgT0F1dGhDb25zdW1lcigkb2F1dGhfdG9r
ZW4sICRvYXV0aF90b2tlbl9zZWNyZXQpOwoJfSBlbHNlIHsKCSAgJHRoaXMtPnRva2VuID0g
TlVMTDsKCX0KICB9CgoKICAvKioKICAgKiBHZXQgYSByZXF1ZXN0X3Rva2VuIGZyb20gVHdp
dHRlcgogICAqCiAgICogQHJldHVybnMgYSBrZXkvdmFsdWUgYXJyYXkgY29udGFpbmluZyBv
YXV0aF90b2tlbiBhbmQgb2F1dGhfdG9rZW5fc2VjcmV0CiAgICovCiAgZnVuY3Rpb24gZ2V0
UmVxdWVzdFRva2VuKCRvYXV0aF9jYWxsYmFjaykgewoJJHBhcmFtZXRlcnMgPSBhcnJheSgp
OwoJJHBhcmFtZXRlcnNbJ29hdXRoX2NhbGxiYWNrJ10gPSAkb2F1dGhfY2FsbGJhY2s7Cgkk
cmVxdWVzdCA9ICR0aGlzLT5vQXV0aFJlcXVlc3QoJHRoaXMtPnJlcXVlc3RUb2tlblVSTCgp
LCAnR0VUJywgJHBhcmFtZXRlcnMpOwoJJHRva2VuID0gT0F1dGhVdGlsOjpwYXJzZV9wYXJh
bWV0ZXJzKCRyZXF1ZXN0KTsKCSR0aGlzLT50b2tlbiA9IG5ldyBPQXV0aENvbnN1bWVyKCR0
b2tlblsnb2F1dGhfdG9rZW4nXSwgJHRva2VuWydvYXV0aF90b2tlbl9zZWNyZXQnXSk7Cgly
ZXR1cm4gJHRva2VuOwogIH0KCiAgLyoqCiAgICogR2V0IHRoZSBhdXRob3JpemUgVVJMCiAg
ICoKICAgKiBAcmV0dXJucyBhIHN0cmluZwogICAqLwogIGZ1bmN0aW9uIGdldEF1dGhvcml6
ZVVSTCgkdG9rZW4sICRzaWduX2luX3dpdGhfdHdpdHRlciA9IFRSVUUpIHsKCWlmIChpc19h
cnJheSgkdG9rZW4pKSB7CgkgICR0b2tlbiA9ICR0b2tlblsnb2F1dGhfdG9rZW4nXTsKCX0K
CWlmIChlbXB0eSgkc2lnbl9pbl93aXRoX3R3aXR0ZXIpKSB7CgkgIHJldHVybiAkdGhpcy0+
YXV0aG9yaXplVVJMKCkgLiAiP29hdXRoX3Rva2VuPXskdG9rZW59IjsKCX0gZWxzZSB7Cgkg
ICByZXR1cm4gJHRoaXMtPmF1dGhlbnRpY2F0ZVVSTCgpIC4gIj9vYXV0aF90b2tlbj17JHRv
a2VufSI7Cgl9CiAgfQoKICAvKioKICAgKiBFeGNoYW5nZSByZXF1ZXN0IHRva2VuIGFuZCBz
ZWNyZXQgZm9yIGFuIGFjY2VzcyB0b2tlbiBhbmQKICAgKiBzZWNyZXQsIHRvIHNpZ24gQVBJ
IGNhbGxzLgogICAqCiAgICogQHJldHVybnMgYXJyYXkoIm9hdXRoX3Rva2VuIiA9PiAidGhl
LWFjY2Vzcy10b2tlbiIsCiAgICogICAgICAgICAgICAgICAgIm9hdXRoX3Rva2VuX3NlY3Jl
dCIgPT4gInRoZS1hY2Nlc3Mtc2VjcmV0IiwKICAgKiAgICAgICAgICAgICAgICAidXNlcl9p
ZCIgPT4gIjk0MzY5OTIiLAogICAqICAgICAgICAgICAgICAgICJzY3JlZW5fbmFtZSIgPT4g
ImFicmFoYW0iKQogICAqLwogIGZ1bmN0aW9uIGdldEFjY2Vzc1Rva2VuKCRvYXV0aF92ZXJp
ZmllcikgewoJJHBhcmFtZXRlcnMgPSBhcnJheSgpOwoJJHBhcmFtZXRlcnNbJ29hdXRoX3Zl
cmlmaWVyJ10gPSAkb2F1dGhfdmVyaWZpZXI7CgkkcmVxdWVzdCA9ICR0aGlzLT5vQXV0aFJl
cXVlc3QoJHRoaXMtPmFjY2Vzc1Rva2VuVVJMKCksICdHRVQnLCAkcGFyYW1ldGVycyk7Cgkk
dG9rZW4gPSBPQXV0aFV0aWw6OnBhcnNlX3BhcmFtZXRlcnMoJHJlcXVlc3QpOwoJJHRoaXMt
PnRva2VuID0gbmV3IE9BdXRoQ29uc3VtZXIoJHRva2VuWydvYXV0aF90b2tlbiddLCAkdG9r
ZW5bJ29hdXRoX3Rva2VuX3NlY3JldCddKTsKCXJldHVybiAkdG9rZW47CiAgfQoKICAvKioK
ICAgKiBPbmUgdGltZSBleGNoYW5nZSBvZiB1c2VybmFtZSBhbmQgcGFzc3dvcmQgZm9yIGFj
Y2VzcyB0b2tlbiBhbmQgc2VjcmV0LgogICAqCiAgICogQHJldHVybnMgYXJyYXkoIm9hdXRo
X3Rva2VuIiA9PiAidGhlLWFjY2Vzcy10b2tlbiIsCiAgICogICAgICAgICAgICAgICAgIm9h
dXRoX3Rva2VuX3NlY3JldCIgPT4gInRoZS1hY2Nlc3Mtc2VjcmV0IiwKICAgKiAgICAgICAg
ICAgICAgICAidXNlcl9pZCIgPT4gIjk0MzY5OTIiLAogICAqICAgICAgICAgICAgICAgICJz
Y3JlZW5fbmFtZSIgPT4gImFicmFoYW0iLAogICAqICAgICAgICAgICAgICAgICJ4X2F1dGhf
ZXhwaXJlcyIgPT4gIjAiKQogICAqLwogIGZ1bmN0aW9uIGdldFhBdXRoVG9rZW4oJHVzZXJu
YW1lLCAkcGFzc3dvcmQpIHsKCSRwYXJhbWV0ZXJzID0gYXJyYXkoKTsKCSRwYXJhbWV0ZXJz
Wyd4X2F1dGhfdXNlcm5hbWUnXSA9ICR1c2VybmFtZTsKCSRwYXJhbWV0ZXJzWyd4X2F1dGhf
cGFzc3dvcmQnXSA9ICRwYXNzd29yZDsKCSRwYXJhbWV0ZXJzWyd4X2F1dGhfbW9kZSddID0g
J2NsaWVudF9hdXRoJzsKCSRyZXF1ZXN0ID0gJHRoaXMtPm9BdXRoUmVxdWVzdCgkdGhpcy0+
YWNjZXNzVG9rZW5VUkwoKSwgJ1BPU1QnLCAkcGFyYW1ldGVycyk7CgkkdG9rZW4gPSBPQXV0
aFV0aWw6OnBhcnNlX3BhcmFtZXRlcnMoJHJlcXVlc3QpOwoJJHRoaXMtPnRva2VuID0gbmV3
IE9BdXRoQ29uc3VtZXIoJHRva2VuWydvYXV0aF90b2tlbiddLCAkdG9rZW5bJ29hdXRoX3Rv
a2VuX3NlY3JldCddKTsKCXJldHVybiAkdG9rZW47CiAgfQoKICAvKioKICAgKiBHRVQgd3Jh
cHBlciBmb3Igb0F1dGhSZXF1ZXN0LgogICAqLwogIGZ1bmN0aW9uIGdldCgkdXJsLCAkcGFy
YW1ldGVycyA9IGFycmF5KCkpIHsKCSRyZXNwb25zZSA9ICR0aGlzLT5vQXV0aFJlcXVlc3Qo
JHVybCwgJ0dFVCcsICRwYXJhbWV0ZXJzKTsKCWlmICgkdGhpcy0+Zm9ybWF0ID09PSAnanNv
bicgJiYgJHRoaXMtPmRlY29kZV9qc29uKSB7CgkgIHJldHVybiBqc29uX2RlY29kZSgkcmVz
cG9uc2UpOwoJfQoJcmV0dXJuICRyZXNwb25zZTsKICB9CgogIC8qKgogICAqIFBPU1Qgd3Jh
cHBlciBmb3Igb0F1dGhSZXF1ZXN0LgogICAqLwogIGZ1bmN0aW9uIHBvc3QoJHVybCwgJHBh
cmFtZXRlcnMgPSBhcnJheSgpKSB7CgkkcmVzcG9uc2UgPSAkdGhpcy0+b0F1dGhSZXF1ZXN0
KCR1cmwsICdQT1NUJywgJHBhcmFtZXRlcnMpOwoJaWYgKCR0aGlzLT5mb3JtYXQgPT09ICdq
c29uJyAmJiAkdGhpcy0+ZGVjb2RlX2pzb24pIHsKCSAgcmV0dXJuIGpzb25fZGVjb2RlKCRy
ZXNwb25zZSk7Cgl9CglyZXR1cm4gJHJlc3BvbnNlOwogIH0KCiAgLyoqCiAgICogREVMRVRF
IHdyYXBwZXIgZm9yIG9BdXRoUmVxZXVzdC4KICAgKi8KICBmdW5jdGlvbiBkZWxldGUoJHVy
bCwgJHBhcmFtZXRlcnMgPSBhcnJheSgpKSB7CgkkcmVzcG9uc2UgPSAkdGhpcy0+b0F1dGhS
ZXF1ZXN0KCR1cmwsICdERUxFVEUnLCAkcGFyYW1ldGVycyk7CglpZiAoJHRoaXMtPmZvcm1h
dCA9PT0gJ2pzb24nICYmICR0aGlzLT5kZWNvZGVfanNvbikgewoJICByZXR1cm4ganNvbl9k
ZWNvZGUoJHJlc3BvbnNlKTsKCX0KCXJldHVybiAkcmVzcG9uc2U7CiAgfQoKICAvKioKICAg
KiBGb3JtYXQgYW5kIHNpZ24gYW4gT0F1dGggLyBBUEkgcmVxdWVzdAogICAqLwogIGZ1bmN0
aW9uIG9BdXRoUmVxdWVzdCgkdXJsLCAkbWV0aG9kLCAkcGFyYW1ldGVycykgewoJaWYgKHN0
cnJwb3MoJHVybCwgJ2h0dHBzOi8vJykgIT09IDAgJiYgc3RycnBvcygkdXJsLCAnaHR0cDov
LycpICE9PSAwKSB7CgkgICR1cmwgPSAieyR0aGlzLT5ob3N0fXskdXJsfS57JHRoaXMtPmZv
cm1hdH0iOwoJfQoJJHJlcXVlc3QgPSBPQXV0aFJlcXVlc3Q6OmZyb21fY29uc3VtZXJfYW5k
X3Rva2VuKCR0aGlzLT5jb25zdW1lciwgJHRoaXMtPnRva2VuLCAkbWV0aG9kLCAkdXJsLCAk
cGFyYW1ldGVycyk7CgkkcmVxdWVzdC0+c2lnbl9yZXF1ZXN0KCR0aGlzLT5zaGExX21ldGhv
ZCwgJHRoaXMtPmNvbnN1bWVyLCAkdGhpcy0+dG9rZW4pOwoJc3dpdGNoICgkbWV0aG9kKSB7
CgljYXNlICdHRVQnOgoJICByZXR1cm4gJHRoaXMtPmh0dHAoJHJlcXVlc3QtPnRvX3VybCgp
LCAnR0VUJyk7CglkZWZhdWx0OgoJICByZXR1cm4gJHRoaXMtPmh0dHAoJHJlcXVlc3QtPmdl
dF9ub3JtYWxpemVkX2h0dHBfdXJsKCksICRtZXRob2QsICRyZXF1ZXN0LT50b19wb3N0ZGF0
YSgpKTsKCX0KICB9CgogIC8qKgogICAqIE1ha2UgYW4gSFRUUCByZXF1ZXN0CiAgICoKICAg
KiBAcmV0dXJuIEFQSSByZXN1bHRzCiAgICovCiAgZnVuY3Rpb24gaHR0cCgkdXJsLCAkbWV0
aG9kLCAkcG9zdGZpZWxkcyA9IE5VTEwpIHsKCSR0aGlzLT5odHRwX2luZm8gPSBhcnJheSgp
OwoJJGNpID0gY3VybF9pbml0KCk7CgkvKiBDdXJsIHNldHRpbmdzICovCgljdXJsX3NldG9w
dCgkY2ksIENVUkxPUFRfVVNFUkFHRU5ULCAkdGhpcy0+dXNlcmFnZW50KTsKCWN1cmxfc2V0
b3B0KCRjaSwgQ1VSTE9QVF9DT05ORUNUVElNRU9VVCwgJHRoaXMtPmNvbm5lY3R0aW1lb3V0
KTsKCWN1cmxfc2V0b3B0KCRjaSwgQ1VSTE9QVF9USU1FT1VULCAkdGhpcy0+dGltZW91dCk7
CgljdXJsX3NldG9wdCgkY2ksIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIFRSVUUpOwoJY3Vy
bF9zZXRvcHQoJGNpLCBDVVJMT1BUX0hUVFBIRUFERVIsIGFycmF5KCdFeHBlY3Q6JykpOwoJ
Y3VybF9zZXRvcHQoJGNpLCBDVVJMT1BUX1NTTF9WRVJJRllQRUVSLCAkdGhpcy0+c3NsX3Zl
cmlmeXBlZXIpOwoJY3VybF9zZXRvcHQoJGNpLCBDVVJMT1BUX0hFQURFUkZVTkNUSU9OLCBh
cnJheSgkdGhpcywgJ2dldEhlYWRlcicpKTsKCWN1cmxfc2V0b3B0KCRjaSwgQ1VSTE9QVF9I
RUFERVIsIEZBTFNFKTsKCglzd2l0Y2ggKCRtZXRob2QpIHsKCSAgY2FzZSAnUE9TVCc6CgkJ
Y3VybF9zZXRvcHQoJGNpLCBDVVJMT1BUX1BPU1QsIFRSVUUpOwoJCWlmICghZW1wdHkoJHBv
c3RmaWVsZHMpKSB7CgkJICBjdXJsX3NldG9wdCgkY2ksIENVUkxPUFRfUE9TVEZJRUxEUywg
JHBvc3RmaWVsZHMpOwoJCX0KCQlicmVhazsKCSAgY2FzZSAnREVMRVRFJzoKCQljdXJsX3Nl
dG9wdCgkY2ksIENVUkxPUFRfQ1VTVE9NUkVRVUVTVCwgJ0RFTEVURScpOwoJCWlmICghZW1w
dHkoJHBvc3RmaWVsZHMpKSB7CgkJICAkdXJsID0gInskdXJsfT97JHBvc3RmaWVsZHN9IjsK
CQl9Cgl9CgoJY3VybF9zZXRvcHQoJGNpLCBDVVJMT1BUX1VSTCwgJHVybCk7CgkkcmVzcG9u
c2UgPSBjdXJsX2V4ZWMoJGNpKTsKCSR0aGlzLT5odHRwX2NvZGUgPSBjdXJsX2dldGluZm8o
JGNpLCBDVVJMSU5GT19IVFRQX0NPREUpOwoJJHRoaXMtPmh0dHBfaW5mbyA9IGFycmF5X21l
cmdlKCR0aGlzLT5odHRwX2luZm8sIGN1cmxfZ2V0aW5mbygkY2kpKTsKCSR0aGlzLT51cmwg
PSAkdXJsOwoJY3VybF9jbG9zZSAoJGNpKTsKCXJldHVybiAkcmVzcG9uc2U7CiAgfQoKICAv
KioKICAgKiBHZXQgdGhlIGhlYWRlciBpbmZvIHRvIHN0b3JlLgogICAqLwogIGZ1bmN0aW9u
IGdldEhlYWRlcigkY2gsICRoZWFkZXIpIHsKCSRpID0gc3RycG9zKCRoZWFkZXIsICc6Jyk7
CglpZiAoIWVtcHR5KCRpKSkgewoJICAka2V5ID0gc3RyX3JlcGxhY2UoJy0nLCAnXycsIHN0
cnRvbG93ZXIoc3Vic3RyKCRoZWFkZXIsIDAsICRpKSkpOwoJICAkdmFsdWUgPSB0cmltKHN1
YnN0cigkaGVhZGVyLCAkaSArIDIpKTsKCSAgJHRoaXMtPmh0dHBfaGVhZGVyWyRrZXldID0g
JHZhbHVlOwoJfQoJcmV0dXJuIHN0cmxlbigkaGVhZGVyKTsKICB9Cn0KLyogR2VuZXJpYyBl
eGNlcHRpb24gY2xhc3MKICovCmlmICghY2xhc3NfZXhpc3RzKCdPQXV0aEV4Y2VwdGlvbicp
KSB7CiAgY2xhc3MgT0F1dGhFeGNlcHRpb24gZXh0ZW5kcyBFeGNlcHRpb24gewoJLy8gcGFz
cwogIH0KfQoKY2xhc3MgT0F1dGhDb25zdW1lciB7CiAgcHVibGljICRrZXk7CiAgcHVibGlj
ICRzZWNyZXQ7CgogIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRrZXksICRzZWNyZXQsICRjYWxs
YmFja191cmw9TlVMTCkgewoJJHRoaXMtPmtleSA9ICRrZXk7CgkkdGhpcy0+c2VjcmV0ID0g
JHNlY3JldDsKCSR0aGlzLT5jYWxsYmFja191cmwgPSAkY2FsbGJhY2tfdXJsOwogIH0KCiAg
ZnVuY3Rpb24gX190b1N0cmluZygpIHsKCXJldHVybiAiT0F1dGhDb25zdW1lcltrZXk9JHRo
aXMtPmtleSxzZWNyZXQ9JHRoaXMtPnNlY3JldF0iOwogIH0KfQoKY2xhc3MgT0F1dGhUb2tl
biB7CiAgLy8gYWNjZXNzIHRva2VucyBhbmQgcmVxdWVzdCB0b2tlbnMKICBwdWJsaWMgJGtl
eTsKICBwdWJsaWMgJHNlY3JldDsKCiAgLyoqCiAgICoga2V5ID0gdGhlIHRva2VuCiAgICog
c2VjcmV0ID0gdGhlIHRva2VuIHNlY3JldAogICAqLwogIGZ1bmN0aW9uIF9fY29uc3RydWN0
KCRrZXksICRzZWNyZXQpIHsKCSR0aGlzLT5rZXkgPSAka2V5OwoJJHRoaXMtPnNlY3JldCA9
ICRzZWNyZXQ7CiAgfQoKICAvKioKICAgKiBnZW5lcmF0ZXMgdGhlIGJhc2ljIHN0cmluZyBz
ZXJpYWxpemF0aW9uIG9mIGEgdG9rZW4gdGhhdCBhIHNlcnZlcgogICAqIHdvdWxkIHJlc3Bv
bmQgdG8gcmVxdWVzdF90b2tlbiBhbmQgYWNjZXNzX3Rva2VuIGNhbGxzIHdpdGgKICAgKi8K
ICBmdW5jdGlvbiB0b19zdHJpbmcoKSB7CglyZXR1cm4gIm9hdXRoX3Rva2VuPSIgLgoJCSAg
IE9BdXRoVXRpbDo6dXJsZW5jb2RlX3JmYzM5ODYoJHRoaXMtPmtleSkgLgoJCSAgICImb2F1
dGhfdG9rZW5fc2VjcmV0PSIgLgoJCSAgIE9BdXRoVXRpbDo6dXJsZW5jb2RlX3JmYzM5ODYo
JHRoaXMtPnNlY3JldCk7CiAgfQoKICBmdW5jdGlvbiBfX3RvU3RyaW5nKCkgewoJcmV0dXJu
ICR0aGlzLT50b19zdHJpbmcoKTsKICB9Cn0KCi8qKgogKiBBIGNsYXNzIGZvciBpbXBsZW1l
bnRpbmcgYSBTaWduYXR1cmUgTWV0aG9kCiAqIFNlZSBzZWN0aW9uIDkgKCJTaWduaW5nIFJl
cXVlc3RzIikgaW4gdGhlIHNwZWMKICovCmFic3RyYWN0IGNsYXNzIE9BdXRoU2lnbmF0dXJl
TWV0aG9kIHsKICAvKioKICAgKiBOZWVkcyB0byByZXR1cm4gdGhlIG5hbWUgb2YgdGhlIFNp
Z25hdHVyZSBNZXRob2QgKGllIEhNQUMtU0hBMSkKICAgKiBAcmV0dXJuIHN0cmluZwogICAq
LwogIGFic3RyYWN0IHB1YmxpYyBmdW5jdGlvbiBnZXRfbmFtZSgpOwoKICAvKioKICAgKiBC
dWlsZCB1cCB0aGUgc2lnbmF0dXJlCiAgICogTk9URTogVGhlIG91dHB1dCBvZiB0aGlzIGZ1
bmN0aW9uIE1VU1QgTk9UIGJlIHVybGVuY29kZWQuCiAgICogdGhlIGVuY29kaW5nIGlzIGhh
bmRsZWQgaW4gT0F1dGhSZXF1ZXN0IHdoZW4gdGhlIGZpbmFsCiAgICogcmVxdWVzdCBpcyBz
ZXJpYWxpemVkCiAgICogQHBhcmFtIE9BdXRoUmVxdWVzdCAkcmVxdWVzdAogICAqIEBwYXJh
bSBPQXV0aENvbnN1bWVyICRjb25zdW1lcgogICAqIEBwYXJhbSBPQXV0aFRva2VuICR0b2tl
bgogICAqIEByZXR1cm4gc3RyaW5nCiAgICovCiAgYWJzdHJhY3QgcHVibGljIGZ1bmN0aW9u
IGJ1aWxkX3NpZ25hdHVyZSgkcmVxdWVzdCwgJGNvbnN1bWVyLCAkdG9rZW4pOwoKICAvKioK
ICAgKiBWZXJpZmllcyB0aGF0IGEgZ2l2ZW4gc2lnbmF0dXJlIGlzIGNvcnJlY3QKICAgKiBA
cGFyYW0gT0F1dGhSZXF1ZXN0ICRyZXF1ZXN0CiAgICogQHBhcmFtIE9BdXRoQ29uc3VtZXIg
JGNvbnN1bWVyCiAgICogQHBhcmFtIE9BdXRoVG9rZW4gJHRva2VuCiAgICogQHBhcmFtIHN0
cmluZyAkc2lnbmF0dXJlCiAgICogQHJldHVybiBib29sCiAgICovCiAgcHVibGljIGZ1bmN0
aW9uIGNoZWNrX3NpZ25hdHVyZSgkcmVxdWVzdCwgJGNvbnN1bWVyLCAkdG9rZW4sICRzaWdu
YXR1cmUpIHsKCSRidWlsdCA9ICR0aGlzLT5idWlsZF9zaWduYXR1cmUoJHJlcXVlc3QsICRj
b25zdW1lciwgJHRva2VuKTsKCXJldHVybiAkYnVpbHQgPT0gJHNpZ25hdHVyZTsKICB9Cn0K
Ci8qKgogKiBUaGUgSE1BQy1TSEExIHNpZ25hdHVyZSBtZXRob2QgdXNlcyB0aGUgSE1BQy1T
SEExIHNpZ25hdHVyZSBhbGdvcml0aG0gYXMgZGVmaW5lZCBpbiBbUkZDMjEwNF0KICogd2hl
cmUgdGhlIFNpZ25hdHVyZSBCYXNlIFN0cmluZyBpcyB0aGUgdGV4dCBhbmQgdGhlIGtleSBp
cyB0aGUgY29uY2F0ZW5hdGVkIHZhbHVlcyAoZWFjaCBmaXJzdAogKiBlbmNvZGVkIHBlciBQ
YXJhbWV0ZXIgRW5jb2RpbmcpIG9mIHRoZSBDb25zdW1lciBTZWNyZXQgYW5kIFRva2VuIFNl
Y3JldCwgc2VwYXJhdGVkIGJ5IGFuICcmJwogKiBjaGFyYWN0ZXIgKEFTQ0lJIGNvZGUgMzgp
IGV2ZW4gaWYgZW1wdHkuCiAqICAgLSBDaGFwdGVyIDkuMiAoIkhNQUMtU0hBMSIpCiAqLwpj
bGFzcyBPQXV0aFNpZ25hdHVyZU1ldGhvZF9ITUFDX1NIQTEgZXh0ZW5kcyBPQXV0aFNpZ25h
dHVyZU1ldGhvZCB7CiAgZnVuY3Rpb24gZ2V0X25hbWUoKSB7CglyZXR1cm4gIkhNQUMtU0hB
MSI7CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gYnVpbGRfc2lnbmF0dXJlKCRyZXF1ZXN0LCAk
Y29uc3VtZXIsICR0b2tlbikgewoJJGJhc2Vfc3RyaW5nID0gJHJlcXVlc3QtPmdldF9zaWdu
YXR1cmVfYmFzZV9zdHJpbmcoKTsKCSRyZXF1ZXN0LT5iYXNlX3N0cmluZyA9ICRiYXNlX3N0
cmluZzsKCgkka2V5X3BhcnRzID0gYXJyYXkoCgkgICRjb25zdW1lci0+c2VjcmV0LAoJICAo
JHRva2VuKSA/ICR0b2tlbi0+c2VjcmV0IDogIiIKCSk7CgoJJGtleV9wYXJ0cyA9IE9BdXRo
VXRpbDo6dXJsZW5jb2RlX3JmYzM5ODYoJGtleV9wYXJ0cyk7Cgkka2V5ID0gaW1wbG9kZSgn
JicsICRrZXlfcGFydHMpOwoKCXJldHVybiBiYXNlNjRfZW5jb2RlKGhhc2hfaG1hYygnc2hh
MScsICRiYXNlX3N0cmluZywgJGtleSwgdHJ1ZSkpOwogIH0KfQoKLyoqCiAqIFRoZSBQTEFJ
TlRFWFQgbWV0aG9kIGRvZXMgbm90IHByb3ZpZGUgYW55IHNlY3VyaXR5IHByb3RlY3Rpb24g
YW5kIFNIT1VMRCBvbmx5IGJlIHVzZWQKICogb3ZlciBhIHNlY3VyZSBjaGFubmVsIHN1Y2gg
YXMgSFRUUFMuIEl0IGRvZXMgbm90IHVzZSB0aGUgU2lnbmF0dXJlIEJhc2UgU3RyaW5nLgog
KiAgIC0gQ2hhcHRlciA5LjQgKCJQTEFJTlRFWFQiKQogKi8KY2xhc3MgT0F1dGhTaWduYXR1
cmVNZXRob2RfUExBSU5URVhUIGV4dGVuZHMgT0F1dGhTaWduYXR1cmVNZXRob2QgewogIHB1
YmxpYyBmdW5jdGlvbiBnZXRfbmFtZSgpIHsKCXJldHVybiAiUExBSU5URVhUIjsKICB9Cgog
IC8qKgogICAqIG9hdXRoX3NpZ25hdHVyZSBpcyBzZXQgdG8gdGhlIGNvbmNhdGVuYXRlZCBl
bmNvZGVkIHZhbHVlcyBvZiB0aGUgQ29uc3VtZXIgU2VjcmV0IGFuZAogICAqIFRva2VuIFNl
Y3JldCwgc2VwYXJhdGVkIGJ5IGEgJyYnIGNoYXJhY3RlciAoQVNDSUkgY29kZSAzOCksIGV2
ZW4gaWYgZWl0aGVyIHNlY3JldCBpcwogICAqIGVtcHR5LiBUaGUgcmVzdWx0IE1VU1QgYmUg
ZW5jb2RlZCBhZ2Fpbi4KICAgKiAgIC0gQ2hhcHRlciA5LjQuMSAoIkdlbmVyYXRpbmcgU2ln
bmF0dXJlcyIpCiAgICoKICAgKiBQbGVhc2Ugbm90ZSB0aGF0IHRoZSBzZWNvbmQgZW5jb2Rp
bmcgTVVTVCBOT1QgaGFwcGVuIGluIHRoZSBTaWduYXR1cmVNZXRob2QsIGFzCiAgICogT0F1
dGhSZXF1ZXN0IGhhbmRsZXMgdGhpcyEKICAgKi8KICBwdWJsaWMgZnVuY3Rpb24gYnVpbGRf
c2lnbmF0dXJlKCRyZXF1ZXN0LCAkY29uc3VtZXIsICR0b2tlbikgewoJJGtleV9wYXJ0cyA9
IGFycmF5KAoJICAkY29uc3VtZXItPnNlY3JldCwKCSAgKCR0b2tlbikgPyAkdG9rZW4tPnNl
Y3JldCA6ICIiCgkpOwoKCSRrZXlfcGFydHMgPSBPQXV0aFV0aWw6OnVybGVuY29kZV9yZmMz
OTg2KCRrZXlfcGFydHMpOwoJJGtleSA9IGltcGxvZGUoJyYnLCAka2V5X3BhcnRzKTsKCSRy
ZXF1ZXN0LT5iYXNlX3N0cmluZyA9ICRrZXk7CgoJcmV0dXJuICRrZXk7CiAgfQp9CgovKioK
ICogVGhlIFJTQS1TSEExIHNpZ25hdHVyZSBtZXRob2QgdXNlcyB0aGUgUlNBU1NBLVBLQ1Mx
LXYxXzUgc2lnbmF0dXJlIGFsZ29yaXRobSBhcyBkZWZpbmVkIGluCiAqIFtSRkMzNDQ3XSBz
ZWN0aW9uIDguMiAobW9yZSBzaW1wbHkga25vd24gYXMgUEtDUyMxKSwgdXNpbmcgU0hBLTEg
YXMgdGhlIGhhc2ggZnVuY3Rpb24gZm9yCiAqIEVNU0EtUEtDUzEtdjFfNS4gSXQgaXMgYXNz
dW1lZCB0aGF0IHRoZSBDb25zdW1lciBoYXMgcHJvdmlkZWQgaXRzIFJTQSBwdWJsaWMga2V5
IGluIGEKICogdmVyaWZpZWQgd2F5IHRvIHRoZSBTZXJ2aWNlIFByb3ZpZGVyLCBpbiBhIG1h
bm5lciB3aGljaCBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoaXMKICogc3BlY2lmaWNhdGlv
bi4KICogICAtIENoYXB0ZXIgOS4zICgiUlNBLVNIQTEiKQogKi8KYWJzdHJhY3QgY2xhc3Mg
T0F1dGhTaWduYXR1cmVNZXRob2RfUlNBX1NIQTEgZXh0ZW5kcyBPQXV0aFNpZ25hdHVyZU1l
dGhvZCB7CiAgcHVibGljIGZ1bmN0aW9uIGdldF9uYW1lKCkgewoJcmV0dXJuICJSU0EtU0hB
MSI7CiAgfQoKICAvLyBVcCB0byB0aGUgU1AgdG8gaW1wbGVtZW50IHRoaXMgbG9va3VwIG9m
IGtleXMuIFBvc3NpYmxlIGlkZWFzIGFyZToKICAvLyAoMSkgZG8gYSBsb29rdXAgaW4gYSB0
YWJsZSBvZiB0cnVzdGVkIGNlcnRzIGtleWVkIG9mZiBvZiBjb25zdW1lcgogIC8vICgyKSBm
ZXRjaCB2aWEgaHR0cCB1c2luZyBhIHVybCBwcm92aWRlZCBieSB0aGUgcmVxdWVzdGVyCiAg
Ly8gKDMpIHNvbWUgc29ydCBvZiBzcGVjaWZpYyBkaXNjb3ZlcnkgY29kZSBiYXNlZCBvbiBy
ZXF1ZXN0CiAgLy8KICAvLyBFaXRoZXIgd2F5IHNob3VsZCByZXR1cm4gYSBzdHJpbmcgcmVw
cmVzZW50YXRpb24gb2YgdGhlIGNlcnRpZmljYXRlCiAgcHJvdGVjdGVkIGFic3RyYWN0IGZ1
bmN0aW9uIGZldGNoX3B1YmxpY19jZXJ0KCYkcmVxdWVzdCk7CgogIC8vIFVwIHRvIHRoZSBT
UCB0byBpbXBsZW1lbnQgdGhpcyBsb29rdXAgb2Yga2V5cy4gUG9zc2libGUgaWRlYXMgYXJl
OgogIC8vICgxKSBkbyBhIGxvb2t1cCBpbiBhIHRhYmxlIG9mIHRydXN0ZWQgY2VydHMga2V5
ZWQgb2ZmIG9mIGNvbnN1bWVyCiAgLy8KICAvLyBFaXRoZXIgd2F5IHNob3VsZCByZXR1cm4g
YSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGNlcnRpZmljYXRlCiAgcHJvdGVjdGVk
IGFic3RyYWN0IGZ1bmN0aW9uIGZldGNoX3ByaXZhdGVfY2VydCgmJHJlcXVlc3QpOwoKICBw
dWJsaWMgZnVuY3Rpb24gYnVpbGRfc2lnbmF0dXJlKCRyZXF1ZXN0LCAkY29uc3VtZXIsICR0
b2tlbikgewoJJGJhc2Vfc3RyaW5nID0gJHJlcXVlc3QtPmdldF9zaWduYXR1cmVfYmFzZV9z
dHJpbmcoKTsKCSRyZXF1ZXN0LT5iYXNlX3N0cmluZyA9ICRiYXNlX3N0cmluZzsKCgkvLyBG
ZXRjaCB0aGUgcHJpdmF0ZSBrZXkgY2VydCBiYXNlZCBvbiB0aGUgcmVxdWVzdAoJJGNlcnQg
PSAkdGhpcy0+ZmV0Y2hfcHJpdmF0ZV9jZXJ0KCRyZXF1ZXN0KTsKCgkvLyBQdWxsIHRoZSBw
cml2YXRlIGtleSBJRCBmcm9tIHRoZSBjZXJ0aWZpY2F0ZQoJJHByaXZhdGVrZXlpZCA9IG9w
ZW5zc2xfZ2V0X3ByaXZhdGVrZXkoJGNlcnQpOwoKCS8vIFNpZ24gdXNpbmcgdGhlIGtleQoJ
JG9rID0gb3BlbnNzbF9zaWduKCRiYXNlX3N0cmluZywgJHNpZ25hdHVyZSwgJHByaXZhdGVr
ZXlpZCk7CgoJLy8gUmVsZWFzZSB0aGUga2V5IHJlc291cmNlCglvcGVuc3NsX2ZyZWVfa2V5
KCRwcml2YXRla2V5aWQpOwoKCXJldHVybiBiYXNlNjRfZW5jb2RlKCRzaWduYXR1cmUpOwog
IH0KCiAgcHVibGljIGZ1bmN0aW9uIGNoZWNrX3NpZ25hdHVyZSgkcmVxdWVzdCwgJGNvbnN1
bWVyLCAkdG9rZW4sICRzaWduYXR1cmUpIHsKCSRkZWNvZGVkX3NpZyA9IGJhc2U2NF9kZWNv
ZGUoJHNpZ25hdHVyZSk7CgoJJGJhc2Vfc3RyaW5nID0gJHJlcXVlc3QtPmdldF9zaWduYXR1
cmVfYmFzZV9zdHJpbmcoKTsKCgkvLyBGZXRjaCB0aGUgcHVibGljIGtleSBjZXJ0IGJhc2Vk
IG9uIHRoZSByZXF1ZXN0CgkkY2VydCA9ICR0aGlzLT5mZXRjaF9wdWJsaWNfY2VydCgkcmVx
dWVzdCk7CgoJLy8gUHVsbCB0aGUgcHVibGljIGtleSBJRCBmcm9tIHRoZSBjZXJ0aWZpY2F0
ZQoJJHB1YmxpY2tleWlkID0gb3BlbnNzbF9nZXRfcHVibGlja2V5KCRjZXJ0KTsKCgkvLyBD
aGVjayB0aGUgY29tcHV0ZWQgc2lnbmF0dXJlIGFnYWluc3QgdGhlIG9uZSBwYXNzZWQgaW4g
dGhlIHF1ZXJ5Cgkkb2sgPSBvcGVuc3NsX3ZlcmlmeSgkYmFzZV9zdHJpbmcsICRkZWNvZGVk
X3NpZywgJHB1YmxpY2tleWlkKTsKCgkvLyBSZWxlYXNlIHRoZSBrZXkgcmVzb3VyY2UKCW9w
ZW5zc2xfZnJlZV9rZXkoJHB1YmxpY2tleWlkKTsKCglyZXR1cm4gJG9rID09IDE7CiAgfQp9
CgpjbGFzcyBPQXV0aFJlcXVlc3QgewogIHByaXZhdGUgJHBhcmFtZXRlcnM7CiAgcHJpdmF0
ZSAkaHR0cF9tZXRob2Q7CiAgcHJpdmF0ZSAkaHR0cF91cmw7CiAgLy8gZm9yIGRlYnVnIHB1
cnBvc2VzCiAgcHVibGljICRiYXNlX3N0cmluZzsKICBwdWJsaWMgc3RhdGljICR2ZXJzaW9u
ID0gJzEuMCc7CiAgcHVibGljIHN0YXRpYyAkUE9TVF9JTlBVVCA9ICdwaHA6Ly9pbnB1dCc7
CgogIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRodHRwX21ldGhvZCwgJGh0dHBfdXJsLCAkcGFy
YW1ldGVycz1OVUxMKSB7CglAJHBhcmFtZXRlcnMgb3IgJHBhcmFtZXRlcnMgPSBhcnJheSgp
OwoJJHBhcmFtZXRlcnMgPSBhcnJheV9tZXJnZSggT0F1dGhVdGlsOjpwYXJzZV9wYXJhbWV0
ZXJzKHBhcnNlX3VybCgkaHR0cF91cmwsIFBIUF9VUkxfUVVFUlkpKSwgJHBhcmFtZXRlcnMp
OwoJJHRoaXMtPnBhcmFtZXRlcnMgPSAkcGFyYW1ldGVyczsKCSR0aGlzLT5odHRwX21ldGhv
ZCA9ICRodHRwX21ldGhvZDsKCSR0aGlzLT5odHRwX3VybCA9ICRodHRwX3VybDsKICB9CgoK
ICAvKioKICAgKiBhdHRlbXB0IHRvIGJ1aWxkIHVwIGEgcmVxdWVzdCBmcm9tIHdoYXQgd2Fz
IHBhc3NlZCB0byB0aGUgc2VydmVyCiAgICovCiAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBm
cm9tX3JlcXVlc3QoJGh0dHBfbWV0aG9kPU5VTEwsICRodHRwX3VybD1OVUxMLCAkcGFyYW1l
dGVycz1OVUxMKSB7Cgkkc2NoZW1lID0gKCFpc3NldCgkX1NFUlZFUlsnSFRUUFMnXSkgfHwg
JF9TRVJWRVJbJ0hUVFBTJ10gIT0gIm9uIikKCQkJICA/ICdodHRwJwoJCQkgIDogJ2h0dHBz
JzsKCUAkaHR0cF91cmwgb3IgJGh0dHBfdXJsID0gJHNjaGVtZSAuCgkJCQkJCQkgICc6Ly8n
IC4gJF9TRVJWRVJbJ0hUVFBfSE9TVCddIC4KCQkJCQkJCSAgJzonIC4KCQkJCQkJCSAgJF9T
RVJWRVJbJ1NFUlZFUl9QT1JUJ10gLgoJCQkJCQkJICAkX1NFUlZFUlsnUkVRVUVTVF9VUkkn
XTsKCUAkaHR0cF9tZXRob2Qgb3IgJGh0dHBfbWV0aG9kID0gJF9TRVJWRVJbJ1JFUVVFU1Rf
TUVUSE9EJ107CgoJLy8gV2Ugd2VyZW4ndCBoYW5kZWQgYW55IHBhcmFtZXRlcnMsIHNvIGxl
dCdzIGZpbmQgdGhlIG9uZXMgcmVsZXZhbnQgdG8KCS8vIHRoaXMgcmVxdWVzdC4KCS8vIElm
IHlvdSBydW4gWE1MLVJQQyBvciBzaW1pbGFyIHlvdSBzaG91bGQgdXNlIHRoaXMgdG8gcHJv
dmlkZSB5b3VyIG93bgoJLy8gcGFyc2VkIHBhcmFtZXRlci1saXN0CglpZiAoISRwYXJhbWV0
ZXJzKSB7CgkgIC8vIEZpbmQgcmVxdWVzdCBoZWFkZXJzCgkgICRyZXF1ZXN0X2hlYWRlcnMg
PSBPQXV0aFV0aWw6OmdldF9oZWFkZXJzKCk7CgoJICAvLyBQYXJzZSB0aGUgcXVlcnktc3Ry
aW5nIHRvIGZpbmQgR0VUIHBhcmFtZXRlcnMKCSAgJHBhcmFtZXRlcnMgPSBPQXV0aFV0aWw6
OnBhcnNlX3BhcmFtZXRlcnMoJF9TRVJWRVJbJ1FVRVJZX1NUUklORyddKTsKCgkgIC8vIEl0
J3MgYSBQT1NUIHJlcXVlc3Qgb2YgdGhlIHByb3BlciBjb250ZW50LXR5cGUsIHNvIHBhcnNl
IFBPU1QKCSAgLy8gcGFyYW1ldGVycyBhbmQgYWRkIHRob3NlIG92ZXJyaWRpbmcgYW55IGR1
cGxpY2F0ZXMgZnJvbSBHRVQKCSAgaWYgKCRodHRwX21ldGhvZCA9PSAiUE9TVCIKCQkgICYm
IEBzdHJzdHIoJHJlcXVlc3RfaGVhZGVyc1siQ29udGVudC1UeXBlIl0sCgkJCQkJICJhcHBs
aWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQiKQoJCSAgKSB7CgkJJHBvc3RfZGF0YSA9
IE9BdXRoVXRpbDo6cGFyc2VfcGFyYW1ldGVycygKCQkgIGZpbGVfZ2V0X2NvbnRlbnRzKHNl
bGY6OiRQT1NUX0lOUFVUKQoJCSk7CgkJJHBhcmFtZXRlcnMgPSBhcnJheV9tZXJnZSgkcGFy
YW1ldGVycywgJHBvc3RfZGF0YSk7CgkgIH0KCgkgIC8vIFdlIGhhdmUgYSBBdXRob3JpemF0
aW9uLWhlYWRlciB3aXRoIE9BdXRoIGRhdGEuIFBhcnNlIHRoZSBoZWFkZXIKCSAgLy8gYW5k
IGFkZCB0aG9zZSBvdmVycmlkaW5nIGFueSBkdXBsaWNhdGVzIGZyb20gR0VUIG9yIFBPU1QK
CSAgaWYgKEBzdWJzdHIoJHJlcXVlc3RfaGVhZGVyc1snQXV0aG9yaXphdGlvbiddLCAwLCA2
KSA9PSAiT0F1dGggIikgewoJCSRoZWFkZXJfcGFyYW1ldGVycyA9IE9BdXRoVXRpbDo6c3Bs
aXRfaGVhZGVyKAoJCSAgJHJlcXVlc3RfaGVhZGVyc1snQXV0aG9yaXphdGlvbiddCgkJKTsK
CQkkcGFyYW1ldGVycyA9IGFycmF5X21lcmdlKCRwYXJhbWV0ZXJzLCAkaGVhZGVyX3BhcmFt
ZXRlcnMpOwoJICB9CgoJfQoKCXJldHVybiBuZXcgT0F1dGhSZXF1ZXN0KCRodHRwX21ldGhv
ZCwgJGh0dHBfdXJsLCAkcGFyYW1ldGVycyk7CiAgfQoKICAvKioKICAgKiBwcmV0dHkgbXVj
aCBhIGhlbHBlciBmdW5jdGlvbiB0byBzZXQgdXAgdGhlIHJlcXVlc3QKICAgKi8KICBwdWJs
aWMgc3RhdGljIGZ1bmN0aW9uIGZyb21fY29uc3VtZXJfYW5kX3Rva2VuKCRjb25zdW1lciwg
JHRva2VuLCAkaHR0cF9tZXRob2QsICRodHRwX3VybCwgJHBhcmFtZXRlcnM9TlVMTCkgewoJ
QCRwYXJhbWV0ZXJzIG9yICRwYXJhbWV0ZXJzID0gYXJyYXkoKTsKCSRkZWZhdWx0cyA9IGFy
cmF5KCJvYXV0aF92ZXJzaW9uIiA9PiBPQXV0aFJlcXVlc3Q6OiR2ZXJzaW9uLAoJCQkJCSAg
Im9hdXRoX25vbmNlIiA9PiBPQXV0aFJlcXVlc3Q6OmdlbmVyYXRlX25vbmNlKCksCgkJCQkJ
ICAib2F1dGhfdGltZXN0YW1wIiA9PiBPQXV0aFJlcXVlc3Q6OmdlbmVyYXRlX3RpbWVzdGFt
cCgpLAoJCQkJCSAgIm9hdXRoX2NvbnN1bWVyX2tleSIgPT4gJGNvbnN1bWVyLT5rZXkpOwoJ
aWYgKCR0b2tlbikKCSAgJGRlZmF1bHRzWydvYXV0aF90b2tlbiddID0gJHRva2VuLT5rZXk7
CgoJJHBhcmFtZXRlcnMgPSBhcnJheV9tZXJnZSgkZGVmYXVsdHMsICRwYXJhbWV0ZXJzKTsK
CglyZXR1cm4gbmV3IE9BdXRoUmVxdWVzdCgkaHR0cF9tZXRob2QsICRodHRwX3VybCwgJHBh
cmFtZXRlcnMpOwogIH0KCiAgcHVibGljIGZ1bmN0aW9uIHNldF9wYXJhbWV0ZXIoJG5hbWUs
ICR2YWx1ZSwgJGFsbG93X2R1cGxpY2F0ZXMgPSB0cnVlKSB7CglpZiAoJGFsbG93X2R1cGxp
Y2F0ZXMgJiYgaXNzZXQoJHRoaXMtPnBhcmFtZXRlcnNbJG5hbWVdKSkgewoJICAvLyBXZSBo
YXZlIGFscmVhZHkgYWRkZWQgcGFyYW1ldGVyKHMpIHdpdGggdGhpcyBuYW1lLCBzbyBhZGQg
dG8gdGhlIGxpc3QKCSAgaWYgKGlzX3NjYWxhcigkdGhpcy0+cGFyYW1ldGVyc1skbmFtZV0p
KSB7CgkJLy8gVGhpcyBpcyB0aGUgZmlyc3QgZHVwbGljYXRlLCBzbyB0cmFuc2Zvcm0gc2Nh
bGFyIChzdHJpbmcpCgkJLy8gaW50byBhbiBhcnJheSBzbyB3ZSBjYW4gYWRkIHRoZSBkdXBs
aWNhdGVzCgkJJHRoaXMtPnBhcmFtZXRlcnNbJG5hbWVdID0gYXJyYXkoJHRoaXMtPnBhcmFt
ZXRlcnNbJG5hbWVdKTsKCSAgfQoKCSAgJHRoaXMtPnBhcmFtZXRlcnNbJG5hbWVdW10gPSAk
dmFsdWU7Cgl9IGVsc2UgewoJICAkdGhpcy0+cGFyYW1ldGVyc1skbmFtZV0gPSAkdmFsdWU7
Cgl9CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gZ2V0X3BhcmFtZXRlcigkbmFtZSkgewoJcmV0
dXJuIGlzc2V0KCR0aGlzLT5wYXJhbWV0ZXJzWyRuYW1lXSkgPyAkdGhpcy0+cGFyYW1ldGVy
c1skbmFtZV0gOiBudWxsOwogIH0KCiAgcHVibGljIGZ1bmN0aW9uIGdldF9wYXJhbWV0ZXJz
KCkgewoJcmV0dXJuICR0aGlzLT5wYXJhbWV0ZXJzOwogIH0KCiAgcHVibGljIGZ1bmN0aW9u
IHVuc2V0X3BhcmFtZXRlcigkbmFtZSkgewoJdW5zZXQoJHRoaXMtPnBhcmFtZXRlcnNbJG5h
bWVdKTsKICB9CgogIC8qKgogICAqIFRoZSByZXF1ZXN0IHBhcmFtZXRlcnMsIHNvcnRlZCBh
bmQgY29uY2F0ZW5hdGVkIGludG8gYSBub3JtYWxpemVkIHN0cmluZy4KICAgKiBAcmV0dXJu
IHN0cmluZwogICAqLwogIHB1YmxpYyBmdW5jdGlvbiBnZXRfc2lnbmFibGVfcGFyYW1ldGVy
cygpIHsKCS8vIEdyYWIgYWxsIHBhcmFtZXRlcnMKCSRwYXJhbXMgPSAkdGhpcy0+cGFyYW1l
dGVyczsKCgkvLyBSZW1vdmUgb2F1dGhfc2lnbmF0dXJlIGlmIHByZXNlbnQKCS8vIFJlZjog
U3BlYzogOS4xLjEgKCJUaGUgb2F1dGhfc2lnbmF0dXJlIHBhcmFtZXRlciBNVVNUIGJlIGV4
Y2x1ZGVkLiIpCglpZiAoaXNzZXQoJHBhcmFtc1snb2F1dGhfc2lnbmF0dXJlJ10pKSB7Cgkg
IHVuc2V0KCRwYXJhbXNbJ29hdXRoX3NpZ25hdHVyZSddKTsKCX0KCglyZXR1cm4gT0F1dGhV
dGlsOjpidWlsZF9odHRwX3F1ZXJ5KCRwYXJhbXMpOwogIH0KCiAgLyoqCiAgICogUmV0dXJu
cyB0aGUgYmFzZSBzdHJpbmcgb2YgdGhpcyByZXF1ZXN0CiAgICoKICAgKiBUaGUgYmFzZSBz
dHJpbmcgZGVmaW5lZCBhcyB0aGUgbWV0aG9kLCB0aGUgdXJsCiAgICogYW5kIHRoZSBwYXJh
bWV0ZXJzIChub3JtYWxpemVkKSwgZWFjaCB1cmxlbmNvZGVkCiAgICogYW5kIHRoZSBjb25j
YXRlZCB3aXRoICYuCiAgICovCiAgcHVibGljIGZ1bmN0aW9uIGdldF9zaWduYXR1cmVfYmFz
ZV9zdHJpbmcoKSB7CgkkcGFydHMgPSBhcnJheSgKCSAgJHRoaXMtPmdldF9ub3JtYWxpemVk
X2h0dHBfbWV0aG9kKCksCgkgICR0aGlzLT5nZXRfbm9ybWFsaXplZF9odHRwX3VybCgpLAoJ
ICAkdGhpcy0+Z2V0X3NpZ25hYmxlX3BhcmFtZXRlcnMoKQoJKTsKCgkkcGFydHMgPSBPQXV0
aFV0aWw6OnVybGVuY29kZV9yZmMzOTg2KCRwYXJ0cyk7CgoJcmV0dXJuIGltcGxvZGUoJyYn
LCAkcGFydHMpOwogIH0KCiAgLyoqCiAgICoganVzdCB1cHBlcmNhc2VzIHRoZSBodHRwIG1l
dGhvZAogICAqLwogIHB1YmxpYyBmdW5jdGlvbiBnZXRfbm9ybWFsaXplZF9odHRwX21ldGhv
ZCgpIHsKCXJldHVybiBzdHJ0b3VwcGVyKCR0aGlzLT5odHRwX21ldGhvZCk7CiAgfQoKICAv
KioKICAgKiBwYXJzZXMgdGhlIHVybCBhbmQgcmVidWlsZHMgaXQgdG8gYmUKICAgKiBzY2hl
bWU6Ly9ob3N0L3BhdGgKICAgKi8KICBwdWJsaWMgZnVuY3Rpb24gZ2V0X25vcm1hbGl6ZWRf
aHR0cF91cmwoKSB7CgkkcGFydHMgPSBwYXJzZV91cmwoJHRoaXMtPmh0dHBfdXJsKTsKCgkk
cG9ydCA9IEAkcGFydHNbJ3BvcnQnXTsKCSRzY2hlbWUgPSAkcGFydHNbJ3NjaGVtZSddOwoJ
JGhvc3QgPSAkcGFydHNbJ2hvc3QnXTsKCSRwYXRoID0gQCRwYXJ0c1sncGF0aCddOwoKCSRw
b3J0IG9yICRwb3J0ID0gKCRzY2hlbWUgPT0gJ2h0dHBzJykgPyAnNDQzJyA6ICc4MCc7CgoJ
aWYgKCgkc2NoZW1lID09ICdodHRwcycgJiYgJHBvcnQgIT0gJzQ0MycpCgkJfHwgKCRzY2hl
bWUgPT0gJ2h0dHAnICYmICRwb3J0ICE9ICc4MCcpKSB7CgkgICRob3N0ID0gIiRob3N0OiRw
b3J0IjsKCX0KCXJldHVybiAiJHNjaGVtZTovLyRob3N0JHBhdGgiOwogIH0KCiAgLyoqCiAg
ICogYnVpbGRzIGEgdXJsIHVzYWJsZSBmb3IgYSBHRVQgcmVxdWVzdAogICAqLwogIHB1Ymxp
YyBmdW5jdGlvbiB0b191cmwoKSB7CgkkcG9zdF9kYXRhID0gJHRoaXMtPnRvX3Bvc3RkYXRh
KCk7Cgkkb3V0ID0gJHRoaXMtPmdldF9ub3JtYWxpemVkX2h0dHBfdXJsKCk7CglpZiAoJHBv
c3RfZGF0YSkgewoJICAkb3V0IC49ICc/Jy4kcG9zdF9kYXRhOwoJfQoJcmV0dXJuICRvdXQ7
CiAgfQoKICAvKioKICAgKiBidWlsZHMgdGhlIGRhdGEgb25lIHdvdWxkIHNlbmQgaW4gYSBQ
T1NUIHJlcXVlc3QKICAgKi8KICBwdWJsaWMgZnVuY3Rpb24gdG9fcG9zdGRhdGEoKSB7Cgly
ZXR1cm4gT0F1dGhVdGlsOjpidWlsZF9odHRwX3F1ZXJ5KCR0aGlzLT5wYXJhbWV0ZXJzKTsK
ICB9CgogIC8qKgogICAqIGJ1aWxkcyB0aGUgQXV0aG9yaXphdGlvbjogaGVhZGVyCiAgICov
CiAgcHVibGljIGZ1bmN0aW9uIHRvX2hlYWRlcigkcmVhbG09bnVsbCkgewoJJGZpcnN0ID0g
dHJ1ZTsKICBpZigkcmVhbG0pIHsKCSAgJG91dCA9ICdBdXRob3JpemF0aW9uOiBPQXV0aCBy
ZWFsbT0iJyAuIE9BdXRoVXRpbDo6dXJsZW5jb2RlX3JmYzM5ODYoJHJlYWxtKSAuICciJzsK
CSAgJGZpcnN0ID0gZmFsc2U7Cgl9IGVsc2UKCSAgJG91dCA9ICdBdXRob3JpemF0aW9uOiBP
QXV0aCc7CgoJJHRvdGFsID0gYXJyYXkoKTsKCWZvcmVhY2ggKCR0aGlzLT5wYXJhbWV0ZXJz
IGFzICRrID0+ICR2KSB7CgkgIGlmIChzdWJzdHIoJGssIDAsIDUpICE9ICJvYXV0aCIpIGNv
bnRpbnVlOwoJICBpZiAoaXNfYXJyYXkoJHYpKSB7CgkJdGhyb3cgbmV3IE9BdXRoRXhjZXB0
aW9uKCdBcnJheXMgbm90IHN1cHBvcnRlZCBpbiBoZWFkZXJzJyk7CgkgIH0KCSAgJG91dCAu
PSAoJGZpcnN0KSA/ICcgJyA6ICcsJzsKCSAgJG91dCAuPSBPQXV0aFV0aWw6OnVybGVuY29k
ZV9yZmMzOTg2KCRrKSAuCgkJCSAgJz0iJyAuCgkJCSAgT0F1dGhVdGlsOjp1cmxlbmNvZGVf
cmZjMzk4NigkdikgLgoJCQkgICciJzsKCSAgJGZpcnN0ID0gZmFsc2U7Cgl9CglyZXR1cm4g
JG91dDsKICB9CgogIHB1YmxpYyBmdW5jdGlvbiBfX3RvU3RyaW5nKCkgewoJcmV0dXJuICR0
aGlzLT50b191cmwoKTsKICB9CgoKICBwdWJsaWMgZnVuY3Rpb24gc2lnbl9yZXF1ZXN0KCRz
aWduYXR1cmVfbWV0aG9kLCAkY29uc3VtZXIsICR0b2tlbikgewoJJHRoaXMtPnNldF9wYXJh
bWV0ZXIoCgkgICJvYXV0aF9zaWduYXR1cmVfbWV0aG9kIiwKCSAgJHNpZ25hdHVyZV9tZXRo
b2QtPmdldF9uYW1lKCksCgkgIGZhbHNlCgkpOwoJJHNpZ25hdHVyZSA9ICR0aGlzLT5idWls
ZF9zaWduYXR1cmUoJHNpZ25hdHVyZV9tZXRob2QsICRjb25zdW1lciwgJHRva2VuKTsKCSR0
aGlzLT5zZXRfcGFyYW1ldGVyKCJvYXV0aF9zaWduYXR1cmUiLCAkc2lnbmF0dXJlLCBmYWxz
ZSk7CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gYnVpbGRfc2lnbmF0dXJlKCRzaWduYXR1cmVf
bWV0aG9kLCAkY29uc3VtZXIsICR0b2tlbikgewoJJHNpZ25hdHVyZSA9ICRzaWduYXR1cmVf
bWV0aG9kLT5idWlsZF9zaWduYXR1cmUoJHRoaXMsICRjb25zdW1lciwgJHRva2VuKTsKCXJl
dHVybiAkc2lnbmF0dXJlOwogIH0KCiAgLyoqCiAgICogdXRpbCBmdW5jdGlvbjogY3VycmVu
dCB0aW1lc3RhbXAKICAgKi8KICBwcml2YXRlIHN0YXRpYyBmdW5jdGlvbiBnZW5lcmF0ZV90
aW1lc3RhbXAoKSB7CglyZXR1cm4gdGltZSgpOwogIH0KCiAgLyoqCiAgICogdXRpbCBmdW5j
dGlvbjogY3VycmVudCBub25jZQogICAqLwogIHByaXZhdGUgc3RhdGljIGZ1bmN0aW9uIGdl
bmVyYXRlX25vbmNlKCkgewoJJG10ID0gbWljcm90aW1lKCk7CgkkcmFuZCA9IG10X3JhbmQo
KTsKCglyZXR1cm4gbWQ1KCRtdCAuICRyYW5kKTsgLy8gbWQ1cyBsb29rIG5pY2VyIHRoYW4g
bnVtYmVycwogIH0KfQoKY2xhc3MgT0F1dGhTZXJ2ZXIgewogIHByb3RlY3RlZCAkdGltZXN0
YW1wX3RocmVzaG9sZCA9IDMwMDsgLy8gaW4gc2Vjb25kcywgZml2ZSBtaW51dGVzCiAgcHJv
dGVjdGVkICR2ZXJzaW9uID0gJzEuMCc7ICAgICAgICAgICAgIC8vIGhpIGJsYWluZQogIHBy
b3RlY3RlZCAkc2lnbmF0dXJlX21ldGhvZHMgPSBhcnJheSgpOwoKICBwcm90ZWN0ZWQgJGRh
dGFfc3RvcmU7CgogIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRkYXRhX3N0b3JlKSB7CgkkdGhp
cy0+ZGF0YV9zdG9yZSA9ICRkYXRhX3N0b3JlOwogIH0KCiAgcHVibGljIGZ1bmN0aW9uIGFk
ZF9zaWduYXR1cmVfbWV0aG9kKCRzaWduYXR1cmVfbWV0aG9kKSB7CgkkdGhpcy0+c2lnbmF0
dXJlX21ldGhvZHNbJHNpZ25hdHVyZV9tZXRob2QtPmdldF9uYW1lKCldID0KCSAgJHNpZ25h
dHVyZV9tZXRob2Q7CiAgfQoKICAvLyBoaWdoIGxldmVsIGZ1bmN0aW9ucwoKICAvKioKICAg
KiBwcm9jZXNzIGEgcmVxdWVzdF90b2tlbiByZXF1ZXN0CiAgICogcmV0dXJucyB0aGUgcmVx
dWVzdCB0b2tlbiBvbiBzdWNjZXNzCiAgICovCiAgcHVibGljIGZ1bmN0aW9uIGZldGNoX3Jl
cXVlc3RfdG9rZW4oJiRyZXF1ZXN0KSB7CgkkdGhpcy0+Z2V0X3ZlcnNpb24oJHJlcXVlc3Qp
OwoKCSRjb25zdW1lciA9ICR0aGlzLT5nZXRfY29uc3VtZXIoJHJlcXVlc3QpOwoKCS8vIG5v
IHRva2VuIHJlcXVpcmVkIGZvciB0aGUgaW5pdGlhbCB0b2tlbiByZXF1ZXN0CgkkdG9rZW4g
PSBOVUxMOwoKCSR0aGlzLT5jaGVja19zaWduYXR1cmUoJHJlcXVlc3QsICRjb25zdW1lciwg
JHRva2VuKTsKCgkvLyBSZXYgQSBjaGFuZ2UKCSRjYWxsYmFjayA9ICRyZXF1ZXN0LT5nZXRf
cGFyYW1ldGVyKCdvYXV0aF9jYWxsYmFjaycpOwoJJG5ld190b2tlbiA9ICR0aGlzLT5kYXRh
X3N0b3JlLT5uZXdfcmVxdWVzdF90b2tlbigkY29uc3VtZXIsICRjYWxsYmFjayk7CgoJcmV0
dXJuICRuZXdfdG9rZW47CiAgfQoKICAvKioKICAgKiBwcm9jZXNzIGFuIGFjY2Vzc190b2tl
biByZXF1ZXN0CiAgICogcmV0dXJucyB0aGUgYWNjZXNzIHRva2VuIG9uIHN1Y2Nlc3MKICAg
Ki8KICBwdWJsaWMgZnVuY3Rpb24gZmV0Y2hfYWNjZXNzX3Rva2VuKCYkcmVxdWVzdCkgewoJ
JHRoaXMtPmdldF92ZXJzaW9uKCRyZXF1ZXN0KTsKCgkkY29uc3VtZXIgPSAkdGhpcy0+Z2V0
X2NvbnN1bWVyKCRyZXF1ZXN0KTsKCgkvLyByZXF1aXJlcyBhdXRob3JpemVkIHJlcXVlc3Qg
dG9rZW4KCSR0b2tlbiA9ICR0aGlzLT5nZXRfdG9rZW4oJHJlcXVlc3QsICRjb25zdW1lciwg
InJlcXVlc3QiKTsKCgkkdGhpcy0+Y2hlY2tfc2lnbmF0dXJlKCRyZXF1ZXN0LCAkY29uc3Vt
ZXIsICR0b2tlbik7CgoJLy8gUmV2IEEgY2hhbmdlCgkkdmVyaWZpZXIgPSAkcmVxdWVzdC0+
Z2V0X3BhcmFtZXRlcignb2F1dGhfdmVyaWZpZXInKTsKCSRuZXdfdG9rZW4gPSAkdGhpcy0+
ZGF0YV9zdG9yZS0+bmV3X2FjY2Vzc190b2tlbigkdG9rZW4sICRjb25zdW1lciwgJHZlcmlm
aWVyKTsKCglyZXR1cm4gJG5ld190b2tlbjsKICB9CgogIC8qKgogICAqIHZlcmlmeSBhbiBh
cGkgY2FsbCwgY2hlY2tzIGFsbCB0aGUgcGFyYW1ldGVycwogICAqLwogIHB1YmxpYyBmdW5j
dGlvbiB2ZXJpZnlfcmVxdWVzdCgmJHJlcXVlc3QpIHsKCSR0aGlzLT5nZXRfdmVyc2lvbigk
cmVxdWVzdCk7CgkkY29uc3VtZXIgPSAkdGhpcy0+Z2V0X2NvbnN1bWVyKCRyZXF1ZXN0KTsK
CSR0b2tlbiA9ICR0aGlzLT5nZXRfdG9rZW4oJHJlcXVlc3QsICRjb25zdW1lciwgImFjY2Vz
cyIpOwoJJHRoaXMtPmNoZWNrX3NpZ25hdHVyZSgkcmVxdWVzdCwgJGNvbnN1bWVyLCAkdG9r
ZW4pOwoJcmV0dXJuIGFycmF5KCRjb25zdW1lciwgJHRva2VuKTsKICB9CgogIC8vIEludGVy
bmFscyBmcm9tIGhlcmUKICAvKioKICAgKiB2ZXJzaW9uIDEKICAgKi8KICBwcml2YXRlIGZ1
bmN0aW9uIGdldF92ZXJzaW9uKCYkcmVxdWVzdCkgewoJJHZlcnNpb24gPSAkcmVxdWVzdC0+
Z2V0X3BhcmFtZXRlcigib2F1dGhfdmVyc2lvbiIpOwoJaWYgKCEkdmVyc2lvbikgewoJICAv
LyBTZXJ2aWNlIFByb3ZpZGVycyBNVVNUIGFzc3VtZSB0aGUgcHJvdG9jb2wgdmVyc2lvbiB0
byBiZSAxLjAgaWYgdGhpcyBwYXJhbWV0ZXIgaXMgbm90IHByZXNlbnQuCgkgIC8vIENoYXB0
ZXIgNy4wICgiQWNjZXNzaW5nIFByb3RlY3RlZCBSZXNzb3VyY2VzIikKCSAgJHZlcnNpb24g
PSAnMS4wJzsKCX0KCWlmICgkdmVyc2lvbiAhPT0gJHRoaXMtPnZlcnNpb24pIHsKCSAgdGhy
b3cgbmV3IE9BdXRoRXhjZXB0aW9uKCJPQXV0aCB2ZXJzaW9uICckdmVyc2lvbicgbm90IHN1
cHBvcnRlZCIpOwoJfQoJcmV0dXJuICR2ZXJzaW9uOwogIH0KCiAgLyoqCiAgICogZmlndXJl
IG91dCB0aGUgc2lnbmF0dXJlIHdpdGggc29tZSBkZWZhdWx0cwogICAqLwogIHByaXZhdGUg
ZnVuY3Rpb24gZ2V0X3NpZ25hdHVyZV9tZXRob2QoJiRyZXF1ZXN0KSB7Cgkkc2lnbmF0dXJl
X21ldGhvZCA9CgkJQCRyZXF1ZXN0LT5nZXRfcGFyYW1ldGVyKCJvYXV0aF9zaWduYXR1cmVf
bWV0aG9kIik7CgoJaWYgKCEkc2lnbmF0dXJlX21ldGhvZCkgewoJICAvLyBBY2NvcmRpbmcg
dG8gY2hhcHRlciA3ICgiQWNjZXNzaW5nIFByb3RlY3RlZCBSZXNzb3VyY2VzIikgdGhlIHNp
Z25hdHVyZS1tZXRob2QKCSAgLy8gcGFyYW1ldGVyIGlzIHJlcXVpcmVkLCBhbmQgd2UgY2Fu
J3QganVzdCBmYWxsYmFjayB0byBQTEFJTlRFWFQKCSAgdGhyb3cgbmV3IE9BdXRoRXhjZXB0
aW9uKCdObyBzaWduYXR1cmUgbWV0aG9kIHBhcmFtZXRlci4gVGhpcyBwYXJhbWV0ZXIgaXMg
cmVxdWlyZWQnKTsKCX0KCglpZiAoIWluX2FycmF5KCRzaWduYXR1cmVfbWV0aG9kLAoJCQkJ
ICBhcnJheV9rZXlzKCR0aGlzLT5zaWduYXR1cmVfbWV0aG9kcykpKSB7CgkgIHRocm93IG5l
dyBPQXV0aEV4Y2VwdGlvbigKCQkiU2lnbmF0dXJlIG1ldGhvZCAnJHNpZ25hdHVyZV9tZXRo
b2QnIG5vdCBzdXBwb3J0ZWQgIiAuCgkJInRyeSBvbmUgb2YgdGhlIGZvbGxvd2luZzogIiAu
CgkJaW1wbG9kZSgiLCAiLCBhcnJheV9rZXlzKCR0aGlzLT5zaWduYXR1cmVfbWV0aG9kcykp
CgkgICk7Cgl9CglyZXR1cm4gJHRoaXMtPnNpZ25hdHVyZV9tZXRob2RzWyRzaWduYXR1cmVf
bWV0aG9kXTsKICB9CgogIC8qKgogICAqIHRyeSB0byBmaW5kIHRoZSBjb25zdW1lciBmb3Ig
dGhlIHByb3ZpZGVkIHJlcXVlc3QncyBjb25zdW1lciBrZXkKICAgKi8KICBwcml2YXRlIGZ1
bmN0aW9uIGdldF9jb25zdW1lcigmJHJlcXVlc3QpIHsKCSRjb25zdW1lcl9rZXkgPSBAJHJl
cXVlc3QtPmdldF9wYXJhbWV0ZXIoIm9hdXRoX2NvbnN1bWVyX2tleSIpOwoJaWYgKCEkY29u
c3VtZXJfa2V5KSB7CgkgIHRocm93IG5ldyBPQXV0aEV4Y2VwdGlvbigiSW52YWxpZCBjb25z
dW1lciBrZXkiKTsKCX0KCgkkY29uc3VtZXIgPSAkdGhpcy0+ZGF0YV9zdG9yZS0+bG9va3Vw
X2NvbnN1bWVyKCRjb25zdW1lcl9rZXkpOwoJaWYgKCEkY29uc3VtZXIpIHsKCSAgdGhyb3cg
bmV3IE9BdXRoRXhjZXB0aW9uKCJJbnZhbGlkIGNvbnN1bWVyIik7Cgl9CgoJcmV0dXJuICRj
b25zdW1lcjsKICB9CgogIC8qKgogICAqIHRyeSB0byBmaW5kIHRoZSB0b2tlbiBmb3IgdGhl
IHByb3ZpZGVkIHJlcXVlc3QncyB0b2tlbiBrZXkKICAgKi8KICBwcml2YXRlIGZ1bmN0aW9u
IGdldF90b2tlbigmJHJlcXVlc3QsICRjb25zdW1lciwgJHRva2VuX3R5cGU9ImFjY2VzcyIp
IHsKCSR0b2tlbl9maWVsZCA9IEAkcmVxdWVzdC0+Z2V0X3BhcmFtZXRlcignb2F1dGhfdG9r
ZW4nKTsKCSR0b2tlbiA9ICR0aGlzLT5kYXRhX3N0b3JlLT5sb29rdXBfdG9rZW4oCgkgICRj
b25zdW1lciwgJHRva2VuX3R5cGUsICR0b2tlbl9maWVsZAoJKTsKCWlmICghJHRva2VuKSB7
CgkgIHRocm93IG5ldyBPQXV0aEV4Y2VwdGlvbigiSW52YWxpZCAkdG9rZW5fdHlwZSB0b2tl
bjogJHRva2VuX2ZpZWxkIik7Cgl9CglyZXR1cm4gJHRva2VuOwogIH0KCiAgLyoqCiAgICog
YWxsLWluLW9uZSBmdW5jdGlvbiB0byBjaGVjayB0aGUgc2lnbmF0dXJlIG9uIGEgcmVxdWVz
dAogICAqIHNob3VsZCBndWVzcyB0aGUgc2lnbmF0dXJlIG1ldGhvZCBhcHByb3ByaWF0ZWx5
CiAgICovCiAgcHJpdmF0ZSBmdW5jdGlvbiBjaGVja19zaWduYXR1cmUoJiRyZXF1ZXN0LCAk
Y29uc3VtZXIsICR0b2tlbikgewoJLy8gdGhpcyBzaG91bGQgcHJvYmFibHkgYmUgaW4gYSBk
aWZmZXJlbnQgbWV0aG9kCgkkdGltZXN0YW1wID0gQCRyZXF1ZXN0LT5nZXRfcGFyYW1ldGVy
KCdvYXV0aF90aW1lc3RhbXAnKTsKCSRub25jZSA9IEAkcmVxdWVzdC0+Z2V0X3BhcmFtZXRl
cignb2F1dGhfbm9uY2UnKTsKCgkkdGhpcy0+Y2hlY2tfdGltZXN0YW1wKCR0aW1lc3RhbXAp
OwoJJHRoaXMtPmNoZWNrX25vbmNlKCRjb25zdW1lciwgJHRva2VuLCAkbm9uY2UsICR0aW1l
c3RhbXApOwoKCSRzaWduYXR1cmVfbWV0aG9kID0gJHRoaXMtPmdldF9zaWduYXR1cmVfbWV0
aG9kKCRyZXF1ZXN0KTsKCgkkc2lnbmF0dXJlID0gJHJlcXVlc3QtPmdldF9wYXJhbWV0ZXIo
J29hdXRoX3NpZ25hdHVyZScpOwoJJHZhbGlkX3NpZyA9ICRzaWduYXR1cmVfbWV0aG9kLT5j
aGVja19zaWduYXR1cmUoCgkgICRyZXF1ZXN0LAoJICAkY29uc3VtZXIsCgkgICR0b2tlbiwK
CSAgJHNpZ25hdHVyZQoJKTsKCglpZiAoISR2YWxpZF9zaWcpIHsKCSAgdGhyb3cgbmV3IE9B
dXRoRXhjZXB0aW9uKCJJbnZhbGlkIHNpZ25hdHVyZSIpOwoJfQogIH0KCiAgLyoqCiAgICog
Y2hlY2sgdGhhdCB0aGUgdGltZXN0YW1wIGlzIG5ldyBlbm91Z2gKICAgKi8KICBwcml2YXRl
IGZ1bmN0aW9uIGNoZWNrX3RpbWVzdGFtcCgkdGltZXN0YW1wKSB7CglpZiggISAkdGltZXN0
YW1wICkKCSAgdGhyb3cgbmV3IE9BdXRoRXhjZXB0aW9uKAoJCSdNaXNzaW5nIHRpbWVzdGFt
cCBwYXJhbWV0ZXIuIFRoZSBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQnCgkgICk7CgoJLy8gdmVy
aWZ5IHRoYXQgdGltZXN0YW1wIGlzIHJlY2VudGlzaAoJJG5vdyA9IHRpbWUoKTsKCWlmIChh
YnMoJG5vdyAtICR0aW1lc3RhbXApID4gJHRoaXMtPnRpbWVzdGFtcF90aHJlc2hvbGQpIHsK
CSAgdGhyb3cgbmV3IE9BdXRoRXhjZXB0aW9uKAoJCSJFeHBpcmVkIHRpbWVzdGFtcCwgeW91
cnMgJHRpbWVzdGFtcCwgb3VycyAkbm93IgoJICApOwoJfQogIH0KCiAgLyoqCiAgICogY2hl
Y2sgdGhhdCB0aGUgbm9uY2UgaXMgbm90IHJlcGVhdGVkCiAgICovCiAgcHJpdmF0ZSBmdW5j
dGlvbiBjaGVja19ub25jZSgkY29uc3VtZXIsICR0b2tlbiwgJG5vbmNlLCAkdGltZXN0YW1w
KSB7CglpZiggISAkbm9uY2UgKQoJICB0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24oCgkJJ01p
c3Npbmcgbm9uY2UgcGFyYW1ldGVyLiBUaGUgcGFyYW1ldGVyIGlzIHJlcXVpcmVkJwoJICAp
OwoKCS8vIHZlcmlmeSB0aGF0IHRoZSBub25jZSBpcyB1bmlxdWVpc2gKCSRmb3VuZCA9ICR0
aGlzLT5kYXRhX3N0b3JlLT5sb29rdXBfbm9uY2UoCgkgICRjb25zdW1lciwKCSAgJHRva2Vu
LAoJICAkbm9uY2UsCgkgICR0aW1lc3RhbXAKCSk7CglpZiAoJGZvdW5kKSB7CgkgIHRocm93
IG5ldyBPQXV0aEV4Y2VwdGlvbigiTm9uY2UgYWxyZWFkeSB1c2VkOiAkbm9uY2UiKTsKCX0K
ICB9Cgp9CgpjbGFzcyBPQXV0aERhdGFTdG9yZSB7CiAgZnVuY3Rpb24gbG9va3VwX2NvbnN1
bWVyKCRjb25zdW1lcl9rZXkpIHsKCS8vIGltcGxlbWVudCBtZQogIH0KCiAgZnVuY3Rpb24g
bG9va3VwX3Rva2VuKCRjb25zdW1lciwgJHRva2VuX3R5cGUsICR0b2tlbikgewoJLy8gaW1w
bGVtZW50IG1lCiAgfQoKICBmdW5jdGlvbiBsb29rdXBfbm9uY2UoJGNvbnN1bWVyLCAkdG9r
ZW4sICRub25jZSwgJHRpbWVzdGFtcCkgewoJLy8gaW1wbGVtZW50IG1lCiAgfQoKICBmdW5j
dGlvbiBuZXdfcmVxdWVzdF90b2tlbigkY29uc3VtZXIsICRjYWxsYmFjayA9IG51bGwpIHsK
CS8vIHJldHVybiBhIG5ldyB0b2tlbiBhdHRhY2hlZCB0byB0aGlzIGNvbnN1bWVyCiAgfQoK
ICBmdW5jdGlvbiBuZXdfYWNjZXNzX3Rva2VuKCR0b2tlbiwgJGNvbnN1bWVyLCAkdmVyaWZp
ZXIgPSBudWxsKSB7CgkvLyByZXR1cm4gYSBuZXcgYWNjZXNzIHRva2VuIGF0dGFjaGVkIHRv
IHRoaXMgY29uc3VtZXIKCS8vIGZvciB0aGUgdXNlciBhc3NvY2lhdGVkIHdpdGggdGhpcyB0
b2tlbiBpZiB0aGUgcmVxdWVzdCB0b2tlbgoJLy8gaXMgYXV0aG9yaXplZAoJLy8gc2hvdWxk
IGFsc28gaW52YWxpZGF0ZSB0aGUgcmVxdWVzdCB0b2tlbgogIH0KCn0KCmNsYXNzIE9BdXRo
VXRpbCB7CiAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiB1cmxlbmNvZGVfcmZjMzk4NigkaW5w
dXQpIHsKICBpZiAoaXNfYXJyYXkoJGlucHV0KSkgewoJcmV0dXJuIGFycmF5X21hcChhcnJh
eSgnT0F1dGhVdGlsJywgJ3VybGVuY29kZV9yZmMzOTg2JyksICRpbnB1dCk7CiAgfSBlbHNl
IGlmIChpc19zY2FsYXIoJGlucHV0KSkgewoJcmV0dXJuIHN0cl9yZXBsYWNlKAoJICAnKycs
CgkgICcgJywKCSAgc3RyX3JlcGxhY2UoJyU3RScsICd+JywgcmF3dXJsZW5jb2RlKCRpbnB1
dCkpCgkpOwogIH0gZWxzZSB7CglyZXR1cm4gJyc7CiAgfQp9CgoKICAvLyBUaGlzIGRlY29k
ZSBmdW5jdGlvbiBpc24ndCB0YWtpbmcgaW50byBjb25zaWRlcmF0aW9uIHRoZSBhYm92ZQog
IC8vIG1vZGlmaWNhdGlvbnMgdG8gdGhlIGVuY29kaW5nIHByb2Nlc3MuIEhvd2V2ZXIsIHRo
aXMgbWV0aG9kIGRvZXNuJ3QKICAvLyBzZWVtIHRvIGJlIHVzZWQgYW55d2hlcmUgc28gbGVh
dmluZyBpdCBhcyBpcy4KICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHVybGRlY29kZV9yZmMz
OTg2KCRzdHJpbmcpIHsKCXJldHVybiB1cmxkZWNvZGUoJHN0cmluZyk7CiAgfQoKICAvLyBV
dGlsaXR5IGZ1bmN0aW9uIGZvciB0dXJuaW5nIHRoZSBBdXRob3JpemF0aW9uOiBoZWFkZXIg
aW50bwogIC8vIHBhcmFtZXRlcnMsIGhhcyB0byBkbyBzb21lIHVuZXNjYXBpbmcKICAvLyBD
YW4gZmlsdGVyIG91dCBhbnkgbm9uLW9hdXRoIHBhcmFtZXRlcnMgaWYgbmVlZGVkIChkZWZh
dWx0IGJlaGF2aW91cikKICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIHNwbGl0X2hlYWRlcigk
aGVhZGVyLCAkb25seV9hbGxvd19vYXV0aF9wYXJhbWV0ZXJzID0gdHJ1ZSkgewoJJHBhdHRl
cm4gPSAnLygoWy1fYS16XSopPSgiKFteIl0qKSJ8KFteLF0qKSksPykvJzsKCSRvZmZzZXQg
PSAwOwoJJHBhcmFtcyA9IGFycmF5KCk7Cgl3aGlsZSAocHJlZ19tYXRjaCgkcGF0dGVybiwg
JGhlYWRlciwgJG1hdGNoZXMsIFBSRUdfT0ZGU0VUX0NBUFRVUkUsICRvZmZzZXQpID4gMCkg
ewoJICAkbWF0Y2ggPSAkbWF0Y2hlc1swXTsKCSAgJGhlYWRlcl9uYW1lID0gJG1hdGNoZXNb
Ml1bMF07CgkgICRoZWFkZXJfY29udGVudCA9IChpc3NldCgkbWF0Y2hlc1s1XSkpID8gJG1h
dGNoZXNbNV1bMF0gOiAkbWF0Y2hlc1s0XVswXTsKCSAgaWYgKHByZWdfbWF0Y2goJy9eb2F1
dGhfLycsICRoZWFkZXJfbmFtZSkgfHwgISRvbmx5X2FsbG93X29hdXRoX3BhcmFtZXRlcnMp
IHsKCQkkcGFyYW1zWyRoZWFkZXJfbmFtZV0gPSBPQXV0aFV0aWw6OnVybGRlY29kZV9yZmMz
OTg2KCRoZWFkZXJfY29udGVudCk7CgkgIH0KCSAgJG9mZnNldCA9ICRtYXRjaFsxXSArIHN0
cmxlbigkbWF0Y2hbMF0pOwoJfQoKCWlmIChpc3NldCgkcGFyYW1zWydyZWFsbSddKSkgewoJ
ICB1bnNldCgkcGFyYW1zWydyZWFsbSddKTsKCX0KCglyZXR1cm4gJHBhcmFtczsKICB9Cgog
IC8vIGhlbHBlciB0byB0cnkgdG8gc29ydCBvdXQgaGVhZGVycyBmb3IgcGVvcGxlIHdobyBh
cmVuJ3QgcnVubmluZyBhcGFjaGUKICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGdldF9oZWFk
ZXJzKCkgewoJaWYgKGZ1bmN0aW9uX2V4aXN0cygnYXBhY2hlX3JlcXVlc3RfaGVhZGVycycp
KSB7CgkgIC8vIHdlIG5lZWQgdGhpcyB0byBnZXQgdGhlIGFjdHVhbCBBdXRob3JpemF0aW9u
OiBoZWFkZXIKCSAgLy8gYmVjYXVzZSBhcGFjaGUgdGVuZHMgdG8gdGVsbCB1cyBpdCBkb2Vz
bid0IGV4aXN0CgkgICRoZWFkZXJzID0gYXBhY2hlX3JlcXVlc3RfaGVhZGVycygpOwoKCSAg
Ly8gc2FuaXRpemUgdGhlIG91dHB1dCBvZiBhcGFjaGVfcmVxdWVzdF9oZWFkZXJzIGJlY2F1
c2UKCSAgLy8gd2UgYWx3YXlzIHdhbnQgdGhlIGtleXMgdG8gYmUgQ2FzZWQtTGlrZS1UaGlz
IGFuZCBhcmgoKQoJICAvLyByZXR1cm5zIHRoZSBoZWFkZXJzIGluIHRoZSBzYW1lIGNhc2Ug
YXMgdGhleSBhcmUgaW4gdGhlCgkgIC8vIHJlcXVlc3QKCSAgJG91dCA9IGFycmF5KCk7Cgkg
IGZvcmVhY2goICRoZWFkZXJzIEFTICRrZXkgPT4gJHZhbHVlICkgewoJCSRrZXkgPSBzdHJf
cmVwbGFjZSgKCQkJIiAiLAoJCQkiLSIsCgkJCXVjd29yZHMoc3RydG9sb3dlcihzdHJfcmVw
bGFjZSgiLSIsICIgIiwgJGtleSkpKQoJCSAgKTsKCQkkb3V0WyRrZXldID0gJHZhbHVlOwoJ
ICB9Cgl9IGVsc2UgewoJICAvLyBvdGhlcndpc2Ugd2UgZG9uJ3QgaGF2ZSBhcGFjaGUgYW5k
IGFyZSBqdXN0IGdvaW5nIHRvIGhhdmUgdG8gaG9wZQoJICAvLyB0aGF0ICRfU0VSVkVSIGFj
dHVhbGx5IGNvbnRhaW5zIHdoYXQgd2UgbmVlZAoJICAkb3V0ID0gYXJyYXkoKTsKCSAgaWYo
IGlzc2V0KCRfU0VSVkVSWydDT05URU5UX1RZUEUnXSkgKQoJCSRvdXRbJ0NvbnRlbnQtVHlw
ZSddID0gJF9TRVJWRVJbJ0NPTlRFTlRfVFlQRSddOwoJICBpZiggaXNzZXQoJF9FTlZbJ0NP
TlRFTlRfVFlQRSddKSApCgkJJG91dFsnQ29udGVudC1UeXBlJ10gPSAkX0VOVlsnQ09OVEVO
VF9UWVBFJ107CgoJICBmb3JlYWNoICgkX1NFUlZFUiBhcyAka2V5ID0+ICR2YWx1ZSkgewoJ
CWlmIChzdWJzdHIoJGtleSwgMCwgNSkgPT0gIkhUVFBfIikgewoJCSAgLy8gdGhpcyBpcyBj
aGFvcywgYmFzaWNhbGx5IGl0IGlzIGp1c3QgdGhlcmUgdG8gY2FwaXRhbGl6ZSB0aGUgZmly
c3QKCQkgIC8vIGxldHRlciBvZiBldmVyeSB3b3JkIHRoYXQgaXMgbm90IGFuIGluaXRpYWwg
SFRUUCBhbmQgc3RyaXAgSFRUUAoJCSAgLy8gY29kZSBmcm9tIHByemVtZWsKCQkgICRrZXkg
PSBzdHJfcmVwbGFjZSgKCQkJIiAiLAoJCQkiLSIsCgkJCXVjd29yZHMoc3RydG9sb3dlcihz
dHJfcmVwbGFjZSgiXyIsICIgIiwgc3Vic3RyKCRrZXksIDUpKSkpCgkJICApOwoJCSAgJG91
dFska2V5XSA9ICR2YWx1ZTsKCQl9CgkgIH0KCX0KCXJldHVybiAkb3V0OwogIH0KCiAgLy8g
VGhpcyBmdW5jdGlvbiB0YWtlcyBhIGlucHV0IGxpa2UgYT1iJmE9YyZkPWUgYW5kIHJldHVy
bnMgdGhlIHBhcnNlZAogIC8vIHBhcmFtZXRlcnMgbGlrZSB0aGlzCiAgLy8gYXJyYXkoJ2En
ID0+IGFycmF5KCdiJywnYycpLCAnZCcgPT4gJ2UnKQogIHB1YmxpYyBzdGF0aWMgZnVuY3Rp
b24gcGFyc2VfcGFyYW1ldGVycyggJGlucHV0ICkgewoJaWYgKCFpc3NldCgkaW5wdXQpIHx8
ICEkaW5wdXQpIHJldHVybiBhcnJheSgpOwoKCSRwYWlycyA9IGV4cGxvZGUoJyYnLCAkaW5w
dXQpOwoKCSRwYXJzZWRfcGFyYW1ldGVycyA9IGFycmF5KCk7Cglmb3JlYWNoICgkcGFpcnMg
YXMgJHBhaXIpIHsKCSAgJHNwbGl0ID0gZXhwbG9kZSgnPScsICRwYWlyLCAyKTsKCSAgJHBh
cmFtZXRlciA9IE9BdXRoVXRpbDo6dXJsZGVjb2RlX3JmYzM5ODYoJHNwbGl0WzBdKTsKCSAg
JHZhbHVlID0gaXNzZXQoJHNwbGl0WzFdKSA/IE9BdXRoVXRpbDo6dXJsZGVjb2RlX3JmYzM5
ODYoJHNwbGl0WzFdKSA6ICcnOwoKCSAgaWYgKGlzc2V0KCRwYXJzZWRfcGFyYW1ldGVyc1sk
cGFyYW1ldGVyXSkpIHsKCQkvLyBXZSBoYXZlIGFscmVhZHkgcmVjaWV2ZWQgcGFyYW1ldGVy
KHMpIHdpdGggdGhpcyBuYW1lLCBzbyBhZGQgdG8gdGhlIGxpc3QKCQkvLyBvZiBwYXJhbWV0
ZXJzIHdpdGggdGhpcyBuYW1lCgoJCWlmIChpc19zY2FsYXIoJHBhcnNlZF9wYXJhbWV0ZXJz
WyRwYXJhbWV0ZXJdKSkgewoJCSAgLy8gVGhpcyBpcyB0aGUgZmlyc3QgZHVwbGljYXRlLCBz
byB0cmFuc2Zvcm0gc2NhbGFyIChzdHJpbmcpIGludG8gYW4gYXJyYXkKCQkgIC8vIHNvIHdl
IGNhbiBhZGQgdGhlIGR1cGxpY2F0ZXMKCQkgICRwYXJzZWRfcGFyYW1ldGVyc1skcGFyYW1l
dGVyXSA9IGFycmF5KCRwYXJzZWRfcGFyYW1ldGVyc1skcGFyYW1ldGVyXSk7CgkJfQoKCQkk
cGFyc2VkX3BhcmFtZXRlcnNbJHBhcmFtZXRlcl1bXSA9ICR2YWx1ZTsKCSAgfSBlbHNlIHsK
CQkkcGFyc2VkX3BhcmFtZXRlcnNbJHBhcmFtZXRlcl0gPSAkdmFsdWU7CgkgIH0KCX0KCXJl
dHVybiAkcGFyc2VkX3BhcmFtZXRlcnM7CiAgfQoKICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9u
IGJ1aWxkX2h0dHBfcXVlcnkoJHBhcmFtcykgewoJaWYgKCEkcGFyYW1zKSByZXR1cm4gJyc7
CgoJLy8gVXJsZW5jb2RlIGJvdGgga2V5cyBhbmQgdmFsdWVzCgkka2V5cyA9IE9BdXRoVXRp
bDo6dXJsZW5jb2RlX3JmYzM5ODYoYXJyYXlfa2V5cygkcGFyYW1zKSk7CgkkdmFsdWVzID0g
T0F1dGhVdGlsOjp1cmxlbmNvZGVfcmZjMzk4NihhcnJheV92YWx1ZXMoJHBhcmFtcykpOwoJ
JHBhcmFtcyA9IGFycmF5X2NvbWJpbmUoJGtleXMsICR2YWx1ZXMpOwoKCS8vIFBhcmFtZXRl
cnMgYXJlIHNvcnRlZCBieSBuYW1lLCB1c2luZyBsZXhpY29ncmFwaGljYWwgYnl0ZSB2YWx1
ZSBvcmRlcmluZy4KCS8vIFJlZjogU3BlYzogOS4xLjEgKDEpCgl1a3NvcnQoJHBhcmFtcywg
J3N0cmNtcCcpOwoKCSRwYWlycyA9IGFycmF5KCk7Cglmb3JlYWNoICgkcGFyYW1zIGFzICRw
YXJhbWV0ZXIgPT4gJHZhbHVlKSB7CgkgIGlmIChpc19hcnJheSgkdmFsdWUpKSB7CgkJLy8g
SWYgdHdvIG9yIG1vcmUgcGFyYW1ldGVycyBzaGFyZSB0aGUgc2FtZSBuYW1lLCB0aGV5IGFy
ZSBzb3J0ZWQgYnkgdGhlaXIgdmFsdWUKCQkvLyBSZWY6IFNwZWM6IDkuMS4xICgxKQoJCW5h
dHNvcnQoJHZhbHVlKTsKCQlmb3JlYWNoICgkdmFsdWUgYXMgJGR1cGxpY2F0ZV92YWx1ZSkg
ewoJCSAgJHBhaXJzW10gPSAkcGFyYW1ldGVyIC4gJz0nIC4gJGR1cGxpY2F0ZV92YWx1ZTsK
CQl9CgkgIH0gZWxzZSB7CgkJJHBhaXJzW10gPSAkcGFyYW1ldGVyIC4gJz0nIC4gJHZhbHVl
OwoJICB9Cgl9CgkvLyBGb3IgZWFjaCBwYXJhbWV0ZXIsIHRoZSBuYW1lIGlzIHNlcGFyYXRl
ZCBmcm9tIHRoZSBjb3JyZXNwb25kaW5nIHZhbHVlIGJ5IGFuICc9JyBjaGFyYWN0ZXIgKEFT
Q0lJIGNvZGUgNjEpCgkvLyBFYWNoIG5hbWUtdmFsdWUgcGFpciBpcyBzZXBhcmF0ZWQgYnkg
YW4gJyYnIGNoYXJhY3RlciAoQVNDSUkgY29kZSAzOCkKCXJldHVybiBpbXBsb2RlKCcmJywg
JHBhaXJzKTsKICB9Cn0iO3M6MzoibWQ1IjtzOjMyOiJiZmIyN2E3YzQyYWNjZmIxYTIwMDg4
YmIwNDEzMDhhMSI7fQ==

# arc_twitter v4.2.1
# <a href="http://www.twitter.com">Twitter</a> for Textpattern
# Andy Carter
# http://andy-carter.com/

# ......................................................................
# This is a plugin for Textpattern - http://textpattern.com/
# To install: textpattern > admin > plugins
# Paste the following text into the 'Install plugin' box:
# ......................................................................

YToxMTp7czo0OiJuYW1lIjtzOjExOiJhcmNfdHdpdHRlciI7czo3OiJ2ZXJzaW9uIjtzOjU6
IjQuMi4xIjtzOjY6ImF1dGhvciI7czoxMToiQW5keSBDYXJ0ZXIiO3M6MTA6ImF1dGhvcl91
cmkiO3M6MjM6Imh0dHA6Ly9hbmR5LWNhcnRlci5jb20vIjtzOjExOiJkZXNjcmlwdGlvbiI7
czo2MDoiPGEgaHJlZj0iaHR0cDovL3d3dy50d2l0dGVyLmNvbSI+VHdpdHRlcjwvYT4gZm9y
IFRleHRwYXR0ZXJuIjtzOjU6Im9yZGVyIjtzOjE6IjUiO3M6NDoidHlwZSI7czoxOiI1Ijtz
OjU6ImZsYWdzIjtzOjE6IjMiO3M6NDoiaGVscCI7czoxODM3NjoiCTxoMSBjbGFzcz0idGl0
bGUiPjxzcGFuIGNsYXNzPSJjYXBzIj5UWFA8L3NwYW4+IFR3ZWV0IChhcmNfdHdpdHRlciBm
b3IgVGV4dHBhdHRlcm4pPC9oMT4KCgk8b2w+CgkJPGxpPjxhIGhyZWY9IiNhcmNfdHdpdHRl
cl9hdXRob3IiPkF1dGhvcjwvYT48L2xpPgoJCTxsaT48YSBocmVmPSIjYXJjX3R3aXR0ZXJf
aW5zdGFsbGF0aW9uIj5JbnN0YWxsYXRpb24gLyBVbmluc3RhbGxhdGlvbjwvYT48L2xpPgoJ
CTxsaT48YSBocmVmPSIjYXJjX3R3aXR0ZXJfdGFnIj5UaGUgYXJjX3R3aXR0ZXIgdGFnPC9h
PjwvbGk+CgkJPGxpPjxhIGhyZWY9IiNhcmNfdHdpdHRlcl9zZWFyY2hfdGFnIj5UaGUgYXJj
X3R3aXR0ZXJfc2VhcmNoIHRhZzwvYT48L2xpPgoJCTxsaT48YSBocmVmPSIjYXJjX3R3aXR0
ZXJfdHdlZXRfYnV0dG9uX3RhZyI+VGhlIGFyY190d2l0dGVyX3R3ZWV0X2J1dHRvbiB0YWc8
L2E+PC9saT4KCQk8bGk+PGEgaHJlZj0iI2FyY190d2l0dGVyX2ZvbGxvd19idXR0b25fdGFn
Ij5UaGUgYXJjX3R3aXR0ZXJfZm9sbG93X2J1dHRvbiB0YWc8L2E+PC9saT4KCQk8bGk+PGEg
aHJlZj0iI2FyY190d2l0dGVyX3R3ZWV0X3VybCI+VGhlIGFyY190d2l0dGVyX3R3ZWV0X3Vy
bCB0YWc8L2E+PC9saT4KCQk8bGk+PGEgaHJlZj0iI2FyY190d2l0dGVyX3Rpbnl1cmwiPlRo
ZSBhcmNfdHdpdHRlcl90aW55dXJsIHRhZzwvYT48L2xpPgoJCTxsaT48YSBocmVmPSIjYXJj
X3R3aXR0ZXJfY2FjaGluZyI+Q2FjaGluZzwvYT48L2xpPgoJCTxsaT48YSBocmVmPSIjYXJj
X3R3aXR0ZXJfcHJlZnMiPlByZWZlcmVuY2VzPC9hPjwvbGk+CgkJPGxpPjxhIGhyZWY9IiNh
cmNfdHdpdHRlcl9hcnRpY2xlIj5Ud2VldGluZyBhcnRpY2xlczwvYT48L2xpPgoJCTxsaT48
YSBocmVmPSIjYXJjX3R3aXR0ZXJfYWRtaW4iPlRoZSBUd2l0dGVyIHRhYjwvYT48L2xpPgoJ
PC9vbD4KCgk8cD48c3BhbiBjbGFzcz0iY2FwcyI+VFhQPC9zcGFuPiBUd2VldCBwcm92aWRl
cyBhY2Nlc3MgdG8geW91ciBUd2l0dGVyIGFjY291bnQgdGhyb3VnaCBib3RoIHRoZSBhZG1p
biBpbnRlcmZhY2UgYW5kIHRoZSBwdWJsaWMgc2lkZSBvZiB5b3VyIHNpdGUuIFVwZGF0ZSBU
d2l0dGVyIHdoZW4geW91IHBvc3QgYSBuZXcgYXJ0aWNsZSAod2l0aCBhcnRpY2xlLWJ5LWFy
dGljbGUgb3B0IG91dCBvcHRpb24pLCB1cGRhdGUgYW5kIHZpZXcgeW91ciBUd2l0dGVyIGZl
ZWQgdGhyb3VnaCB0aGUgYWRtaW4gVHdpdHRlciB0YWIsIGFuZCBkaXNwbGF5IFR3aXR0ZXIg
ZmVlZHMgb24geW91ciBzaXRlLjwvcD4KCgk8cD5SZXF1aXJlbWVudHM6LTwvcD4KCgk8dWw+
CgkJPGxpPlRleHRwYXR0ZXJuIDQuNSs8L2xpPgoJCTxsaT48c3BhbiBjbGFzcz0iY2FwcyI+
UEhQPC9zcGFuPiA1IGFuZCBjVVJMPC9saT4KCTwvdWw+CgoJPGgyIGNsYXNzPSJzZWN0aW9u
IiBpZD0iYXJjX3R3aXR0ZXJfYXV0aG9yIj5BdXRob3I8L2gyPgoKCTxwPjxhIGhyZWY9Imh0
dHA6Ly9hbmR5LWNhcnRlci5jb20iPkFuZHkgQ2FydGVyPC9hPi4gRm9yIG90aGVyIFRleHRw
YXR0ZXJuIHBsdWdpbnMgYnkgbWUgdmlzaXQgbXkgPGEgaHJlZj0iaHR0cDovL2FuZHktY2Fy
dGVyLmNvbS90eHAiPlBsdWdpbnMgcGFnZTwvYT4uPC9wPgoKCTxwPkNvbnRyaWJ1dG9yczog
QW5keSBDYXJ0ZXIsIFBoaWwgV2FyZWhhbSBhbmQgVG9tbXkgU2NobXVja2VyLjwvcD4KCgk8
cD5UaGFua3MgdG8gPGEgaHJlZj0iaHR0cDovL21hbmZyZS5uZXQvIj5NaWNoYWVsIE1hbmZy
ZTwvYT4gZm9yIGluc3BpcmF0aW9uIGZvciB0aGUgYXJ0aWNsZSB0d2VldCBwYXJ0IG9mIHRo
aXMgcGx1Z2luIGJhc2VkIG9uIGhpcyA8c3BhbiBjbGFzcz0idGFnIj5tZW1fdHdpdHRlcjwv
c3Bhbj4gcGx1Z2luLiAgQWRkaXRpb25hbCB0aGFua3MgdG8gdGhlIGdyZWF0IFRleHRwYXR0
ZXJuIGNvbW11bml0eSBmb3IgaGVscGluZyB0byB0ZXN0IHRoaXMgcGx1Z2luIGFuZCBmb3Ig
c3VnZ2VzdGluZyBuZXcgZmVhdHVyZXMuIFRoZSBPQXV0aCBwYXJ0IG9mIHRoZSBwbHVnaW4g
aXMgdGhhbmtzIHRvIDxhIGhyZWY9Imh0dHA6Ly90d2l0dGVyLmNvbS9hYnJhaGFtIj5BYnJh
aGFtIFdpbGxpYW1zPC9hPi48L3A+CgoJPGgyIGNsYXNzPSJzZWN0aW9uIiBpZD0iYXJjX3R3
aXR0ZXJfaW5zdGFsbGF0aW9uIj5JbnN0YWxsYXRpb24gLyBVbmluc3RhbGxhdGlvbjwvaDI+
CgoJPHA+VG8gaW5zdGFsbCBnbyB0byB0aGUgJiM4MjE2O3BsdWdpbnMmIzgyMTc7IHRhYiB1
bmRlciAmIzgyMTY7YWRtaW4mIzgyMTc7IGFuZCBwYXN0ZSB0aGUgcGx1Z2luIGNvZGUgaW50
byB0aGUgJiM4MjE2O0luc3RhbGwgcGx1Z2luJiM4MjE3OyBib3gsICYjODIxNjt1cGxvYWQm
IzgyMTc7IGFuZCB0aGVuICYjODIxNjtpbnN0YWxsJiM4MjE3Oy4gVGhlIHBsdWdpbiB3aWxs
IGJlIGF1dG9tYXRpY2FsbHkgYWN0aXZhdGVkLjwvcD4KCgk8cD5CZWZvcmUgeW91IHN0YXJ0
IHVzaW5nIDxzcGFuIGNsYXNzPSJ0YWciPmFyY190d2l0dGVyPC9zcGFuPiB5b3Ugd2lsbCBu
ZWVkIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBjYWNoZSBkaXJlY3RvcnkgaXMgd3JpdGFibGUu
IFNlZSB0aGUgJiM4MjE2O0NhY2hpbmcmIzgyMTc7IHN1YnNlY3Rpb24gYmVsb3cgZm9yIGZ1
cnRoZXIgaW5mb3JtYXRpb24uPC9wPgoKCTxwPjxzcGFuIGNsYXNzPSJ0YWciPmFyY190d2l0
dGVyPC9zcGFuPiBzaG91bGQgbm93IGJlIHJlYWR5IGZvciB1c2Ugb24gdGhlIHB1YmxpYy1z
aWRlIG9mIHlvdXIgc2l0ZS48L3A+CgoJPHA+VG8gdW5sb2NrIHRoZSBhZG1pbiBmZWF0dXJl
cyBvZiB0aGlzIHBsdWdpbiB5b3Ugd2lsbCBuZWVkIHRvIGFzc29jaWF0ZSB5b3VyIHNpdGUg
d2l0aCBhIFR3aXR0ZXIgYWNjb3VudCBieSBjb25uZWN0aW5nIHRvIFR3aXR0ZXIgZnJvbSB0
aGUgcGx1Z2luJiM4MjE3O3Mgb3B0aW9ucyBzY3JlZW4uIENsaWNrIG9uIHRoZSBsaW5rIHRv
IGNvbm5lY3QgdG8gVHdpdHRlciwgeW91IHdpbGwgYmUgYXNrZWQgdG8gbG9naW4gdG8gVHdp
dHRlciwgY2xpY2tpbmcgdGhpcyBsaW5rIHdpbGwgdGVtcG9yYXJpbHkgdGFrZSB5b3UgdG8g
dGhlIFR3aXR0ZXIgc2l0ZSB3aGVyZSB5b3Ugd2lsbCBiZSBhc2tlZCB0byBsb2dpbiBhbmQg
YXBwcm92ZSBhY2Nlc3MgZm9yIDxzcGFuIGNsYXNzPSJjYXBzIj5UWFA8L3NwYW4+IFR3ZWV0
IHRvIHJlYWQgYW5kIHdyaXRlIHRvIHlvdXIgVHdpdHRlciBhY2NvdW50LiBJZiBhbGwgaXMg
c3VjY2Vzc2Z1bCB5b3Ugd2lsbCBiZSByZXR1cm5lZCB0byB0aGUgb3B0aW9ucyBzY3JlZW4g
YW5kIHlvdXIgdXNlciBuYW1lIHdpbGwgYXBwZWFyLjwvcD4KCgk8cD5BdCBhbnkgdGltZSB5
b3UgY2FuIGRpc2Fzc29jaWF0ZSB5b3VyIFR3aXR0ZXIgYWNjb3VudCB3aXRoIDxzcGFuIGNs
YXNzPSJjYXBzIj5UWFA8L3NwYW4+IFR3ZWV0IHZpYSB5b3VyIFR3aXR0ZXIgYWNjb3VudCBw
cmVmZXJlbmNlcyBvbiB0aGUgPGEgaHJlZj0iaHR0cDovL3d3dy50d2l0dGVyLmNvbSI+VHdp
dHRlciB3ZWJzaXRlPC9hPi48L3A+CgoJPHA+VG8gdW5pbnN0YWxsIDxzcGFuIGNsYXNzPSJ0
YWciPmFyY190d2l0dGVyPC9zcGFuPiBzaW1wbHkgZGVsZXRlIHRoZSBwbHVnaW4gZnJvbSB0
aGUgJiM4MjE2O1BsdWdpbnMmIzgyMTc7IHRhYi4gIFRoaXMgd2lsbCByZW1vdmUgdGhlIHBs
dWdpbiBjb2RlLCBkZWxldGUgcmVsYXRlZCBwcmVmZXJlbmNlcyBhbmQgZHJvcCB0aGUgPHNw
YW4gY2xhc3M9InRhZyI+YXJjX3R3aXR0ZXI8L3NwYW4+IHRhYmxlIGZyb20geW91ciBUZXh0
cGF0dGVybiBkYXRhYmFzZS48L3A+CgoJPGgyIGNsYXNzPSJzZWN0aW9uIiBpZD0iYXJjX3R3
aXR0ZXJfdGFnIj5UaGUgYXJjX3R3aXR0ZXIgdGFnPC9oMj4KCgk8aDM+U3ludGF4PC9oMz4K
Cgk8cD4mbHQ7dHhwOmFyY190d2l0dGVyIHVzZXI9JnF1b3Q7ZHJtb25rZXluaW5qYSZxdW90
OyAvJmd0OzwvcD4KCgk8aDM+VXNhZ2U8L2gzPgoKCTx0YWJsZT4KCQk8dHI+CgkJCTx0aD5B
dHRyaWJ1dGU8L3RoPgoJCQk8dGg+RGVzY3JpcHRpb248L3RoPgoJCQk8dGg+RGVmYXVsdDwv
dGg+CgkJCTx0aD5FeGFtcGxlPC90aD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPnVzZXI8L3Rk
PgoJCQk8dGQ+VHdpdHRlciB1c2VyIG5hbWU8L3RkPgoJCQk8dGQ+IDxlbT5hcmNfdHdpdHRl
ciB1c2VybmFtZTwvZW0+PC90ZD4KCQkJPHRkPnVzZXI9JnF1b3Q7ZHJtb25rZXluaW5qYSZx
dW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5yZXR3ZWV0czwvdGQ+CgkJCTx0ZD4x
IHRvIGluY2x1ZGUgcmV0d2VldHMsIDAgdG8gZXhjbHVkZSB0aGVtIGZyb20gdGhlIGZlZWQ8
L3RkPgoJCQk8dGQ+MDwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5yZXBsaWVzPC90ZD4K
CQkJPHRkPjEgdG8gaW5jbHVkZSByZXBsaWVzLCAwIHRvIGV4Y2x1ZGUgdGhlbSBmcm9tIHRo
ZSBmZWVkPC90ZD4KCQkJPHRkPjE8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+bGltaXQ8
L3RkPgoJCQk8dGQ+TWF4aW11bSBudW1iZXIgb2YgdHdlZXRzIHRvIGRpc3BsYXkgKG1heC4g
MjAwKTwvdGQ+CgkJCTx0ZD4xMDwvdGQ+CgkJCTx0ZD5saW1pdD0mcXVvdDsyNSZxdW90Ozwv
dGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5mZXRjaDwvdGQ+CgkJCTx0ZD5NYXhpbXVtIG51
bWJlciBvZiB0d2VldHMgdG8gcmV0cmlldmUgZnJvbSBUd2l0dGVyIChtYXguIDIwMCk8c3Vw
IGNsYXNzPSJmb290bm90ZSI+PGEgaHJlZj0iI2ZuMjA5MjI5NzI3MzUyYTBhNzQ5MjM4NTAi
PjE8L2E+PC9zdXA+PC90ZD4KCQkJPHRkPjA8L3RkPgoJCQk8dGQ+ZmV0Y2g9JnF1b3Q7NTAm
cXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+ZnVsbF91cmxzPC90ZD4KCQkJPHRk
PjEgdG8gZGlzcGxheSBmdWxsIDxzcGFuIGNsYXNzPSJjYXBzIj48c3BhbiBjbGFzcz0iY2Fw
cyI+VVJMPC9zcGFuPjwvc3Bhbj5zLCAwIGZvciB0LmNvIDxzcGFuIGNsYXNzPSJjYXBzIj48
c3BhbiBjbGFzcz0iY2FwcyI+VVJMPC9zcGFuPjwvc3Bhbj5zPC90ZD4KCQkJPHRkPjA8L3Rk
PgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+ZGF0ZWZvcm1hdDwvdGQ+CgkJCTx0ZD5Gb3JtYXQg
dGhhdCB1cGRhdGUgZGF0ZXMgd2lsbCBhcHBlYXIgYXM8L3RkPgoJCQk8dGQ+IDxlbT5BcmNo
aXZlIGRhdGUgZm9ybWF0PC9lbT48L3RkPgoJCQk8dGQ+ZGF0ZWZvcm1hdD0mcXVvdDslYiAl
T2UsICVJOiVNICVwJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmxhYmVsPC90
ZD4KCQkJPHRkPkxhYmVsIGZvciB0aGUgdG9wIG9mIHRoZSBsaXN0PC90ZD4KCQkJPHRkPiA8
ZW0+bm8gbGFiZWw8L2VtPjwvdGQ+CgkJCTx0ZD5sYWJlbD0mcXVvdDtNeSBUd2l0dGVyIHRp
bWVsaW5lJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmxhYmVsdGFnPC90ZD4K
CQkJPHRkPkluZGVwZW5kZW50IHdyYXB0YWcgZm9yIGxhYmVsPC90ZD4KCQkJPHRkPiA8ZW0+
dW5zZXQ8L2VtPjwvdGQ+CgkJCTx0ZD5sYWJlbHRhZz0mcXVvdDtoMyZxdW90OzwvdGQ+CgkJ
PC90cj4KCQk8dHI+CgkJCTx0ZD5icmVhazwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2Fw
cyI+PHNwYW4gY2xhc3M9ImNhcHMiPkhUTUw8L3NwYW4+PC9zcGFuPiB0YWcgKHdpdGhvdXQg
YnJhY2tldHMpLCBvciBzdHJpbmcsIHVzZWQgdG8gc2VwYXJhdGUgdGhlIHVwZGF0ZXM8L3Rk
PgoJCQk8dGQ+bGk8L3RkPgoJCQk8dGQ+YnJlYWs9JnF1b3Q7YnImcXVvdDs8L3RkPgoJCTwv
dHI+CgkJPHRyPgoJCQk8dGQ+d3JhcHRhZzwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2Fw
cyI+PHNwYW4gY2xhc3M9ImNhcHMiPkhUTUw8L3NwYW4+PC9zcGFuPiB0YWcgdG8gYmUgdXNl
ZCBhcyB0aGUgd3JhcHRhZywgd2l0aG91dCBicmFja2V0czwvdGQ+CgkJCTx0ZD4gPGVtPnVu
c2V0PC9lbT48L3RkPgoJCQk8dGQ+d3JhcHRhZz0mcXVvdDt1bCZxdW90OzwvdGQ+CgkJPC90
cj4KCQk8dHI+CgkJCTx0ZD5jbGFzczwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2FwcyI+
PHNwYW4gY2xhc3M9ImNhcHMiPkNTUzwvc3Bhbj48L3NwYW4+IGNsYXNzIGF0dHJpYnV0ZSBm
b3Igd3JhcHRhZzwvdGQ+CgkJCTx0ZD5hcmNfdHdpdHRlcjwvdGQ+CgkJCTx0ZD5jbGFzcz0m
cXVvdDt0d2l0dGVyJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmNsYXNzX3Bv
c3RlZDwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2FwcyI+PHNwYW4gY2xhc3M9ImNhcHMi
PkNTUzwvc3Bhbj48L3NwYW4+IGNsYXNzIGF0dHJpYnV0ZSBhcHBsaWVkIHRvIHNwYW4gdGFn
IGFyb3VuZCBwb3N0ZWQgZGF0ZTwvdGQ+CgkJCTx0ZD5hcmNfdHdpdHRlci1wb3N0ZWQ8L3Rk
PgoJCTwvdHI+Cgk8L3RhYmxlPgoKCTxwIGlkPSJmbjIwOTIyOTcyNzM1MmEwYTc0OTIzODUw
IiBjbGFzcz0iZm9vdG5vdGUiPjxzdXA+MTwvc3VwPiBUd2l0dGVyJiM4MjE3O3MgPHNwYW4g
Y2xhc3M9ImNhcHMiPkFQSTwvc3Bhbj4gY291bnRzIHRoZSBudW1iZXIgb2YgdHdlZXRzIHRv
IHJldHVybiBiZWZvcmUgYXBwbHlpbmcgc29tZSBvZiB0aGUgZmlsdGVycywgc28gdGhlIHJl
c3BvbnNlIGNhbiBiZSBmZXdlciB0d2VldHMgdGhhbiBleHBlY3RlZC4gVG8gaGVscCBhdm9p
ZCB0aGlzIHlvdSBjYW4gc2V0IGEgPGVtPmZldGNoPC9lbT4gbGltaXQgdGhhdCBpcyBoaWdo
ZXIgdGhhbiB0aGUgZGlzcGxheSA8ZW0+bGltaXQ8L2VtPiB0aGF0IHlvdSB3YW50IHRvIG91
dHB1dC4gSWYgPGVtPmZldGNoPC9lbT4gaXMgbGVzcyB0aGFuIDxlbT5saW1pdDwvZW0+IHRo
ZSBsYXR0ZXIgd2lsbCBiZSB1c2VkIGluc3RlYWQuPC9wPgoKCTxoMz5FeGFtcGxlIHVzYWdl
PC9oMz4KCgk8cD4mbHQ7dHhwOmFyY190d2l0dGVyIHVzZXI9JnF1b3Q7ZHJtb25rZXluaW5q
YSZxdW90OyBsaW1pdD0mcXVvdDs1JnF1b3Q7IHdyYXB0YWc9JnF1b3Q7dWwmcXVvdDsgYnJl
YWs9JnF1b3Q7bGkmcXVvdDsgZGF0ZWZvcm1hdD0mcXVvdDslYiAlT2UsICVJOiVNICVwJnF1
b3Q7IC8mZ3Q7PC9wPgoKCTxwPlByb2R1Y2VzIGEgYnVsbGV0IHBvaW50IGxpc3Qgb2YgdGhl
IGxhc3QgNSBUd2l0dGVyIHVwZGF0ZXMgZnJvbSBkcm1vbmtleW5pbmphJiM4MjE3O3MgVHdp
dHRlciBmZWVkIHdpdGggYSBkZWZpbmVkIGRhdGUgZm9ybWF0IHRvIG92ZXJyaWRlIHRoZSBk
ZWZhdWx0IGFyY2hpdmUgZGF0ZSBmb3JtYXQuPC9wPgoKCTxoMiBjbGFzcz0ic2VjdGlvbiIg
aWQ9ImFyY190d2l0dGVyX3NlYXJjaF90YWciPlRoZSBhcmNfdHdpdHRlcl9zZWFyY2ggdGFn
PC9oMj4KCgk8aDM+U3ludGF4PC9oMz4KCgk8cD4mbHQ7dHhwOmFyY190d2l0dGVyX3NlYXJj
aCBoYXNodGFncz0mcXVvdDt0eHAmcXVvdDsgLyZndDs8L3A+CgoJPGgzPlVzYWdlPC9oMz4K
Cgk8dGFibGU+CgkJPHRyPgoJCQk8dGg+QXR0cmlidXRlPC90aD4KCQkJPHRoPkRlc2NyaXB0
aW9uPC90aD4KCQkJPHRoPkRlZmF1bHQ8L3RoPgoJCQk8dGg+RXhhbXBsZTwvdGg+CgkJPC90
cj4KCQk8dHI+CgkJCTx0ZD5zZWFyY2g8L3RkPgoJCQk8dGQ+Q29tbWEgc2VwYXJhdGVkIGxp
c3Qgb2Ygc2VhcmNoIHdvcmRzPC90ZD4KCQkJPHRkPiA8ZW0+dW5zZXQ8L2VtPjwvdGQ+CgkJ
CTx0ZD5zZWFyY2g9JnF1b3Q7dHhwLHRleHRwYXR0ZXJuJnF1b3Q7PC90ZD4KCQk8L3RyPgoJ
CTx0cj4KCQkJPHRkPmhhc2h0YWdzPC90ZD4KCQkJPHRkPkNvbW1hIHNlcGFyYXRlZCBsaXN0
IG9mIGhhc2h0YWdzIHRvIHNlYXJjaCBmb3IgKG5vdCBpbmNsdWRpbmcgdGhlIGhhc2gpPC90
ZD4KCQkJPHRkPiA8ZW0+dW5zZXQ8L2VtPjwvdGQ+CgkJCTx0ZD5oYXNodGFncz0mcXVvdDt0
eHAsdGV4dHBhdHRlcm4mcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+cmVwbHk8
L3RkPgoJCQk8dGQ+VXNlcm5hbWUgb2YgdHdlZXRzIGluIHJlcGx5IHRvPC90ZD4KCQkJPHRk
PiA8ZW0+dW5zZXQ8L2VtPjwvdGQ+CgkJCTx0ZD5yZXBseT0mcXVvdDt0d2l0dGVyJnF1b3Q7
PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPm1lbnRpb248L3RkPgoJCQk8dGQ+VXNlcm5h
bWUgb2YgdXNlciBtZW50aW9uZWQgaW4gdHdlZXRzICg8aT5pLmUuPC9pPiB0d2VldHMgY29u
dGFpbmluZyBAdXNlcm5hbWUpPC90ZD4KCQkJPHRkPiA8ZW0+dW5zZXQ8L2VtPjwvdGQ+CgkJ
CTx0ZD5tZW50aW9uPSZxdW90O3R3aXR0ZXImcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJ
CQk8dGQ+bGltaXQ8L3RkPgoJCQk8dGQ+TWF4aW11bSBudW1iZXIgb2YgdHdlZXRzIHRvIGRp
c3BsYXkgKG1heC4gMjAwKTwvdGQ+CgkJCTx0ZD4xMDwvdGQ+CgkJCTx0ZD5saW1pdD0mcXVv
dDsyNSZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5mdWxsX3VybHM8L3RkPgoJ
CQk8dGQ+MSB0byBkaXNwbGF5IGZ1bGwgPHNwYW4gY2xhc3M9ImNhcHMiPjxzcGFuIGNsYXNz
PSJjYXBzIj5VUkw8L3NwYW4+PC9zcGFuPnMsIDAgZm9yIHQuY28gPHNwYW4gY2xhc3M9ImNh
cHMiPjxzcGFuIGNsYXNzPSJjYXBzIj5VUkw8L3NwYW4+PC9zcGFuPnM8L3RkPgoJCQk8dGQ+
MDwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5kYXRlZm9ybWF0PC90ZD4KCQkJPHRkPkZv
cm1hdCB0aGF0IHVwZGF0ZSBkYXRlcyB3aWxsIGFwcGVhciBhczwvdGQ+CgkJCTx0ZD4gPGVt
PkFyY2hpdmUgZGF0ZSBmb3JtYXQ8L2VtPjwvdGQ+CgkJCTx0ZD5kYXRlZm9ybWF0PSZxdW90
OyViICVPZSwgJUk6JU0gJXAmcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+bGFi
ZWw8L3RkPgoJCQk8dGQ+TGFiZWwgZm9yIHRoZSB0b3Agb2YgdGhlIGxpc3Q8L3RkPgoJCQk8
dGQ+IDxlbT5ubyBsYWJlbDwvZW0+PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmxhYmVs
dGFnPC90ZD4KCQkJPHRkPkluZGVwZW5kZW50IHdyYXB0YWcgZm9yIGxhYmVsPC90ZD4KCQkJ
PHRkPiA8ZW0+dW5zZXQ8L2VtPjwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5icmVhazwv
dGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2FwcyI+PHNwYW4gY2xhc3M9ImNhcHMiPkhUTUw8
L3NwYW4+PC9zcGFuPiB0YWcgKHdpdGhvdXQgYnJhY2tldHMpLCBvciBzdHJpbmcsIHVzZWQg
dG8gc2VwYXJhdGUgdGhlIHVwZGF0ZXM8L3RkPgoJCQk8dGQ+bGk8L3RkPgoJCTwvdHI+CgkJ
PHRyPgoJCQk8dGQ+d3JhcHRhZzwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2FwcyI+PHNw
YW4gY2xhc3M9ImNhcHMiPkhUTUw8L3NwYW4+PC9zcGFuPiB0YWcgdG8gYmUgdXNlZCBhcyB0
aGUgd3JhcHRhZywgd2l0aG91dCBicmFja2V0czwvdGQ+CgkJCTx0ZD4gPGVtPnVuc2V0PC9l
bT48L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+Y2xhc3M8L3RkPgoJCQk8dGQ+PHNwYW4g
Y2xhc3M9ImNhcHMiPjxzcGFuIGNsYXNzPSJjYXBzIj5DU1M8L3NwYW4+PC9zcGFuPiBjbGFz
cyBhdHRyaWJ1dGUgZm9yIHdyYXB0YWc8L3RkPgoJCQk8dGQ+YXJjX3R3aXR0ZXJfc2VhcmNo
PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmNsYXNzX3VzZXI8L3RkPgoJCQk8dGQ+PHNw
YW4gY2xhc3M9ImNhcHMiPjxzcGFuIGNsYXNzPSJjYXBzIj5DU1M8L3NwYW4+PC9zcGFuPiBj
bGFzcyBhdHRyaWJ1dGUgYXBwbGllZCB0byBzcGFuIHRhZyBhcm91bmQgdXNlciBuYW1lPC90
ZD4KCQkJPHRkPmFyY190d2l0dGVyLXVzZXI8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+
Y2xhc3NfcG9zdGVkPC90ZD4KCQkJPHRkPjxzcGFuIGNsYXNzPSJjYXBzIj48c3BhbiBjbGFz
cz0iY2FwcyI+Q1NTPC9zcGFuPjwvc3Bhbj4gY2xhc3MgYXR0cmlidXRlIGFwcGxpZWQgdG8g
c3BhbiB0YWcgYXJvdW5kIHBvc3RlZCBkYXRlPC90ZD4KCQkJPHRkPmFyY190d2l0dGVyLXBv
c3RlZDwvdGQ+CgkJPC90cj4KCTwvdGFibGU+CgoJPGgzPkV4YW1wbGUgdXNhZ2U8L2gzPgoK
CTxwPiZsdDt0eHA6YXJjX3R3aXR0ZXJfc2VhcmNoIHNlYXJjaD0mcXVvdDtwbHVnaW4mcXVv
dDsgaGFzaHRhZ3M9JnF1b3Q7dHhwLHRleHRwYXR0ZXJuJnF1b3Q7IGxpbWl0PSZxdW90OzI1
JnF1b3Q7IC8mZ3Q7PC9wPgoKCTxwPlByb2R1Y2VzIGEgbGlzdCBvZiB0d2VldHMgY29udGFp
bmluZyB0aGUgd29yZCAmIzgyMTY7cGx1Z2luJiM4MjE3OyBhbmQgdGhlIGhhc2h0YWdzICYj
ODIxNjsjdHhwJiM4MjE3OyBhbmQgJiM4MjE2OyN0ZXh0cGF0dGVybiYjODIxNzsuIFRoZSB0
YWcgd2lsbCByZXR1cm4gYSBtYXhpbXVtIG9mIDI1IHR3ZWV0cy48L3A+CgoJPGgyIGNsYXNz
PSJzZWN0aW9uIiBpZD0iYXJjX3R3aXR0ZXJfcmV0d2VldF90YWciPlRoZSBhcmNfdHdpdHRl
cl90d2VldF9idXR0b24gdGFnPC9oMj4KCgk8cD5PdXRwdXRzIHRoZSBUd2l0dGVyIHR3ZWV0
IGJ1dHRvbiAoZm9ybWVybHkgJmx0O3R4cDphcmNfdHdpdHRlcl9yZXR3ZWV0IC8mZ3Q7KS48
L3A+CgoJPGgzPlN5bnRheDwvaDM+CgoJPHA+Jmx0O3R4cDphcmNfdHdpdHRlcl90d2VldF9i
dXR0b24gLyZndDs8L3A+CgoJPGgzPlVzYWdlPC9oMz4KCgk8dGFibGU+CgkJPHRyPgoJCQk8
dGg+QXR0cmlidXRlPC90aD4KCQkJPHRoPkRlc2NyaXB0aW9uPC90aD4KCQkJPHRoPkRlZmF1
bHQ8L3RoPgoJCQk8dGg+RXhhbXBsZTwvdGg+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD51c2Vy
PC90ZD4KCQkJPHRkPlR3aXR0ZXIgdXNlciBuYW1lIHRvIHF1b3RlPC90ZD4KCQkJPHRkPiA8
ZW0+YXJjX3R3aXR0ZXIgdXNlcm5hbWU8L2VtPjwvdGQ+CgkJCTx0ZD51c2VyPSZxdW90O2Ry
bW9ua2V5bmluamEmcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+dXJsPC90ZD4K
CQkJPHRkPjxzcGFuIGNsYXNzPSJjYXBzIj48c3BhbiBjbGFzcz0iY2FwcyI+VVJMPC9zcGFu
Pjwvc3Bhbj4gdG8gdHdlZXQ8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+dGV4dDwvdGQ+
CgkJCTx0ZD5Ud2VldCB0ZXh0PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmZvbGxvdzE8
L3RkPgoJCQk8dGQ+U3VnZ2VzdGVkIFR3aXR0ZXIgYWNjb3VudCB0byBmb2xsb3csIGZvciBl
eGFtcGxlIHlvdXIgb3duPC90ZD4KCQkJPHRkPkEgVHdpdHRlciB1c2VyIHRvIHJlY29tbWVu
ZDwvdGQ+CgkJCTx0ZD5mb2xsb3cxPSZxdW90O1RleHRwYXR0ZXJuJnF1b3Q7PC90ZD4KCQk8
L3RyPgoJCTx0cj4KCQkJPHRkPmZvbGxvdzI8L3RkPgoJCQk8dGQ+QXMgZm9sbG93MTwvdGQ+
CgkJCTx0ZD4gPGVtPnVuc2V0PC9lbT48L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+bGFu
ZzwvdGQ+CgkJCTx0ZD5MYW5ndWFnZTwvdGQ+CgkJCTx0ZD5lbjwvdGQ+CgkJCTx0ZD5sYW5n
PSZxdW90O2VzJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmNvdW50PC90ZD4K
CQkJPHRkPkNvdW50IGJveCBwb3NpdGlvbiwgb3B0aW9uczogbm9uZSwgaG9yaXpvbnRhbCBv
ciB2ZXJ0aWNhbDwvdGQ+CgkJCTx0ZD5ob3Jpem9udGFsPC90ZD4KCQkJPHRkPmNvdW50PSZx
dW90O25vbmUmcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+aW5jbHVkZV9qczwv
dGQ+CgkJCTx0ZD5XaGV0aGVyIG9yIG5vdCB0byBpbmNsdWRlIHRoZSB3aWRnZXQgSmF2YVNj
cmlwdDwvdGQ+CgkJCTx0ZD4xPC90ZD4KCQkJPHRkPmluY2x1ZGVfanM9JnF1b3Q7MCZxdW90
OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5vcHRpbWlzZV9qczwvdGQ+CgkJCTx0ZD5P
cHRpbWlzZSB0aGUgSmF2YVNjcmlwdCBieSB1c2luZyBhIGxvY2FsIHNjcmlwdCByYXRoZXIg
dGhhbiB0aGF0IGhvc3RlZCBvbiB0aGUgVHdpdHRlciBzaXRlPC90ZD4KCQkJPHRkPjA8L3Rk
PgoJCQk8dGQ+b3B0aW1pc2VfanM9JnF1b3Q7MSZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+
CgkJCTx0ZD5jbGFzczwvdGQ+CgkJCTx0ZD48c3BhbiBjbGFzcz0iY2FwcyI+PHNwYW4gY2xh
c3M9ImNhcHMiPkNTUzwvc3Bhbj48L3NwYW4+IGNsYXNzIGF0dHJpYnV0ZSBhcHBsaWVkIHRv
IHRoZSB0d2VldCBidXR0b248L3RkPgoJCQk8dGQ+dHdpdHRlci1zaGFyZS1idXR0b248L3Rk
PgoJCTwvdHI+Cgk8L3RhYmxlPgoKCTxoMiBjbGFzcz0ic2VjdGlvbiIgaWQ9ImFyY190d2l0
dGVyX2ZvbGxvd19idXR0b25fdGFnIj5UaGUgYXJjX3R3aXR0ZXJfZm9sbG93X2J1dHRvbiB0
YWc8L2gyPgoKCTxwPk91dHB1dHMgdGhlIFR3aXR0ZXIgZm9sbG93IGJ1dHRvbiAoYW4gYWx0
ZXJuYXRpdmUgdmVyc2lvbiBpcyBpbmNsdWRlZCBpbiBhcmNfdHdpdHRlcl9pbnRlbnRzKS48
L3A+CgoJPGgzPlN5bnRheDwvaDM+CgoJPHA+Jmx0O3R4cDphcmNfdHdpdHRlcl9mb2xsb3df
YnV0dG9uIC8mZ3Q7PC9wPgoKCTxoMz5Vc2FnZTwvaDM+CgoJPHRhYmxlPgoJCTx0cj4KCQkJ
PHRoPkF0dHJpYnV0ZTwvdGg+CgkJCTx0aD5EZXNjcmlwdGlvbjwvdGg+CgkJCTx0aD5EZWZh
dWx0PC90aD4KCQkJPHRoPkV4YW1wbGU8L3RoPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+dXNl
cjwvdGQ+CgkJCTx0ZD5Ud2l0dGVyIHVzZXIgbmFtZSB0byBmb2xsb3c8L3RkPgoJCQk8dGQ+
IDxlbT5hcmNfdHdpdHRlciB1c2VybmFtZTwvZW0+PC90ZD4KCQkJPHRkPnVzZXI9JnF1b3Q7
ZHJtb25rZXluaW5qYSZxdW90OzwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5sYW5nPC90
ZD4KCQkJPHRkPkxhbmd1YWdlPC90ZD4KCQkJPHRkPmVuPC90ZD4KCQkJPHRkPmxhbmc9JnF1
b3Q7ZXMmcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+Y291bnQ8L3RkPgoJCQk8
dGQ+V2hldGhlciBvciBub3QgdGhlIGZvbGxvd2VyIGNvdW50IGlzIHNob3duPC90ZD4KCQkJ
PHRkPjE8L3RkPgoJCQk8dGQ+Y291bnQ9JnF1b3Q7MCZxdW90OzwvdGQ+CgkJPC90cj4KCQk8
dHI+CgkJCTx0ZD5pbmNsdWRlX2pzPC90ZD4KCQkJPHRkPldoZXRoZXIgb3Igbm90IHRvIGlu
Y2x1ZGUgdGhlIHdpZGdldCBKYXZhU2NyaXB0PC90ZD4KCQkJPHRkPjE8L3RkPgoJCQk8dGQ+
aW5jbHVkZV9qcz0mcXVvdDswJnF1b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPm9w
dGltaXNlX2pzPC90ZD4KCQkJPHRkPk9wdGltaXNlIHRoZSBKYXZhU2NyaXB0IGJ5IHVzaW5n
IGEgbG9jYWwgc2NyaXB0IHJhdGhlciB0aGFuIHRoYXQgaG9zdGVkIG9uIHRoZSBUd2l0dGVy
IHNpdGU8L3RkPgoJCQk8dGQ+MDwvdGQ+CgkJCTx0ZD5vcHRpbWlzZV9qcz0mcXVvdDsxJnF1
b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmNsYXNzPC90ZD4KCQkJPHRkPjxzcGFu
IGNsYXNzPSJjYXBzIj48c3BhbiBjbGFzcz0iY2FwcyI+Q1NTPC9zcGFuPjwvc3Bhbj4gY2xh
c3MgYXR0cmlidXRlIGFwcGxpZWQgdG8gdGhlIGZvbGxvdyBidXR0b248L3RkPgoJCQk8dGQ+
dHdpdHRlci1mb2xsb3ctYnV0dG9uPC90ZD4KCQk8L3RyPgoJPC90YWJsZT4KCgk8aDIgY2xh
c3M9InNlY3Rpb24iIGlkPSJhcmNfdHdpdHRlcl90d2VldF91cmwiPmFyY190d2l0dGVyX3R3
ZWV0X3VybDwvaDI+CgoJPHA+UmV0dXJucyB0aGUgPHNwYW4gY2xhc3M9ImNhcHMiPlVSTDwv
c3Bhbj4gb2YgdGhlIFR3aXR0ZXIgc3RhdHVzIGZvciBhbiBhcnRpY2xlLjwvcD4KCgk8aDM+
U3ludGF4PC9oMz4KCgk8cD4mbHQ7dHhwOmFyY190d2l0dGVyX3R3ZWV0X3VybCAvJmd0Ozwv
cD4KCgk8cD4mbHQ7dHhwOmFyY190d2l0dGVyX3R3ZWV0X3VybCZndDtMaW5rIHRleHQmbHQ7
L3R4cDphcmNfdHdpdHRlcl90d2VldF91cmwmZ3Q7PC9wPgoKCTxoMz5Vc2FnZTwvaDM+CgoJ
PHRhYmxlPgoJCTx0cj4KCQkJPHRoPkF0dHJpYnV0ZTwvdGg+CgkJCTx0aD5EZXNjcmlwdGlv
bjwvdGg+CgkJCTx0aD5EZWZhdWx0PC90aD4KCQkJPHRoPkV4YW1wbGU8L3RoPgoJCTwvdHI+
CgkJPHRyPgoJCQk8dGQ+aWQ8L3RkPgoJCQk8dGQ+VGV4dHBhdHRlcm4gYXJ0aWNsZSBJRDwv
dGQ+CgkJCTx0ZD4gPGVtPmN1cnJlbnQgYXJ0aWNsZTwvZW0+PC90ZD4KCQkJPHRkPmlkPSZx
dW90OzEmcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+dGl0bGU8L3RkPgoJCQk8
dGQ+VGl0bGUgYXR0cmlidXRlIG9mIHRoZSBsaW5rPC90ZD4KCQkJPHRkPiA8ZW0+dW5zZXQ8
L2VtPjwvdGQ+CgkJPC90cj4KCQk8dHI+CgkJCTx0ZD5jbGFzczwvdGQ+CgkJCTx0ZD48c3Bh
biBjbGFzcz0iY2FwcyI+PHNwYW4gY2xhc3M9ImNhcHMiPkNTUzwvc3Bhbj48L3NwYW4+IGNs
YXNzIGF0dHJpYnV0ZSBhcHBsaWVkIHRvIHRoZSBsaW5rPC90ZD4KCQkJPHRkPiA8ZW0+dW5z
ZXQ8L2VtPjwvdGQ+CgkJPC90cj4KCTwvdGFibGU+CgoJPGgyIGNsYXNzPSJzZWN0aW9uIiBp
ZD0iYXJjX3R3aXR0ZXJfdGlueXVybCI+YXJjX3R3aXR0ZXJfdGlueXVybDwvaDI+CgoJPHA+
UmV0dXJucyB0aGUgc2hvcnRlbmVkIDxzcGFuIGNsYXNzPSJjYXBzIj5VUkw8L3NwYW4+IG9m
IHRoZSBhcnRpY2xlIHVzZWQgZm9yIHRoZSBUd2l0dGVyIHVwZGF0ZS48L3A+CgoJPGgzPlN5
bnRheDwvaDM+CgoJPHA+Jmx0O3R4cDphcmNfdHdpdHRlcl90aW55dXJsIC8mZ3Q7PC9wPgoK
CTxwPiZsdDt0eHA6YXJjX3R3aXR0ZXJfdGlueXVybCZndDtMaW5rIHRleHQmbHQ7L3R4cDph
cmNfdHdpdHRlcl90aW55dXJsJmd0OzwvcD4KCgk8aDM+VXNhZ2U8L2gzPgoKCTx0YWJsZT4K
CQk8dHI+CgkJCTx0aD5BdHRyaWJ1dGU8L3RoPgoJCQk8dGg+RGVzY3JpcHRpb248L3RoPgoJ
CQk8dGg+RGVmYXVsdDwvdGg+CgkJCTx0aD5FeGFtcGxlPC90aD4KCQk8L3RyPgoJCTx0cj4K
CQkJPHRkPmlkPC90ZD4KCQkJPHRkPlRleHRwYXR0ZXJuIGFydGljbGUgSUQ8L3RkPgoJCQk8
dGQ+IDxlbT5jdXJyZW50IGFydGljbGU8L2VtPjwvdGQ+CgkJCTx0ZD5pZD0mcXVvdDsxJnF1
b3Q7PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPnRpdGxlPC90ZD4KCQkJPHRkPlRpdGxl
IGF0dHJpYnV0ZSBvZiB0aGUgbGluazwvdGQ+CgkJCTx0ZD4gPGVtPnVuc2V0PC9lbT48L3Rk
PgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+Y2xhc3M8L3RkPgoJCQk8dGQ+PHNwYW4gY2xhc3M9
ImNhcHMiPjxzcGFuIGNsYXNzPSJjYXBzIj5DU1M8L3NwYW4+PC9zcGFuPiBjbGFzcyBhdHRy
aWJ1dGUgYXBwbGllZCB0byB0aGUgbGluazwvdGQ+CgkJCTx0ZD4gPGVtPnVuc2V0PC9lbT48
L3RkPgoJCTwvdHI+Cgk8L3RhYmxlPgoKCTxoMiBjbGFzcz0ic2VjdGlvbiIgaWQ9ImFyY190
d2l0dGVyX2NhY2hpbmciPkNhY2hpbmc8L2gyPgoKCTxwPkluIG9yZGVyIHRvIHByZXZlbnQg
ZXhjZXNzaXZlIHJlcGVhdGl0aXZlIGNhbGxzIHRvIHRoZSBUd2l0dGVyIHdlYnNpdGUgaXQg
aXMgcmVjb21tZW5kZWQgdG8gY2FjaGUgcmVzdWx0cy4gVHdpdHRlciBsaW1pdHMgdGhlIG51
bWJlciBvZiBjYWxscyB0aHJvdWdoIHRoZSA8c3BhbiBjbGFzcz0iY2FwcyI+QVBJPC9zcGFu
PiwgYW5kIGNvbnRpbnVvdXMgY2FsbHMgd2lsbCByZXN1bHQgaW4gVHdpdHRlciBjbG9zaW5n
IHRvIGZ1cnRoZXIgcmVxdWVzdHMuIEJ5IGRlZmF1bHQsIGFyY190d2l0dGVyIGNhY2hlcyBm
b3IgMzAgbWludXRlIGludGVydmFscy48L3A+CgoJPHRhYmxlPgoJCTx0cj4KCQkJPHRoPkF0
dHJpYnV0ZTwvdGg+CgkJCTx0aD5EZXNjcmlwdGlvbjwvdGg+CgkJCTx0aD5EZWZhdWx0PC90
aD4KCQkJPHRoPkV4YW1wbGU8L3RoPgoJCTwvdHI+CgkJPHRyPgoJCQk8dGQ+Y2FjaGluZzwv
dGQ+CgkJCTx0ZD4mIzgyMTY7MSYjODIxNzsgdG8gY2FjaGUgZmVlZCwgJiM4MjE2OzAmIzgy
MTc7IHRvIHR1cm4gY2FjaGluZyBvZmYgKG5vdCByZWNvbW1lbmRlZCk8L3RkPgoJCQk8dGQ+
MTwvdGQ+CgkJCTx0ZD5jYWNoaW5nPSZxdW90OzEmcXVvdDs8L3RkPgoJCTwvdHI+CgkJPHRy
PgoJCQk8dGQ+Y2FjaGVfZGlyPC90ZD4KCQkJPHRkPkFic29sdXRlIHBhdGggdG8gdGhlIGNh
Y2hlIGRpcmVjdG9yeSAobXVzdCBiZSB3cml0YWJsZSk8L3RkPgoJCQk8dGQ+IDxlbT5hcmNf
dHdpdHRlciBwcmVmZXJlbmNlczwvZW0+PC90ZD4KCQk8L3RyPgoJCTx0cj4KCQkJPHRkPmNh
Y2hlX3RpbWU8L3RkPgoJCQk8dGQ+VGltZSBpbiBtaW51dGVzIHRoYXQgdGhlIGNhY2hlIGZp
bGVzIGFyZSBzdG9yZWQgYmVmb3JlIGJlaW5nIHJlZnJlc2hlZDwvdGQ+CgkJCTx0ZD41PC90
ZD4KCQkJPHRkPmNhY2hlX3RpbWU9JnF1b3Q7MzAmcXVvdDs8L3RkPgoJCTwvdHI+Cgk8L3Rh
YmxlPgoKCTxwPlRoZSBhZG1pbiBzaWRlIG9mIHRoaXMgcGx1Z2luIGVuZm9yY2VzIGNhY2hp
bmcsIGFwYXJ0IGZyb20gd2hlbiBpdCBpcyBwb3N0aW5nIHRvIFR3aXR0ZXIgKDxpPmUuZy48
L2k+IHdoZW4gcG9zdGluZyBvciBkZWxldGluZyBhbiB1cGRhdGUpLjwvcD4KCgk8aDIgY2xh
c3M9InNlY3Rpb24iIGlkPSJhcmNfdHdpdHRlcl9wcmVmcyI+UHJlZmVyZW5jZXM8L2gyPgoK
CTxwPllvdSBjYW4gYWNjZXNzIHRoZSBwbHVnaW5zIGNvcmUgcHJlZmVyZW5jZXMgZnJvbSBl
aXRoZXIgdGhlIFByZWZlcmVuY2VzIG9yIFBsdWdpbnMgdGFicyBpbiBhZG1pbi4gU2V0dXAg
eW91ciBUd2l0dGVyIGFjY291bnQgKHlvdSB3aWxsIGJlIGFza2VkIHRvIGNvbm5lY3Qgdmlh
IFR3aXR0ZXIgYW5kIHRoaXMgbmVlZHMgZG9pbmcgYmVmb3JlIHlvdSBjYW4gdXNlIHRoZSBw
bHVnaW4pIGFuZCBjaGFuZ2UgdGhlIGNhY2hlIGRpcmVjdG9yeSB1c2luZyBhcmNfdHdpdHRl
ciYjODIxNztzIHByZWZlcmVuY2VzLiBXaXRob3V0IHByb3ZpZGluZyB5b3VyIGFjY291bnQg
bG9naW4gZGV0YWlscyB0aGUgYWRtaW4gYXJlYSBmZWF0dXJlcyBvZiB0aGlzIHBsdWdpbiB3
aWxsIGJlIGluYWN0aXZlLjwvcD4KCgk8cD5Zb3UgY2FuIHNlbGVjdCB0aGUgPHNwYW4gY2xh
c3M9ImNhcHMiPlVSTDwvc3Bhbj4gc2hvcnRlbmVyIG1ldGhvZCB5b3Ugd2FudCB0byB1c2Ug
dG8gbGluayBiYWNrIHRvIHlvdXIgYXJ0aWNsZSBvbiBUd2l0dGVyLiBQbGVhc2Ugbm90ZSB0
aGF0IGlmIHlvdSBzZWxlY3Qgc21kX3Nob3J0X3VybCB5b3Ugd2lsbCBuZWVkIHRvIGhhdmUg
aW5zdGFsbGVkIGFuZCBhY3RpdmF0ZWQgdGhlIDxhIGhyZWY9Imh0dHA6Ly90ZXh0cGF0dGVy
bi5vcmcvcGx1Z2lucy8xMDk5L3NtZF9zaG9ydF91cmwiPjxzcGFuIGNsYXNzPSJ0YWciPnNt
ZF9zaG9ydF91cmw8L3NwYW4+IHBsdWdpbjwvYT4gZGV2ZWxvcGVkIGJ5IFN0ZWYgRGF3c29u
LjwvcD4KCgk8aDIgY2xhc3M9InNlY3Rpb24iIGlkPSJhcmNfdHdpdHRlcl9hcnRpY2xlIj5U
d2VldGluZyBhcnRpY2xlczwvaDI+CgoJPHA+QnkgZGVmYXVsdCBhcmNfdHdpdHRlciB3aWxs
IHBvc3QgYW4gdXBkYXRlIHRvIFR3aXR0ZXIgaW5jbHVkaW5nIGEgc2hvcnRlbmVkIDxzcGFu
IGNsYXNzPSJjYXBzIj5VUkw8L3NwYW4+IHRvIHlvdXIgYXJ0aWNsZS4gT25seSBsaXZlIGFu
ZCBhY3RpdmUgYXJ0aWNsZXMgd2lsbCBiZSBzZW50IHRvIFR3aXR0ZXIsIDxpPmkuZS48L2k+
IGFydGljbGVzIHBvc3RlZCBpbiB0aGUgZnV0dXJlIG9yIGFzIHN0aWNreSBhcnRpY2xlcyB3
aWxsIG5vdCBiZSBzZW50LiBJZiB5b3VyIGFydGljbGUgaXMgc3VjY2Vzc2Z1bGx5IHN1Ym1p
dHRlZCB0byBUd2l0dGVyIHRoZSB1cGRhdGUgd2lsbCBhcHBlYXIgaW4gcGxhY2Ugb2YgdGhl
IFR3aXR0ZXIgb3B0aW9uIG9uIHRoZSByaWdodC1oYW5kLXNpZGUgb2YgdGhlIGFydGljbGUg
ZWRpdCBzY3JlZW4uPC9wPgoKCTxwPlR3ZWV0cyBhcmUgc2VudCBpbiB0aGUgZm9sbG93aW5n
IGZvcm1hdDogPGVtPlR3ZWV0IHByZWZpeDwvZW0+IDxlbT5BcnRpY2xlIHRpdGxlPC9lbT4g
PGVtPlNob3J0ZW5lZCA8c3BhbiBjbGFzcz0iY2FwcyI+VVJMPC9zcGFuPjwvZW0+IDxlbT5U
d2VldCBzdWZmaXg8L2VtPi4gWW91IGNhbiBjaGFuZ2UgdGhlIHByZWZpeCBhbmQgc3VmZml4
IG9uIGFuIGFydGljbGUtYnktYXJ0aWNsZSBiYXNpcyBieSBjaGFuZ2luZyB0aGUgdHdlZXQg
b3B0aW9ucyB1bmRlciAmIzgyMTY7VXBkYXRlIFR3aXR0ZXImIzgyMTc7IG9uIHRoZSBhcnRp
Y2xlIGVkaXRvciBzY3JlZW4uIFRoZSBkZWZhdWx0IDxlbT5Ud2VldCBwcmVmaXg8L2VtPiBj
YW4gYmUgc2V0IHVuZGVyIHRoZSA8c3BhbiBjbGFzcz0idGFnIj5hcmNfdHdpdHRlcjwvc3Bh
bj4gcHJlZmVyZW5jZXMgc2NyZWVuICh0aGUgZGVmYXVsdCBvbiBpbnN0YWxsYXRpb24gaXMg
JiM4MjIwO0p1c3QgcG9zdGVkOiYjODIyMTspLjwvcD4KCgk8cD5QbGVhc2Ugbm90ZSB0aGF0
IG9uY2UgYW4gYXJ0aWNsZSBoYXMgYmVlbiB0d2VldGVkIHRoZSB0d2VldCBjYW5ub3QgYmUg
ZWRpdGVkLjwvcD4KCgk8aDIgY2xhc3M9InNlY3Rpb24iIGlkPSJhcmNfdHdpdHRlcl9hZG1p
biI+VGhlIFR3aXR0ZXIgdGFiPC9oMj4KCgk8cD5VbmRlciB0aGUgRXh0ZW5zaW9ucyB0YWIg
KHRoaXMgY2FuIGJlIGNoYW5nZWQgZnJvbSB0aGUgcGx1Z2luJiM4MjE3O3MgcHJlZmVyZW5j
ZSBwYWdlKSBhIG5ldyBUd2l0dGVyIHRhYiBzaG91bGQgYXBwZWFyIG9uY2UgeW91IGhhdmUg
Y29ubmVjdGVkIHlvdXIgc2l0ZSB0byB5b3VyIFR3aXR0ZXIgYWNjb3VudC4gRnJvbSBoZXJl
IHlvdSB3aWxsIGJlIGFibGUgdG8gc3VibWl0IG5ldyBUd2l0dGVyIHVwZGF0ZXMsIHZpZXcg
YmFzaWMgYWNjb3VudCBzdGF0aXN0aWNzLCBhbmQgY2hlY2sgb3V0IHlvdXIgcmVjZW50IHVw
ZGF0ZXMgKGluY2x1ZGluZyB0aGUgb3B0aW9uIHRvIGRlbGV0ZSB5b3VyIHR3ZWV0cykuPC9w
PiI7czo0OiJjb2RlIjtzOjcyNzU1OiJnbG9iYWwgJHByZWZzLCR0eHBjZmcsJGFyY190d2l0
dGVyX2NvbnN1bWVyS2V5LCRhcmNfdHdpdHRlcl9jb25zdW1lclNlY3JldDsKCiRhcmNfdHdp
dHRlciA9IGFycmF5KCk7CgokYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXkgPSAnbktjWHNsd3pa
aEJkMGtmS01ldG5QQSc7CiRhcmNfdHdpdHRlcl9jb25zdW1lclNlY3JldCA9ICdDNm5TUENM
M2VlSEdUQmhLQ2d3ZDlvY2xjdUQwc3JCOFdWa2ZYUVlDNTQnOwoKYWRkX3ByaXZzKCdwbHVn
aW5fcHJlZnMuYXJjX3R3aXR0ZXInLCcxLDInKTsKcmVnaXN0ZXJfY2FsbGJhY2soJ2FyY190
d2l0dGVyX2luc3RhbGwnLCdwbHVnaW5fbGlmZWN5Y2xlLmFyY190d2l0dGVyJywgJ2luc3Rh
bGxlZCcpOwpyZWdpc3Rlcl9jYWxsYmFjaygnYXJjX3R3aXR0ZXJfdW5pbnN0YWxsJywncGx1
Z2luX2xpZmVjeWNsZS5hcmNfdHdpdHRlcicsICdkZWxldGVkJyk7CnJlZ2lzdGVyX2NhbGxi
YWNrKCdhcmNfdHdpdHRlcl9wcmVmcycsJ3BsdWdpbl9wcmVmcy5hcmNfdHdpdHRlcicpOwoK
LyoKICogU2V0dXAgaW5pdGlhbCBwcmVmZXJlbmNlcyBpZiBub3QgaW4gdGhlIHR4cF9wcmVm
cyB0YWJsZS4KICovCmlmICghaXNzZXQoJHByZWZzWydhcmNfdHdpdHRlcl91c2VyJ10pKQoJ
c2V0X3ByZWYoJ2FyY190d2l0dGVyX3VzZXInLCAnJywgJ2FyY190d2l0dGVyJywgMSwgJ3Rl
eHRfaW5wdXQnKTsKaWYgKCFpc3NldCgkcHJlZnNbJ2FyY190d2l0dGVyX3ByZWZpeCddKSkK
ICBzZXRfcHJlZignYXJjX3R3aXR0ZXJfcHJlZml4JywnSnVzdCBwb3N0ZWQ6JywgJ2FyY190
d2l0dGVyJywgMiwgJ3RleHRfaW5wdXQnKTsKaWYgKCFpc3NldCgkcHJlZnNbJ2FyY190d2l0
dGVyX3N1ZmZpeCddKSkKICBzZXRfcHJlZignYXJjX3R3aXR0ZXJfc3VmZml4JywnJywgJ2Fy
Y190d2l0dGVyJywgMiwgJ3RleHRfaW5wdXQnKTsKaWYgKCFpc3NldCgkcHJlZnNbJ2FyY190
d2l0dGVyX2NhY2hlX2RpciddKSkKICBzZXRfcHJlZignYXJjX3R3aXR0ZXJfY2FjaGVfZGly
JywkdHhwY2ZnWyd0eHBhdGgnXS4kcHJlZnNbJ3RlbXBkaXInXSwgJ2FyY190d2l0dGVyJywg
MSwgJ3RleHRfaW5wdXQnKTsKaWYgKCFpc3NldCgkcHJlZnNbJ2FyY190d2l0dGVyX3R3ZWV0
X2RlZmF1bHQnXSkpCiAgc2V0X3ByZWYoJ2FyY190d2l0dGVyX3R3ZWV0X2RlZmF1bHQnLCAx
LCAnYXJjX3R3aXR0ZXInLCAyLCAneWVzbm9SYWRpbycpOwppZiAoIWlzc2V0KCRwcmVmc1sn
YXJjX3R3aXR0ZXJfdXJsX21ldGhvZCddKSkKICBzZXRfcHJlZignYXJjX3R3aXR0ZXJfdXJs
X21ldGhvZCcsICdmdWxsJywgJ2FyY190d2l0dGVyJywgMiwKCSdhcmNfdHdpdHRlcl91cmxf
bWV0aG9kX3NlbGVjdCcpOwppZiAoIWlzc2V0KCRwcmVmc1snYXJjX3Nob3J0X3VybCddKSkK
ICBzZXRfcHJlZignYXJjX3Nob3J0X3VybCcsIDAsICdhcmNfdHdpdHRlcicsIDIsICd5ZXNu
b1JhZGlvJyk7CmlmICghaXNzZXQoJHByZWZzWydhcmNfc2hvcnRfc2l0ZV91cmwnXSkpCiAg
c2V0X3ByZWYoJ2FyY19zaG9ydF9zaXRlX3VybCcsICRwcmVmc1snc2l0ZXVybCddLCAnYXJj
X3R3aXR0ZXInLCAyLCAndGV4dF9pbnB1dCcpOwovLyBNYWtlIHN1cmUgdGhhdCB0aGUgVHdp
dHRlciB0YWIgaGFzIGJlZW4gZGVmaW5lZAppZiAoIWlzc2V0KCRwcmVmc1snYXJjX3R3aXR0
ZXJfdGFiJ10pKSB7CiAgc2V0X3ByZWYoJ2FyY190d2l0dGVyX3RhYicsICdleHRlbnNpb25z
JywgJ2FyY190d2l0dGVyJywgMiwKCSdhcmNfdHdpdHRlcl90YWJfc2VsZWN0Jyk7CgkkcHJl
ZnNbJ2FyY190d2l0dGVyX3RhYiddID0gJ2V4dGVuc2lvbnMnOwp9CgovLyBDaGVjayBpZiBh
cmNfc2hvcnRfdXJsIGlzIGVuYWJsZWQKaWYgKChpc3NldCgkcHJlZnNbJ2FyY19zaG9ydF91
cmwnXSkmJiRwcmVmc1snYXJjX3Nob3J0X3VybCddKQp8fCAoaXNzZXQoJHByZWZzWydhcmNf
c2hvcnRfdXJsX21ldGhvZCddKSYmJHByZWZzWydhcmNfdHdpdHRlcl91cmxfbWV0aG9kJ109
PSdhcmNfdHdpdHRlcicpKSB7CiAgcmVnaXN0ZXJfY2FsbGJhY2soJ2FyY19zaG9ydF91cmxf
cmVkaXJlY3QnLCAndHhwX2RpZScsIDQwNCk7Cn0KCmlmIChAdHhwaW50ZXJmYWNlID09ICdh
ZG1pbicpIHsKCXJlZ2lzdGVyX2NhbGxiYWNrKCdfYXJjX3R3aXR0ZXJfYXV0b19lbmFibGUn
LCAncGx1Z2luX2xpZmVjeWNsZS5hcmNfdHdpdHRlcicsICdpbnN0YWxsZWQnKTsKCWlmICgh
ZW1wdHkoJHByZWZzWydhcmNfdHdpdHRlcl91c2VyJ10pCgkJJiYgIWVtcHR5KCRwcmVmc1sn
YXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW4nXSkKCQkmJiAhZW1wdHkoJHByZWZzWydhcmNfdHdp
dHRlcl9hY2Nlc3NUb2tlblNlY3JldCddKSApIHsKCgkJaWYgKCRwcmVmc1snYXJjX3R3aXR0
ZXJfdGFiJ10pIHsKCQkJYWRkX3ByaXZzKCdhcmNfYWRtaW5fdHdpdHRlcicsICcxLDIsMyw0
Jyk7CgkJCXJlZ2lzdGVyX3RhYigkcHJlZnNbJ2FyY190d2l0dGVyX3RhYiddLCAnYXJjX2Fk
bWluX3R3aXR0ZXInLCAnVHdpdHRlcicpOwoJCQlyZWdpc3Rlcl9jYWxsYmFjaygnYXJjX2Fk
bWluX3R3aXR0ZXInLCAnYXJjX2FkbWluX3R3aXR0ZXInKTsKCQl9CgoJCXJlZ2lzdGVyX2Nh
bGxiYWNrKCdhcmNfYXJ0aWNsZV90d2VldCcsICdwaW5nJyk7CgkJcmVnaXN0ZXJfY2FsbGJh
Y2soJ2FyY19hcnRpY2xlX3R3ZWV0JywgJ2FydGljbGVfc2F2ZWQnKTsKCQlyZWdpc3Rlcl9j
YWxsYmFjaygnYXJjX2FydGljbGVfdHdlZXQnLCAnYXJ0aWNsZV9wb3N0ZWQnKTsKCQlyZWdp
c3Rlcl9jYWxsYmFjaygnYXJjX2FwcGVuZF90d2l0dGVyJywgJ2FydGljbGVfdWknLCAnc3Rh
dHVzJyk7Cgl9Cn0KCi8qCglQdWJsaWMtc2lkZSBmdW5jdGlvbnMKCT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KKi8K
CmZ1bmN0aW9uIGFyY190d2l0dGVyKCRhdHRzKQp7CiAgZ2xvYmFsICRwcmVmcywkYXJjX3R3
aXR0ZXJfY29uc3VtZXJLZXksICRhcmNfdHdpdHRlcl9jb25zdW1lclNlY3JldDsKCiAgZXh0
cmFjdChsQXR0cyhhcnJheSgKCSd1c2VyJyAgICAgID0+ICRwcmVmc1snYXJjX3R3aXR0ZXJf
dXNlciddLAoJJ3Bhc3N3b3JkJyAgPT4gJycsCgkndGltZWxpbmUnICA9PiAndXNlcicsCgkn
bGltaXQnICAgICA9PiAnMTAnLAoJJ2ZldGNoJyAgICAgPT4gMCwKCSdmdWxsX3VybHMnID0+
IGZhbHNlLAoJJ3JldHdlZXRzJyAgPT4gZmFsc2UsCgkncmVwbGllcycgICA9PiB0cnVlLAoJ
J2RhdGVmb3JtYXQnPT4gJHByZWZzWydhcmNoaXZlX2RhdGVmb3JtYXQnXSwKCSdjYWNoaW5n
JyAgID0+ICcxJywKCSdjYWNoZV9kaXInID0+ICRwcmVmc1snYXJjX3R3aXR0ZXJfY2FjaGVf
ZGlyJ10sCgknY2FjaGVfdGltZSc9PiAnNScsCgknbGFiZWwnICAgICA9PiAnJywKCSdsYWJl
bHRhZycgID0+ICcnLAoJJ2JyZWFrJyAgICAgPT4gJ2xpJywKCSd3cmFwdGFnJyAgID0+ICcn
LAoJJ2NsYXNzJyAgICAgPT4gX19GVU5DVElPTl9fLAoJJ2NsYXNzX3Bvc3RlZCcgPT4gX19G
VU5DVElPTl9fLictcG9zdGVkJwoJKSwkYXR0cykpOwoKICAkdHdpdCA9IG5ldyBhcmNfdHdp
dHRlcigkYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXkKCQkJLCAkYXJjX3R3aXR0ZXJfY29uc3Vt
ZXJTZWNyZXQsICRwcmVmc1snYXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW4nXQoJCQksICRwcmVm
c1snYXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW5TZWNyZXQnXSk7CgogIGlmICgkY2FjaGluZykg
eyAgLy8gdHVybiBvbiBjYWNoaW5nLCByZWNvbW1lbmRlZCAoZGVmYXVsdCkKCSR0d2l0LT5z
ZXRDYWNoaW5nKHRydWUpOwoJJHR3aXQtPmNhY2hlRGlyKCRjYWNoZV9kaXIpOwoJJHR3aXQt
PmNhY2hlVGltZSgkY2FjaGVfdGltZSk7CiAgfSBlbHNlIHsgIC8vIHR1cm4gb2ZmIGNhY2hp
bmcsIG5vdCByZWNvbW1lbmRlZCBvdGhlciB0aGFuIGZvciB0ZXN0aW5nCgkkdHdpdC0+c2V0
Q2FjaGluZyhmYWxzZSk7CiAgfQoKICBzd2l0Y2ggKCR0aW1lbGluZSkgewoJY2FzZSAnaG9t
ZSc6IGNhc2UgJ2ZyaWVuZHMnOgoJICAkdGltZWxpbmUgPSAnaG9tZV90aW1lbGluZSc7IGJy
ZWFrOwoJY2FzZSAnbWVudGlvbnMnOgoJICAkdGltZWxpbmUgPSAnc3RhdHVzZXMvbWVudGlv
bnNfdGltZWxpbmUnOyBicmVhazsKCWNhc2UgJ3VzZXInOiBkZWZhdWx0OiAkdGltZWxpbmUg
PSAnc3RhdHVzZXMvdXNlcl90aW1lbGluZSc7CiAgfQoKICAvLyBDaGVjayB0aGF0IHRoZSBm
ZXRjaCAoVHdpdHRlcidzIGNvdW50IGF0dHJpYnV0ZSkgaXMgc2V0IGNvcnJlY3RseQogICRm
ZXRjaCA9ICghJGZldGNoIHx8ICRmZXRjaDwkbGltaXQpID8gJGxpbWl0IDogJGZldGNoOwoK
ICAkb3V0ID0gYXJyYXkoKTsKICAkdHdlZXRzID0gJHR3aXQtPmdldCgkdGltZWxpbmUsIGFy
cmF5KAoJICAnc2NyZWVuX25hbWUnPT4kdXNlciwKCSAgJ2NvdW50Jz0+JGZldGNoLAoJICAn
aW5jbHVkZV9ydHMnPT4kcmV0d2VldHMsCgkgICdleGNsdWRlX3JlcGxpZXMnPT4hJHJlcGxp
ZXMKCSkpOwoKICBpZiAoJHR3ZWV0cykgewoJLy8gQXBwbHkgdGhlIGRpc3BsYXkgbGltaXQg
dG8gdGhlIHJldHVybmVkIHR3ZWV0cwoJJHR3ZWV0cyA9IGFycmF5X3NsaWNlKCR0d2VldHMs
IDAsICRsaW1pdCk7Cglmb3JlYWNoICgkdHdlZXRzIGFzICR0d2VldCkgewoJICAkdGltZSA9
IHN0cnRvdGltZShodG1sZW50aXRpZXMoJHR3ZWV0LT5jcmVhdGVkX2F0KSk7CgkgICRkYXRl
ID0gc2FmZV9zdHJmdGltZSgkZGF0ZWZvcm1hdCwkdGltZSk7CgkgICRsaW5rcyA9IGZhbHNl
OwoJICBpZiAoaXNzZXQoJHR3ZWV0LT5lbnRpdGllcy0+dXJscykgfHwgaXNzZXQoJHR3ZWV0
LT5lbnRpdGllcy0+bWVkaWEpKSB7CgkJJGxpbmtzID0gYXJyYXkoKTsKCSAgfQoJICBpZiAo
aXNzZXQoJHR3ZWV0LT5lbnRpdGllcy0+dXJscykpIHsKCQlmb3JlYWNoICgkdHdlZXQtPmVu
dGl0aWVzLT51cmxzIGFzICR1cmwpIHsKCQkJJGxpbmtzWyR1cmwtPnVybF0gPSBhcnJheSgK
CQkJCSdleHBhbmRlZF91cmwnID0+ICR1cmwtPmV4cGFuZGVkX3VybCwKCQkJCSdkaXNwbGF5
X3VybCcgPT4gJHVybC0+ZGlzcGxheV91cmwKCQkJKTsKCQl9CgkgIH0KCSAgaWYgKGlzc2V0
KCR0d2VldC0+ZW50aXRpZXMtPm1lZGlhKSkgewoJCWZvcmVhY2ggKCR0d2VldC0+ZW50aXRp
ZXMtPm1lZGlhIGFzICR1cmwpIHsKCQkJJGxpbmtzWyR1cmwtPnVybF0gPSBhcnJheSgKCQkJ
CSdleHBhbmRlZF91cmwnID0+ICR1cmwtPmV4cGFuZGVkX3VybCwKCQkJCSdkaXNwbGF5X3Vy
bCcgPT4gJHVybC0+ZGlzcGxheV91cmwKCQkJKTsKCQl9CgkgIH0KCSAgJG91dFtdID0gYXJj
X1R3aXR0ZXI6Om1ha2VMaW5rcyhodG1sZW50aXRpZXMoJHR3ZWV0LT50ZXh0LCBFTlRfUVVP
VEVTLCdVVEYtOCcpLCAkbGlua3MsICRmdWxsX3VybHMpCgkJLicgJy50YWcoaHRtbGVudGl0
aWVzKCRkYXRlKSwnc3BhbicsJyBjbGFzcz0iJy4kY2xhc3NfcG9zdGVkLiciJyk7Cgl9CiAg
fQoKCXJldHVybiBkb0xhYmVsKCRsYWJlbCwgJGxhYmVsdGFnKS5kb1dyYXAoJG91dCwgJHdy
YXB0YWcsICRicmVhaywgJGNsYXNzKTsKCn0KCmZ1bmN0aW9uIGFyY190d2l0dGVyX3NlYXJj
aCgkYXR0cykKewoJZ2xvYmFsICRwcmVmcywkYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXksICRh
cmNfdHdpdHRlcl9jb25zdW1lclNlY3JldDsKCglleHRyYWN0KGxBdHRzKGFycmF5KAoJCSd1
c2VyJyAgICAgID0+ICRwcmVmc1snYXJjX3R3aXR0ZXJfdXNlciddLAoJCSdzZWFyY2gnICAg
ID0+ICcnLAoJCSdoYXNodGFncycgID0+ICcnLAoJCSd1c2VyJyAgICAgID0+ICcnLAoJCSdy
ZXBseScgICAgID0+ICcnLAoJCSdtZW50aW9uJyAgID0+ICcnLAoJCSdsaW1pdCcgICAgID0+
ICcxMCcsCgkJJ2Z1bGxfdXJscycgPT4gZmFsc2UsCgkJJ2xhbmcnICAgICAgPT4gJycsCgkJ
J2RhdGVmb3JtYXQnPT4gJHByZWZzWydhcmNoaXZlX2RhdGVmb3JtYXQnXSwKCQknY2FjaGlu
ZycgICA9PiAnMScsCgkJJ2NhY2hlX2RpcicgPT4gJHByZWZzWydhcmNfdHdpdHRlcl9jYWNo
ZV9kaXInXSwKCQknY2FjaGVfdGltZSc9PiAnNScsCgkJJ2xhYmVsJyAgICAgPT4gJycsCgkJ
J2xhYmVsdGFnJyAgPT4gJycsCgkJJ2JyZWFrJyAgICAgPT4gJ2xpJywKCQknd3JhcHRhZycg
ICA9PiAnJywKCQknY2xhc3MnICAgICA9PiBfX0ZVTkNUSU9OX18sCgkJJ2NsYXNzX3Bvc3Rl
ZCcgPT4gX19GVU5DVElPTl9fLictcG9zdGVkJywKCQknY2xhc3NfdXNlcicgICA9PiBfX0ZV
TkNUSU9OX18uJy11c2VyJwoJKSwkYXR0cykpOwoKCQkkdHdpdCA9IG5ldyBhcmNfdHdpdHRl
cigkYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXkKCQkJLCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJT
ZWNyZXQsICRwcmVmc1snYXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW4nXQoJCQksICRwcmVmc1sn
YXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW5TZWNyZXQnXSk7CgoJCWlmICgkY2FjaGluZykgeyAg
Ly8gdHVybiBvbiBjYWNoaW5nLCByZWNvbW1lbmRlZCAoZGVmYXVsdCkKCQkJJHR3aXQtPnNl
dENhY2hpbmcodHJ1ZSk7CgkJCSR0d2l0LT5jYWNoZURpcigkY2FjaGVfZGlyKTsKCQkJJHR3
aXQtPmNhY2hlVGltZSgkY2FjaGVfdGltZSk7CgkJfSBlbHNlIHsgIC8vIHR1cm4gb2ZmIGNh
Y2hpbmcsIG5vdCByZWNvbW1lbmRlZCBvdGhlciB0aGFuIGZvciB0ZXN0aW5nCgkJCSR0d2l0
LT5zZXRDYWNoaW5nKGZhbHNlKTsKCQl9CgoJCS8vIGNvbnN0cnVjdCBzZWFyY2ggcXVlcnkK
CQlpZiAoIWVtcHR5KCRzZWFyY2gpKSB7CgkJCSR0ZXJtcyA9IGV4cGxvZGUoJywnLCRzZWFy
Y2gpOyAkdGVybXMgPSBhcnJheV9tYXAoJ3RyaW0nLCR0ZXJtcyk7CgkJCSRzZWFyY2ggPSBp
bXBsb2RlKCcgJywkdGVybXMpOwoJCX0KCQlpZiAoJGhhc2h0YWdzKSB7CgkJCSRoYXNoZXMg
PSBleHBsb2RlKCcsJywkaGFzaHRhZ3MpOyAkaGFzaGVzID0gYXJyYXlfbWFwKCd0cmltJywk
aGFzaGVzKTsKCQkJJHNlYXJjaC49ICgoJHNlYXJjaCk/JyAnOicnKS4nIycuaW1wbG9kZSgn
ICMnLCRoYXNoZXMpOwoJCX0KCQlpZiAoJHJlcGx5KSB7CgkJCSRzZWFyY2guPSAoKCRzZWFy
Y2gpPycgJzonJykuJ3RvOicudHJpbSgkcmVwbHkpOwoJCX0KCQlpZiAoJHVzZXIpIHsKCQkJ
JHNlYXJjaC49ICgoJHNlYXJjaCk/JyAnOicnKS4nZnJvbTonLnRyaW0oJHVzZXIpOwoJCX0K
CQlpZiAoJG1lbnRpb24pIHsKCQkJJHNlYXJjaC49ICgoJHNlYXJjaCk/JyAnOicnKS4nQCcu
dHJpbSgkbWVudGlvbik7CgkJfQoKCQlpZiAoZW1wdHkoJHNlYXJjaCkpIHsKCQkJcmV0dXJu
ICcnOwoJCX0gZWxzZSB7CgkJCSRzZWFyY2ggPSB1cmxlbmNvZGUoJHNlYXJjaCk7CgkJfQoK
CQkkb3V0ID0gYXJyYXkoKTsKCQkkcmVzdWx0cyA9ICR0d2l0LT5nZXQoJ3NlYXJjaC90d2Vl
dHMnCgkJCSwgYXJyYXkoJ3EnPT4kc2VhcmNoLCdjb3VudCc9PiRsaW1pdCwnbGFuZyc9PiRs
YW5nKSk7CgoJCSR0d2VldHMgPSAkcmVzdWx0cy0+c3RhdHVzZXM7CgkJaWYgKCR0d2VldHMp
IHsKCgkJCWZvcmVhY2ggKCR0d2VldHMgYXMgJHR3ZWV0KSB7CgoJCQkJJHVuYW1lID0gJHR3
ZWV0LT51c2VyLT5zY3JlZW5fbmFtZTsKCQkJCSRuYW1lID0gJHR3ZWV0LT51c2VyLT5uYW1l
OwoJCQkJJHRpbWUgPSBzdHJ0b3RpbWUoaHRtbGVudGl0aWVzKCR0d2VldC0+Y3JlYXRlZF9h
dCkpOwoJCQkJJGRhdGUgPSBzYWZlX3N0cmZ0aW1lKCRkYXRlZm9ybWF0LCR0aW1lKTsKCQkJ
CSR0ZXh0ID0gJHR3ZWV0LT50ZXh0OwoKCQkJCSRsaW5rcyA9IGZhbHNlOwoJCQkJaWYgKGlz
c2V0KCR0d2VldC0+ZW50aXRpZXMtPnVybHMpKSB7CgkJCQkJJGxpbmtzID0gYXJyYXkoKTsK
CQkJCQlmb3JlYWNoICgkdHdlZXQtPmVudGl0aWVzLT51cmxzIGFzICR1cmwpIHsKCQkJCQkJ
JGxpbmtzWyR1cmwtPnVybF0gPSBhcnJheSgKCQkJCQkJCSdleHBhbmRlZF91cmwnID0+ICR1
cmwtPmV4cGFuZGVkX3VybCwKCQkJCQkJCSdkaXNwbGF5X3VybCcgPT4gJHVybC0+ZGlzcGxh
eV91cmwKCQkJCQkJKTsKCQkJCQl9CgkJCQl9CgoJCQkJJG91dFtdID0gdGFnKGhyZWYoaHRt
bGVudGl0aWVzKCR1bmFtZSksJ2h0dHA6Ly90d2l0dGVyLmNvbS8nIC4gJHR3ZWV0LT51c2Vy
LT5zY3JlZW5fbmFtZSwKCQkJCQknIHRpdGxlPSInLmh0bWxlbnRpdGllcygkbmFtZSkuJyIn
KS4nOiAnLCdzcGFuJwoJCQkJCQksJyBjbGFzcz0iJy4kY2xhc3NfdXNlci4nIicpCgkJCQkJ
LmFyY19Ud2l0dGVyOjptYWtlTGlua3MoaHRtbGVudGl0aWVzKCR0ZXh0LCBFTlRfUVVPVEVT
LCdVVEYtOCcpLCAkbGlua3MsICRmdWxsX3VybHMpCgkJCQkJLicgJy50YWcoaHRtbGVudGl0
aWVzKCRkYXRlKSwnc3BhbicKCQkJCQkJLCcgY2xhc3M9IicuJGNsYXNzX3Bvc3RlZC4nIicp
OwoKCQkJfQoKCQkJcmV0dXJuIGRvTGFiZWwoJGxhYmVsLCAkbGFiZWx0YWcpLmRvV3JhcCgk
b3V0LCAkd3JhcHRhZywgJGJyZWFrLCAkY2xhc3MpOwoJCX0KCn0KCmZ1bmN0aW9uIGFyY190
d2l0dGVyX3R3ZWV0KCRhdHRzKSB7CglnbG9iYWwgJHRoaXNhcnRpY2xlOwoKCWV4dHJhY3Qo
bEF0dHMoYXJyYXkoCgkgICdpZCcgICAgICAgID0+ICR0aGlzYXJ0aWNsZVsndGhpc2lkJ10s
CgkgICdpbmNsdWRlX3VybCcgICA9PiB0cnVlCgkpLCRhdHRzKSk7CgoJaWYgKCRpZCkgewoJ
ICAvLyBGZXRjaCBhcmNfdHdpdHRlciBzdHVmZiB0byBidWlsZCB0d2VldCBmcm9tCgkgICR0
d2VldCA9ICgkaW5jbHVkZV91cmwpID8gc2FmZV9yb3coInR3ZWV0IiwgJ2FyY190d2l0dGVy
JywgImFydGljbGVfaWQ9eyRpZH0iKQoJCTogc2FmZV9yb3coIlJFUExBQ0UodHdlZXQsQ09O
Q0FUKCcgJyx0aW55dXJsKSwnJykgQVMgdHdlZXQiCgkJICAsICdhcmNfdHdpdHRlcicsICJh
cnRpY2xlX2lkPXskaWR9Iik7Cgl9CgoJaWYgKCR0d2VldFsndHdlZXQnXSkgewoJICByZXR1
cm4gYXJjX1R3aXR0ZXI6Om1ha2VMaW5rcygKCQlodG1sZW50aXRpZXMoJHR3ZWV0Wyd0d2Vl
dCddLCBFTlRfUVVPVEVTLCdVVEYtOCcpKTsKCX0KfQoKZnVuY3Rpb24gYXJjX3R3aXR0ZXJf
dHdlZXRfdXJsKCRhdHRzLCAkdGhpbmc9bnVsbCkgewoJZ2xvYmFsICR0aGlzYXJ0aWNsZSwk
cHJlZnM7CgoJZXh0cmFjdChsQXR0cyhhcnJheSgKCSAgJ2lkJyAgICAgID0+ICR0aGlzYXJ0
aWNsZVsndGhpc2lkJ10sCgkgICd0aXRsZScgICA9PiAnJywKCSAgJ2NsYXNzJyAgID0+ICcn
CgkpLCRhdHRzKSk7CgoJaWYgKCRpZCkgewoJICAvLyBGZXRjaCBhcmNfdHdpdHRlciBzdHVm
ZiB0byBidWlsZCB0d2VldCBmcm9tCgkgICR0d2VldCA9IHNhZmVfcm93KCJ0d2VldF9pZCIK
CQksICdhcmNfdHdpdHRlcicsICJhcnRpY2xlX2lkPXskaWR9Iik7Cgl9CgoJaWYgKCR0d2Vl
dFsndHdlZXRfaWQnXSkgewoJICAkdXJsID0gImh0dHA6Ly90d2l0dGVyLmNvbS8iLiRwcmVm
c1snYXJjX3R3aXR0ZXJfdXNlciddLiIvc3RhdHVzLyIuJHR3ZWV0Wyd0d2VldF9pZCddOwoJ
ICBpZiAoJHRoaW5nPT09bnVsbCkgewoJCXJldHVybiAkdXJsOwoJICB9CgkgIHJldHVybiBo
cmVmKHBhcnNlKCR0aGluZyksICR1cmwsCgkJKCR0aXRsZSA/ICcgdGl0bGU9IicuJHRpdGxl
LiciJyA6ICcnKQoJCS4oJGNsYXNzID8gJyBjbGFzcz0iJy4kY2xhc3MuJyInIDogJycpKTsK
CX0KfQoKZnVuY3Rpb24gYXJjX3R3aXR0ZXJfdGlueXVybCgkYXR0cywgJHRoaW5nPW51bGwp
IHsKCWdsb2JhbCAkdGhpc2FydGljbGU7CgoJZXh0cmFjdChsQXR0cyhhcnJheSgKCSAgJ2lk
JyAgICAgID0+ICR0aGlzYXJ0aWNsZVsndGhpc2lkJ10sCgkgICd0aXRsZScgICA9PiAnJywK
CSAgJ2NsYXNzJyAgID0+ICcnCgkpLCRhdHRzKSk7CgoJaWYgKCRpZCkgewoJICAvLyBGZXRj
aCBhcmNfdHdpdHRlciBzdHVmZiB0byBidWlsZCB0d2VldCBmcm9tCgkgICR0d2VldCA9IHNh
ZmVfcm93KCJ0aW55dXJsIgoJCSwgJ2FyY190d2l0dGVyJywgImFydGljbGVfaWQ9eyRpZH0i
KTsKCX0KCglpZiAoJHR3ZWV0Wyd0aW55dXJsJ10pIHsKCSAgaWYgKCR0aGluZz09PW51bGwp
IHsKCQlyZXR1cm4gJHR3ZWV0Wyd0aW55dXJsJ107CgkgIH0KCgkgIHJldHVybiBocmVmKHBh
cnNlKCR0aGluZyksICR0d2VldFsndGlueXVybCddLAoJCSgkdGl0bGUgPyAnIHRpdGxlPSIn
LiR0aXRsZS4nIicgOiAnJykKCQkuKCRjbGFzcyA/ICcgY2xhc3M9IicuJGNsYXNzLiciJyA6
ICcnKSk7Cgl9Cn0KCi8qCiAqIFB1YmxpYyB0YWcgZm9yIG91dHB1dHRpbmcgd2lkZ2V0IEpT
CiAqLwpmdW5jdGlvbiBhcmNfdHdpdHRlcl93aWRnZXRfanMoJGF0dHMpCnsKICBleHRyYWN0
KGxBdHRzKGFycmF5KAoJCSdvcHRpbWlzZScgPT4gZmFsc2UKCSksJGF0dHMpKTsKCiAgcmV0
dXJuIF9hcmNfdHdpdHRlcl93aWRnZXRfanMoJG9wdGltaXNlKTsKfQoKZnVuY3Rpb24gX2Fy
Y190d2l0dGVyX3dpZGdldF9qcygkb3B0aW1pc2U9dHJ1ZSkKewogIGdsb2JhbCAkYXJjX3R3
aXR0ZXI7CgogIC8vIENoZWNrIGlmIHdpZGdldCBKUyBoYXMgYWxyZWFkeSBiZWVuIG91dHB1
dAogIGlmICgkYXJjX3R3aXR0ZXJbJ3dpZGdldF9qcyddKSByZXR1cm47CgogIGlmICgkb3B0
aW1pc2U9PWZhbHNlKSB7CglyZXR1cm4gJzxzY3JpcHQgc3JjPSJodHRwOi8vcGxhdGZvcm0u
dHdpdHRlci5jb20vd2lkZ2V0cy5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3Njcmlw
dD4nOwogIH0KCiAgJGpzID0gPDw8SlMKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQi
PgooZnVuY3Rpb24oKSB7CiAgaWYgKHdpbmRvdy5fX3R3aXR0ZXJJbnRlbnRIYW5kbGVyKSBy
ZXR1cm47CiAgdmFyIGludGVudFJlZ2V4ID0gL3R3aXR0ZXJcLmNvbShcOlxkezIsNH0pP1wv
aW50ZW50XC8oXHcrKS8sCgkgIHdpbmRvd09wdGlvbnMgPSAnc2Nyb2xsYmFycz15ZXMscmVz
aXphYmxlPXllcyx0b29sYmFyPW5vLGxvY2F0aW9uPXllcycsCgkgIHdpZHRoID0gNTUwLAoJ
ICBoZWlnaHQgPSA0MjAsCgkgIHdpbkhlaWdodCA9IHNjcmVlbi5oZWlnaHQsCgkgIHdpbldp
ZHRoID0gc2NyZWVuLndpZHRoOwoKICBmdW5jdGlvbiBoYW5kbGVJbnRlbnQoZSkgewoJZSA9
IGUgfHwgd2luZG93LmV2ZW50OwoJdmFyIHRhcmdldCA9IGUudGFyZ2V0IHx8IGUuc3JjRWxl
bWVudCwKCQltLCBsZWZ0LCB0b3A7CgoJd2hpbGUgKHRhcmdldCAmJiB0YXJnZXQubm9kZU5h
bWUudG9Mb3dlckNhc2UoKSAhPT0gJ2EnKSB7CgkgIHRhcmdldCA9IHRhcmdldC5wYXJlbnRO
b2RlOwoJfQoKCWlmICh0YXJnZXQgJiYgdGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkg
PT09ICdhJyAmJiB0YXJnZXQuaHJlZikgewoJICBtID0gdGFyZ2V0LmhyZWYubWF0Y2goaW50
ZW50UmVnZXgpOwoJICBpZiAobSkgewoJCWxlZnQgPSBNYXRoLnJvdW5kKCh3aW5XaWR0aCAv
IDIpIC0gKHdpZHRoIC8gMikpOwoJCXRvcCA9IDA7CgoJCWlmICh3aW5IZWlnaHQgPiBoZWln
aHQpIHsKCQkgIHRvcCA9IE1hdGgucm91bmQoKHdpbkhlaWdodCAvIDIpIC0gKGhlaWdodCAv
IDIpKTsKCQl9CgoJCXdpbmRvdy5vcGVuKHRhcmdldC5ocmVmLCAnaW50ZW50Jywgd2luZG93
T3B0aW9ucyArICcsd2lkdGg9JyArIHdpZHRoICsKCQkJCQkJCQkJCSAgICcsaGVpZ2h0PScg
KyBoZWlnaHQgKyAnLGxlZnQ9JyArIGxlZnQgKyAnLHRvcD0nICsgdG9wKTsKCQllLnJldHVy
blZhbHVlID0gZmFsc2U7CgkJZS5wcmV2ZW50RGVmYXVsdCAmJiBlLnByZXZlbnREZWZhdWx0
KCk7CgkgIH0KCX0KICB9CgogIGlmIChkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKSB7Cglk
b2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUludGVudCwgZmFsc2Up
OwogIH0gZWxzZSBpZiAoZG9jdW1lbnQuYXR0YWNoRXZlbnQpIHsKCWRvY3VtZW50LmF0dGFj
aEV2ZW50KCdvbmNsaWNrJywgaGFuZGxlSW50ZW50KTsKICB9CiAgd2luZG93Ll9fdHdpdHRl
ckludGVudEhhbmRsZXIgPSB0cnVlOwp9KCkpOwo8L3NjcmlwdD4KSlM7CiAgJGFyY190d2l0
dGVyWyd3aWRnZXRfanMnXSA9IHRydWU7CiAgcmV0dXJuICRqczsKfQoKLy8gRGVwcmVjYXRl
ZCBhcmNfdHdpdHRlcl9yZXR3ZWV0IHRhZywgdXNlIGFyY190d2l0dGVyX3R3ZWV0X2J1dHRv
biBpbnN0ZWFkCmZ1bmN0aW9uIGFyY190d2l0dGVyX3JldHdlZXQoJGF0dHMsICR0aGluZz1u
dWxsKQp7CiAgcmV0dXJuIGFyY190d2l0dGVyX3R3ZWV0X2J1dHRvbigkYXR0cywgJHRoaW5n
PW51bGwpOwp9CmZ1bmN0aW9uIGFyY190d2l0dGVyX3R3ZWV0X2J1dHRvbigkYXR0cywgJHRo
aW5nPW51bGwpCnsKCWdsb2JhbCAkcHJlZnMsJGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCAk
YXJjX3R3aXR0ZXJfY29uc3VtZXJTZWNyZXQ7CglnbG9iYWwgJHRoaXNhcnRpY2xlOwoKCWV4
dHJhY3QobEF0dHMoYXJyYXkoCgkJJ3VzZXInICAgICAgICA9PiAkcHJlZnNbJ2FyY190d2l0
dGVyX3VzZXInXSwgLy8gdmlhIHVzZXIgYWNjb3VudAoJCSd1cmwnICAgICAgICAgPT4gJycs
CgkJJ3RleHQnICAgICAgICA9PiAnJywKCQknZm9sbG93MScgICAgID0+ICcnLAoJCSdmb2xs
b3cyJyAgICAgPT4gJycsCgkJJ2xhbmcnICAgICAgICA9PiAnJywKCQknY291bnQnICAgICAg
ID0+ICdob3Jpem9udGFsJywKCQknaW5jbHVkZV9qcycgID0+IHRydWUsCgkJJ29wdGltaXNl
X2pzJyA9PiBmYWxzZSwKCQknd3JhcHRhZycgICAgID0+ICcnLAoJCSdjbGFzcycgICAgICAg
PT4gJ3R3aXR0ZXItc2hhcmUtYnV0dG9uJwoJKSwkYXR0cykpOwoKCSRxID0gJyc7IC8vIHF1
ZXJ5IHN0cmluZwoKCWlmICgkaWQ9JHRoaXNhcnRpY2xlWyd0aGlzaWQnXSkgewoJICAvLyBG
ZXRjaCBhcmNfdHdpdHRlciBzdHVmZiB0byBidWlsZCB0d2VldCBmcm9tCgkgICRyb3cgPSBz
YWZlX3JvdygiUkVQTEFDRSh0d2VldCxDT05DQVQoJyAnLHRpbnl1cmwpLCcnKSBBUyB0d2Vl
dCx0aW55dXJsIgoJCSwgJ2FyY190d2l0dGVyJywgImFydGljbGVfaWQ9eyRpZH0iKTsKCgkg
IGlmICgkdXJsPT0nJykgewoJCSR1cmwgPSAoJHVybCkgPyAkdXJsIDogcGVybWxpbmt1cmwo
JHRoaXNhcnRpY2xlKTsKCQkkcSA9ICd1cmw9Jy51cmxlbmNvZGUoJHVybCk7CgkgIH0KCSAg
aWYgKCR0ZXh0PT0nJykgewoJCSR0ZXh0ID0gKCRyb3dbJ3R3ZWV0J10pID8gJHJvd1sndHdl
ZXQnXSA6ICR0aGlzYXJ0aWNsZVsndGl0bGUnXTsKCSAgfQoJICAkcSAuPSAoJHEgPyAnJmFt
cDsnIDogJycpLid0ZXh0PScudXJsZW5jb2RlKCR0ZXh0KTsKCX0KCWlmICgkdXNlcikgewoJ
ICAkcSAuPSAoJHEgPyAnJmFtcDsnIDogJycpLid2aWE9Jy51cmxlbmNvZGUoJHVzZXIpOwoJ
fQoJaWYgKCRmb2xsb3cxJiYkZm9sbG93MikgewoJICAkcSAuPSAoJHEgPyAnJmFtcDsnIDog
JycpLidyZWxhdGVkPScudXJsZW5jb2RlKCRmb2xsb3cxLic6Jy4kZm9sbG93Mik7Cgl9IGVs
c2VpZiAoJGZvbGxvdzF8fCRmb2xsb3cyKSB7CgkgICRxIC49ICgkcSA/ICcmYW1wOycgOiAn
JykuJ3JlbGF0ZWQ9Jy51cmxlbmNvZGUoJGZvbGxvdzEuJGZvbGxvdzIpOwoJfQoKCXN3aXRj
aCAoJGxhbmcpIHsKCSAgY2FzZSAnZnInOiBicmVhazsgY2FzZSAnZGUnOiBicmVhazsgY2Fz
ZSAnZXMnOiBicmVhazsgY2FzZSAnanAnOiBicmVhazsKCSAgZGVmYXVsdDoKCQkkbGFuZyA9
ICdlbic7Cgl9CgkkcSAuPSAoJHEgPyAnJmFtcDsnIDogJycpLidsYW5nPScudXJsZW5jb2Rl
KCRsYW5nKTsKCglzd2l0Y2ggKCRjb3VudCkgewoJICBjYXNlICdub25lJzogYnJlYWs7IGNh
c2UgJ3ZlcnRpY2FsJzogYnJlYWs7CgkgIGRlZmF1bHQ6CgkJJGNvdW50ID0gJ2hvcml6b250
YWwnOwoJfQoJJHEgLj0gKCRxID8gJyZhbXA7JyA6ICcnKS4nY291bnQ9Jy51cmxlbmNvZGUo
JGNvdW50KTsKCgkkdGhpbmcgPSAoJHRoaW5nPT09bnVsbCkgPyAnVHdlZXQnIDogcGFyc2Uo
JHRoaW5nKTsKCgkkaHRtbCA9IGhyZWYoJHRoaW5nLCdodHRwOi8vdHdpdHRlci5jb20vc2hh
cmU/Jy4kcQoJICAsICcgY2xhc3M9IicuJGNsYXNzLiciJyk7CgoJJGpzID0gKCRpbmNsdWRl
X2pzKSA/IF9hcmNfdHdpdHRlcl93aWRnZXRfanMoJG9wdGltaXNlX2pzP3RydWU6ZmFsc2Up
IDogJyc7CgoJcmV0dXJuICRqcy4kaHRtbDsKfQoKLyoKICogVHdpdHRlciBGb2xsb3cgYnV0
dG9uCiAqLwpmdW5jdGlvbiBhcmNfdHdpdHRlcl9mb2xsb3dfYnV0dG9uKCRhdHRzLCAkdGhp
bmc9bnVsbCkKewoJZ2xvYmFsICRwcmVmcywkYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXksICRh
cmNfdHdpdHRlcl9jb25zdW1lclNlY3JldDsKCWdsb2JhbCAkdGhpc2FydGljbGU7CgoJZXh0
cmFjdChsQXR0cyhhcnJheSgKCQkndXNlcicgICAgICAgID0+ICRwcmVmc1snYXJjX3R3aXR0
ZXJfdXNlciddLCAvLyB2aWEgdXNlciBhY2NvdW50CgkJJ2xhbmcnICAgICAgICA9PiAnJywK
CQknY291bnQnICAgICAgID0+IHRydWUsCgkJJ2luY2x1ZGVfanMnICA9PiB0cnVlLAoJCSdv
cHRpbWlzZV9qcycgPT4gZmFsc2UsCgkJJ2NsYXNzJyAgICAgICA9PiAndHdpdHRlci1mb2xs
b3ctYnV0dG9uJwoJKSwkYXR0cykpOwoKCSRhdHRzID0gJyc7IC8vIGRhdGEgYXR0cmlidXRl
cwoKCXN3aXRjaCAoJGxhbmcpIHsKCSAgY2FzZSAnZnInOiBicmVhazsgY2FzZSAnZGUnOiBi
cmVhazsgY2FzZSAnZXMnOiBicmVhazsgY2FzZSAnanAnOiBicmVhazsKCSAgZGVmYXVsdDoK
CQkkbGFuZyA9ICdlbic7Cgl9CgkkYXR0cyAuPSAnIGRhdGEtbGFuZz0iJy51cmxlbmNvZGUo
JGxhbmcpLiciJzsKCgkkYXR0cyAuPSAnIGRhdGEtc2hvdy1jb3VudD0iJy4oJGNvdW50Pyd0
cnVlJzonZmFsc2UnKS4nIic7CgoJJHRoaW5nID0gKCR0aGluZz09PW51bGwpID8gJ0ZvbGxv
dyBAJy4kdXNlciA6IHBhcnNlKCR0aGluZyk7CgoJJGh0bWwgPSBocmVmKCR0aGluZywnaHR0
cDovL3R3aXR0ZXIuY29tLycudXJsZW5jb2RlKCR1c2VyKQoJICAsICcgY2xhc3M9IicuJGNs
YXNzLiciJy4kYXR0cyk7CgoJJGpzID0gKCRpbmNsdWRlX2pzKSA/IF9hcmNfdHdpdHRlcl93
aWRnZXRfanMoJG9wdGltaXNlX2pzP3RydWU6ZmFsc2UpIDogJyc7CgoJcmV0dXJuICRqcy4k
aHRtbDsKfQoKLyoKCUFkbWluLXNpZGUgZnVuY3Rpb25zCgk9PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09CiovCgovLyBJ
bnN0YWxsYXRpb24gZnVuY3Rpb24gLSBidWlsZHMgTXlTUUwgdGFibGUKZnVuY3Rpb24gYXJj
X3R3aXR0ZXJfaW5zdGFsbCgpCnsKCgkvLyBGb3IgZmlyc3QgaW5zdGFsbCwgY3JlYXRlIHRh
YmxlIGZvciB0d2VldHMKCSRzcWwgPSAiQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgIi5Q
RlguImFyY190d2l0dGVyICI7Cgkkc3FsLj0gIihhcmNfdHdpdHRlcmlkIElOVEVHRVIgQVVU
T19JTkNSRU1FTlQgUFJJTUFSWSBLRVksCgkJYXJ0aWNsZV9pZCBJTlRFR0VSKDExKSwKCQl0
d2VldF9pZCBWQVJDSEFSKDEwMCksCgkJdHdlZXQgVkFSQ0hBUigxNDApLAoJCXRpbnl1cmwg
VkFSQ0hBUigzMCkpOyI7CgoJaWYgKCFzYWZlX3F1ZXJ5KCRzcWwpKSB7CgkJcmV0dXJuICdF
cnJvciAtIHVuYWJsZSB0byBjcmVhdGUgYXJjX3R3aXR0ZXIgdGFibGUnOwoJfQoKfQoKLy8g
VW5pbnN0YWxsIGZ1bmN0aW9uIC0gZGVsZXRlcyBNeVNRTCB0YWJsZSBhbmQgcmVsYXRlZCBw
cmVmZXJlbmNlcwpmdW5jdGlvbiBhcmNfdHdpdHRlcl91bmluc3RhbGwoKQp7CgoJJHNxbCA9
ICJEUk9QIFRBQkxFIElGIEVYSVNUUyAiLlBGWC4iYXJjX3R3aXR0ZXI7IjsKCWlmICghc2Fm
ZV9xdWVyeSgkc3FsKSkgewoJCXJldHVybiAnRXJyb3IgLSB1bmFibGUgdG8gZGVsZXRlIGFy
Y190d2l0dGVyIHRhYmxlJzsKCX0KCgkkc3FsID0gIkRFTEVURSBGUk9NICAiLlBGWC4idHhw
X3ByZWZzIFdIRVJFIGV2ZW50PSdhcmNfdHdpdHRlcic7IjsKCWlmICghc2FmZV9xdWVyeSgk
c3FsKSkgewoJCXJldHVybiAnRXJyb3IgLSB1bmFibGUgdG8gZGVsZXRlIGFyY190d2l0dGVy
IHByZWZlcmVuY2VzJzsKCX0KCn0KZnVuY3Rpb24gYXJjX3R3aXR0ZXJfdXJsX21ldGhvZF9z
ZWxlY3QoJG5hbWUsICR2YWwpCnsKCSRtZXRob2RzID0gYXJyYXkoCgkJJ2Z1bGwnID0+ICdE
byBub3Qgc2hvcnRlbicsCgkJJ3Rpbnl1cmwnID0+ICdUaW55dXJsJywKCQknaXNnZCcgPT4g
J0lzLmdkJywKCQknYXJjX3R3aXR0ZXInID0+ICdUWFAgVHdlZXQnLAoJCSdzbWQnID0+ICdz
bWRfc2hvcnRfdXJsJwoJKTsKCXJldHVybiBzZWxlY3RJbnB1dCgkbmFtZSwgJG1ldGhvZHMs
ICR2YWwsICcnLCAnJywgJG5hbWUpOwp9CmZ1bmN0aW9uIGFyY190d2l0dGVyX3RhYl9zZWxl
Y3QoJG5hbWUsICR2YWwpCnsKCSR0YWJzID0gYXJyYXkoJ2NvbnRlbnQnID0+ICdDb250ZW50
JywKCQknZXh0ZW5zaW9ucycgPT4gJ0V4dGVuc2lvbnMnLAoJCScnID0+ICdIaWRkZW4nKTsK
CXJldHVybiBzZWxlY3RJbnB1dCgkbmFtZSwgJHRhYnMsICR2YWwsICcnLCAnJywgJG5hbWUp
Owp9Ci8vIFByb3ZpZGUgaW50ZXJmYWNlIGZvciBzZXR0aW5nIHByZWZlcmVuY2VzCmZ1bmN0
aW9uIGFyY190d2l0dGVyX3ByZWZzKCRldmVudCwkc3RlcCkKewoKCWdsb2JhbCAkcHJlZnMs
JGFyY190d2l0dGVyX2NvbnN1bWVyS2V5LCRhcmNfdHdpdHRlcl9jb25zdW1lclNlY3JldDsK
CgkkdXNlciAgICAgICAgICA9ICRwcmVmc1snYXJjX3R3aXR0ZXJfdXNlciddOwoJJHByZWZp
eCAgICAgICAgPSAkcHJlZnNbJ2FyY190d2l0dGVyX3ByZWZpeCddOwoJJHN1ZmZpeCAgICAg
ICAgPSAkcHJlZnNbJ2FyY190d2l0dGVyX3N1ZmZpeCddOwoJJHR3ZWV0X2RlZmF1bHQgPSAk
cHJlZnNbJ2FyY190d2l0dGVyX3R3ZWV0X2RlZmF1bHQnXTsKCSR1cmxfbWV0aG9kICAgID0g
JHByZWZzWydhcmNfdHdpdHRlcl91cmxfbWV0aG9kJ107Cgkkc2hvcnRfdXJsICAgICA9ICRw
cmVmc1snYXJjX3Nob3J0X3VybCddOwoJJHNob3J0X3NpdGVfdXJsPSAkcHJlZnNbJ2FyY19z
aG9ydF9zaXRlX3VybCddOwoJJGNhY2hlX2RpciAgICAgPSAkcHJlZnNbJ2FyY190d2l0dGVy
X2NhY2hlX2RpciddOwoJJHRhYiAgICAgICAgICAgPSAkcHJlZnNbJ2FyY190d2l0dGVyX3Rh
YiddOwoKCXN3aXRjaCAoJHN0ZXApIHsKCQljYXNlICdwcmVmc19zYXZlJzogcGFnZXRvcCgn
VFhQIFR3ZWV0JywgJ1ByZWZlcmVuY2VzIHNhdmVkJyk7IGJyZWFrOwoJCWNhc2UgJ3JlZ2lz
dGVyJzogcGFnZXRvcCgnVFhQIFR3ZWV0JywnQ29ubmVjdCB0byBUd2l0dGVyJyk7IGJyZWFr
OwoJCWNhc2UgJ3ZhbGlkYXRlJzoKCQlkZWZhdWx0OiBwYWdldG9wKCdUWFAgVHdlZXQnKTsK
CX0KCgkkaHRtbCA9ICcnOwoKCWlmICgkc3RlcD09J3JlZ2lzdGVyJykgeyAvLyBPQXV0aCBy
ZWdpc3RyYXRpb24gcHJvY2VzcwoKCQkkdHdpdCA9IG5ldyBhcmNfdHdpdHRlcigkYXJjX3R3
aXR0ZXJfY29uc3VtZXJLZXksICRhcmNfdHdpdHRlcl9jb25zdW1lclNlY3JldCk7CgoJCS8v
IEJ1aWxkIGEgY2FsbGJhY2sgVVJMIGZvciBUd2l0dGVyIHRvIHJldHVybiB0byB0aGUgbmV4
dCBzdGFnZQoJCSRjYWxsYmFja1VSTCA9ICR0d2l0LT5jYWxsYmFja1VSTCgkZXZlbnQsJ3Zh
bGlkYXRlJyk7CgoJCSRyZXF1ZXN0ID0gJHR3aXQtPmdldFJlcXVlc3RUb2tlbigkY2FsbGJh
Y2tVUkwpOwoJCSRyZXF1ZXN0X3Rva2VuID0gJHJlcXVlc3RbIm9hdXRoX3Rva2VuIl07CgkJ
JHJlcXVlc3RfdG9rZW5fc2VjcmV0ID0gJHJlcXVlc3RbIm9hdXRoX3Rva2VuX3NlY3JldCJd
OwoKCQlzZXRfcHJlZignYXJjX3R3aXR0ZXJfcmVxdWVzdFRva2VuJywkcmVxdWVzdF90b2tl
biwgJ2FyY190d2l0dGVyJywyKTsKCQlzZXRfcHJlZignYXJjX3R3aXR0ZXJfcmVxdWVzdFRv
a2VuU2VjcmV0JywkcmVxdWVzdF90b2tlbl9zZWNyZXQsICdhcmNfdHdpdHRlcicsMik7CgoJ
JGh0bWwgPSAiPGRpdiBjbGFzcz0ndGV4dC1jb2x1bW4nPiIKCSAgLiI8cD4iLmhyZWYoJ1Np
Z24taW4gdG8gVHdpdHRlcicsICR0d2l0LT5nZXRBdXRob3JpemVVUkwoJHJlcXVlc3QpKS4i
IGFuZCBmb2xsb3cgdGhlIGluc3RydWN0aW9ucyB0byBhbGxvdyBUWFAgVHdlZXQgdG8gdXNl
IHlvdXIgYWNjb3VudC4gSWYgeW91IGFyZSBhbHJlYWR5IHNpZ25lZCBpbiB0byBUd2l0dGVy
IHRoZW4gdGhhdCBhY2NvdW50IHdpbGwgYmUgYXNzb2NpYXRlZCB3aXRoIFRYUCBUd2VldCBz
byB5b3UgbWF5IG5lZWQgdG8gc2lnbiBvdXQgZmlyc3QgaWYgeW91IHdhbnQgdG8gdXNlIGEg
ZGlmZmVyZW50IGFjY291bnQuPC9wPiIKCSAgLiI8L2Rpdj4iOwoKCX0gZWxzZWlmICgkc3Rl
cD09J3ZhbGlkYXRlJykgewoJCSR0d2l0ID0gbmV3IGFyY190d2l0dGVyKCRhcmNfdHdpdHRl
cl9jb25zdW1lcktleQoJCQksICRhcmNfdHdpdHRlcl9jb25zdW1lclNlY3JldCwgJHByZWZz
WydhcmNfdHdpdHRlcl9yZXF1ZXN0VG9rZW4nXQoJCQksICRwcmVmc1snYXJjX3R3aXR0ZXJf
cmVxdWVzdFRva2VuU2VjcmV0J10pOwoJCS8vIEFzayBUd2l0dGVyIGZvciBhbiBhY2Nlc3Mg
dG9rZW4gKGFuZCBhbiBhY2Nlc3MgdG9rZW4gc2VjcmV0KQoJCSRyZXF1ZXN0ID0gJHR3aXQt
PmdldEFjY2Vzc1Rva2VuKCBncHMoJ29hdXRoX3ZlcmlmaWVyJykgKTsKCQkkYWNjZXNzX3Rv
a2VuID0gJHJlcXVlc3RbJ29hdXRoX3Rva2VuJ107CgkJJGFjY2Vzc190b2tlbl9zZWNyZXQg
PSAkcmVxdWVzdFsnb2F1dGhfdG9rZW5fc2VjcmV0J107CgkJJHVzZXIgPSAkcmVxdWVzdFsn
c2NyZWVuX25hbWUnXTsKCQkvLyBTdG9yZSB0aGUgYWNjZXNzIHRva2VuIGFuZCBzZWNyZXQK
CQlzZXRfcHJlZignYXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW4nLCRhY2Nlc3NfdG9rZW4sICdh
cmNfdHdpdHRlcicsMik7CgkJc2V0X3ByZWYoJ2FyY190d2l0dGVyX2FjY2Vzc1Rva2VuU2Vj
cmV0JywkYWNjZXNzX3Rva2VuX3NlY3JldAoJCQksICdhcmNfdHdpdHRlcicsMik7CgkJc2V0
X3ByZWYoJ2FyY190d2l0dGVyX3VzZXInLCR1c2VyKTsKCQkkcHJlZnNbJ2FyY190d2l0dGVy
X2FjY2Vzc1Rva2VuJ10gPSAkYWNjZXNzX3Rva2VuOwoJCSRwcmVmc1snYXJjX3R3aXR0ZXJf
YWNjZXNzVG9rZW5TZWNyZXQnXSA9ICRhY2Nlc3NfdG9rZW5fc2VjcmV0OwoJCXVuc2V0KCR0
d2l0KTsKCX0KCglpZiAoJHN0ZXA9PSJwcmVmc19zYXZlIikgewoJCSRwcmVmaXggPSB0cmlt
KGdwcygnYXJjX3R3aXR0ZXJfcHJlZml4JykpOwoJCSRzdWZmaXggPSB0cmltKGdwcygnYXJj
X3R3aXR0ZXJfc3VmZml4JykpOwoJCSR0d2VldF9kZWZhdWx0ID0gZ3BzKCdhcmNfdHdpdHRl
cl90d2VldF9kZWZhdWx0Jyk7CgkJJHVybF9tZXRob2QgPSBncHMoJ2FyY190d2l0dGVyX3Vy
bF9tZXRob2QnKTsKCQkkc2hvcnRfdXJsID0gZ3BzKCdhcmNfc2hvcnRfdXJsJyk7CgkJJHNo
b3J0X3NpdGVfdXJsID0gZ3BzKCdhcmNfc2hvcnRfc2l0ZV91cmwnKTsKCQkkY2FjaGVfZGly
ID0gZ3BzKCdhcmNfdHdpdHRlcl9jYWNoZV9kaXInKTsKCQkkdGFiID0gZ3BzKCdhcmNfdHdp
dHRlcl90YWInKTsKCQlpZiAoc3RybGVuKCRwcmVmaXgpPD0yMCkgewoJCQlzZXRfcHJlZign
YXJjX3R3aXR0ZXJfcHJlZml4JywkcHJlZml4KTsKCQl9IGVsc2UgewoJCQkkcHJlZml4ID0g
JHByZWZzWydhcmNfdHdpdHRlcl9wcmVmaXgnXTsKCQl9CgkJaWYgKHN0cmxlbigkc3VmZml4
KTw9MjApIHsKCQkJc2V0X3ByZWYoJ2FyY190d2l0dGVyX3N1ZmZpeCcsJHN1ZmZpeCk7CgkJ
fSBlbHNlIHsKCQkJJHN1ZmZpeCA9ICRwcmVmc1snYXJjX3R3aXR0ZXJfc3VmZml4J107CgkJ
fQoJCSR0d2VldF9kZWZhdWx0ID0gKCR0d2VldF9kZWZhdWx0KSA/IDEgOiAwOwoJCSRzaG9y
dF91cmwgPSAoJHNob3J0X3VybCkgPyAxIDogMDsKCQlpZiAoISRzaG9ydF9zaXRlX3VybCkg
JHNob3J0X3NpdGVfdXJsID0gJHByZWZzWydzaXRldXJsJ107CgkJc2V0X3ByZWYoJ2FyY190
d2l0dGVyX3R3ZWV0X2RlZmF1bHQnLCR0d2VldF9kZWZhdWx0KTsKCQlzZXRfcHJlZignYXJj
X3Nob3J0X3VybCcsJHNob3J0X3VybCk7CgkJc2V0X3ByZWYoJ2FyY190d2l0dGVyX3VybF9t
ZXRob2QnLCR1cmxfbWV0aG9kKTsKCQlzZXRfcHJlZignYXJjX3Nob3J0X3NpdGVfdXJsJywk
c2hvcnRfc2l0ZV91cmwpOwoJCXNldF9wcmVmKCdhcmNfdHdpdHRlcl9jYWNoZV9kaXInLCRj
YWNoZV9kaXIpOwoJCXNldF9wcmVmKCdhcmNfdHdpdHRlcl90YWInLCR0YWIpOwoJfQoKCWlm
ICggJHN0ZXAhPSdyZWdpc3RlcicgKSB7CgkJaWYgKCBpc3NldCgkcHJlZnNbJ2FyY190d2l0
dGVyX2FjY2Vzc1Rva2VuJ10pCgkJJiYgaXNzZXQoJHByZWZzWydhcmNfdHdpdHRlcl9hY2Nl
c3NUb2tlblNlY3JldCddKSApIHsKCQkJJHR3aXQgPSBuZXcgYXJjX3R3aXR0ZXIoJGFyY190
d2l0dGVyX2NvbnN1bWVyS2V5CgkJCQksICRhcmNfdHdpdHRlcl9jb25zdW1lclNlY3JldCwg
JHByZWZzWydhcmNfdHdpdHRlcl9hY2Nlc3NUb2tlbiddCgkJCQksICRwcmVmc1snYXJjX3R3
aXR0ZXJfYWNjZXNzVG9rZW5TZWNyZXQnXSk7CgkJCSRyZWdpc3RlclVSTCA9ICR0d2l0LT5j
YWxsYmFja1VSTCgkZXZlbnQsJ3JlZ2lzdGVyJyk7CgoJCQkvLyBEZWZpbmUgdGhlIGZpZWxk
cyByZWFkeSB0byBidWlsZCB0aGUgZm9ybQoJCQkkZmllbGRzID0gYXJyYXkoCgkJJ1R3ZWV0
IFNldHRpbmdzJyA9PiBhcnJheSgKCQkgICdhcmNfdHdpdHRlcl9wcmVmaXgnID0+IGFycmF5
KAoJCQknbGFiZWwnID0+ICdUd2VldCBwcmVmaXgnLAoJCQkndmFsdWUnID0+ICRwcmVmaXgK
CQkgICksCgkJICAnYXJjX3R3aXR0ZXJfc3VmZml4JyA9PiBhcnJheSgKCQkJJ2xhYmVsJyA9
PiAnVHdlZXQgc3VmZml4JywKCQkJJ3ZhbHVlJyA9PiAkc3VmZml4CgkJICApLAoJCSAgJ2Fy
Y190d2l0dGVyX3R3ZWV0X2RlZmF1bHQnID0+IGFycmF5KAoJCQknbGFiZWwnID0+ICdUd2Vl
dCBhcnRpY2xlcyBieSBkZWZhdWx0JywKCQkJJ3R5cGUnID0+ICd5ZXNub1JhZGlvJywKCQkJ
J3ZhbHVlJyA9PiAkdHdlZXRfZGVmYXVsdAoJCSAgKSwKCQkgICdhcmNfdHdpdHRlcl91cmxf
bWV0aG9kJyA9PiBhcnJheSgKCQkJJ2xhYmVsJyA9PiAnVVJMIHNob3J0bmVyJywKCQkJJ3R5
cGUnID0+ICdhcmNfdHdpdHRlcl91cmxfbWV0aG9kX3NlbGVjdCcsCgkJCSd2YWx1ZScgPT4g
JHVybF9tZXRob2QKCQkgICkKCQkpLAoJCSdUWFAgVHdlZXQgc2hvcnQgVVJMJyA9PiBhcnJh
eSgKCQkgICdhcmNfc2hvcnRfdXJsJyA9PiBhcnJheSgKCQkJJ2xhYmVsJyA9PiAnRW5hYmxl
IFRYUCBUd2VldCBzaG9ydCBVUkwgcmVkaXJlY3QnLAoJCQkndHlwZScgPT4gJ3llc25vUmFk
aW8nLAoJCQkndmFsdWUnID0+ICRzaG9ydF91cmwKCQkgICksCgkJICAnYXJjX3Nob3J0X3Np
dGVfdXJsJyA9PiBhcnJheSgKCQkJJ2xhYmVsJyA9PiAnVFhQIFR3ZWV0IHNob3J0IHNpdGUg
VVJMJywKCQkJJ3ZhbHVlJyA9PiAkc2hvcnRfc2l0ZV91cmwKCQkgICkKCQkpLAoJCSdUd2l0
dGVyIFRhYicgPT4gYXJyYXkoCgkJICAnYXJjX3R3aXR0ZXJfdGFiJyA9PiBhcnJheSgKCQkJ
J2xhYmVsJyA9PiAnTG9jYXRpb24gb2YgdGFiJywKCQkJJ3R5cGUnID0+ICdhcmNfdHdpdHRl
cl90YWJfc2VsZWN0JywKCQkJJ3ZhbHVlJyA9PiAkdGFiCgkJICApCgkJKSwKCQknQ2FjaGUn
ID0+IGFycmF5KAoJCSAgJ2FyY190d2l0dGVyX2NhY2hlX2RpcicgPT4gYXJyYXkoCgkJCSds
YWJlbCcgPT4gJ0NhY2hlIGRpcmVjdG9yeScsCgkJCSd2YWx1ZScgPT4gJGNhY2hlX2RpcgoJ
CSAgKQoJCSkKCQkJKTsKCgkJCSRmb3JtID0gIjxoMj5Ud2l0dGVyIGFjY291bnQgZGV0YWls
czwvaDI+IgoJCS4iPHA+PHNwYW4gY2xhc3M9J2VkaXQtbGFiZWwnPlR3aXR0ZXIgdXNlcm5h
bWU8L3NwYW4+IgoJCS4iPHNwYW4gY2xhc3M9J2VkaXQtdmFsdWUnPiIKCQkuKCRwcmVmc1sn
YXJjX3R3aXR0ZXJfdXNlciddID8gJHVzZXIuJyAoJy5ocmVmKCdSZS1jb25uZWN0JywkcmVn
aXN0ZXJVUkwpLicpJyA6ICc8ZW0+dW5rbm93bjwvZW0+Jy5ocmVmKCdDb25uZWN0IHRvIFR3
aXR0ZXInLCRyZWdpc3RlclVSTCkpCgkJCQkuIjwvc3Bhbj48L3A+IjsKCgkJCSRmb3JtIC49
IF9hcmNfdHdpdHRlcl9mb3JtX2J1aWxkZXIoJGZpZWxkcyk7CgoJCQkkZm9ybSAuPSBzSW5w
dXQoJ3ByZWZzX3NhdmUnKS5uLmVJbnB1dCgncGx1Z2luX3ByZWZzLmFyY190d2l0dGVyJyk7
CgoJICAkZm9ybSAuPSAnPHA+Jy5mSW5wdXQoJ3N1Ym1pdCcsICdTdWJtaXQnLCBnVHh0KCdz
YXZlX2J1dHRvbicpLCAncHVibGlzaCcpLic8L3A+JzsKCgkgICRodG1sID0gIjxoMSBjbGFz
cz0ndHhwLWhlYWRpbmcnPlRYUCBUd2VldDwvaDE+IgoJCS4iPHAgY2xhc3M9J25hdi10ZXJ0
aWFyeSc+IgoJCS4iPGEgaHJlZj0nLi8/ZXZlbnQ9YXJjX2FkbWluX3R3aXR0ZXInIGNsYXNz
PSduYXZsaW5rJz5Ud2l0dGVyPC9hPjxhIGhyZWY9Jy4vP2V2ZW50PXBsdWdpbl9wcmVmcy5h
cmNfdHdpdHRlcicgY2xhc3M9J25hdmxpbmstYWN0aXZlJz5PcHRpb25zPC9hPiIKCQkuIjwv
cD4iOwoKCSAgJGh0bWwgLj0gZm9ybSgiPGRpdiBjbGFzcz0ncGx1Z2luLWNvbHVtbic+Ii4k
Zm9ybS4iPC9kaXY+IiwgIiBjbGFzcz0nZWRpdC1mb3JtJyIpOwoKCQl9IGVsc2VpZiAoICRz
dGVwIT0ncmVnaXN0ZXInICkgewoKCQkJJHJlZ2lzdGVyVVJMID0gYXJjX3R3aXR0ZXI6OmNh
bGxiYWNrVVJMKCRldmVudCwncmVnaXN0ZXInKTsKCgkJCSRmb3JtID0gIjxoMj5Ud2l0dGVy
IGFjY291bnQgZGV0YWlsczwvaDI+IgoJCS4iPHNwYW4gY2xhc3M9J2VkaXQtbGFiZWwnPlR3
aXR0ZXIgdXNlcm5hbWU8L3NwYW4+IgoJCS4iPHNwYW4gY2xhc3M9J2VkaXQtdmFsdWUnPjxl
bT51bmtub3duPC9lbT4gJm1kYXNoOyAiCgkJLmhyZWYoJ0Nvbm5lY3QgdG8gVHdpdHRlcics
JHJlZ2lzdGVyVVJMKQoJCQkJLiI8L3NwYW4+IjsKCgkgICRodG1sID0gZm9ybSgiPGRpdiBj
bGFzcz0ncGx1Z2luLWNvbHVtbic+Ii4kZm9ybS4iPC9kaXY+IiwgIiBjbGFzcz0nZWRpdC1m
b3JtJyIpOwoKCQl9Cgl9CgoJLy8gU2V0IGpRdWVyeSBmb3Igc3dpdGNoaW5nIG9uL29mZiBy
ZWxldmFudCBhcmNfc2hvcnRfdXJsIGZpZWxkcwoJJGpzID0gPDw8SlMKPHNjcmlwdCBsYW5n
dWFnZT0iamF2YXNjcmlwdCIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KJChkb2N1bWVudCku
cmVhZHkoZnVuY3Rpb24oKXsKICB2YXIgb25vZmYgPSAkKCcuYXJjX3Nob3J0X3VybCcpOwog
IHZhciBhcmNfc2hvcnRfdXJsX29mZiA9ICQoJyNhcmNfc2hvcnRfdXJsLWFyY19zaG9ydF91
cmwtMCcpOwogIHZhciB1cmwgPSAkKCcuYXJjX3Nob3J0X3NpdGVfdXJsJyk7CiAgdmFyIHVy
bF9tZXRob2QgPSAkKCdzZWxlY3RbbmFtZT0iYXJjX3R3aXR0ZXJfdXJsX21ldGhvZCJdJyk7
CgogIGlmIChhcmNfc2hvcnRfdXJsX29mZi5hdHRyKCdjaGVja2VkJyk9PSdjaGVja2VkJyAm
JiAkKCdvcHRpb246c2VsZWN0ZWQnLCB1cmxfbWV0aG9kKS52YWwoKSE9J2FyY190d2l0dGVy
JykgewoJdXJsLmhpZGUoKTsKICB9CiAgJCgnaW5wdXQnLCBvbm9mZikuY2hhbmdlKGZ1bmN0
aW9uKCl7CglpZiAoJCgnb3B0aW9uOnNlbGVjdGVkJywgdXJsX21ldGhvZCkudmFsKCkhPSdh
cmNfdHdpdHRlcicpIHsKCSAgYXJjX3Nob3J0X3VybF9vZmYuYXR0cignY2hlY2tlZCcpPT0n
Y2hlY2tlZCcgPyB1cmwuaGlkZSgpIDogdXJsLnNob3coKTsKCX0KICB9KTsKCiAgaWYgKCQo
J29wdGlvbjpzZWxlY3RlZCcsIHVybF9tZXRob2QpLnZhbCgpPT0nYXJjX3R3aXR0ZXInKSB7
Cglvbm9mZi5oaWRlKCk7IHVybC5zaG93KCk7CiAgfQogIHVybF9tZXRob2QuY2hhbmdlKGZ1
bmN0aW9uKCl7CglpZiAoJCgnb3B0aW9uOnNlbGVjdGVkJywgdXJsX21ldGhvZCkudmFsKCk9
PSdhcmNfdHdpdHRlcicpIHsKCSAgb25vZmYudG9nZ2xlKCk7IHVybC5zaG93KCk7Cgl9IGVs
c2UgewoJICBvbm9mZi50b2dnbGUoKTsKCSAgYXJjX3Nob3J0X3VybF9vZmYuYXR0cignY2hl
Y2tlZCcpPT0nY2hlY2tlZCcgPyB1cmwuaGlkZSgpIDogdXJsLnNob3coKTsKCX0KICB9KQp9
KTsKPC9zY3JpcHQ+CkpTOwoKCWVjaG8gJGpzLiRodG1sOwp9CgpmdW5jdGlvbiBfYXJjX3R3
aXR0ZXJfZm9ybV9idWlsZGVyKCRmaWVsZHMpIHsKCiAgJGZvcm0gPSAnJzsKCiAgZm9yZWFj
aCAoJGZpZWxkcyBhcyAkZmsgPT4gJGZ2KSB7CgoJJGZvcm0gLj0gKCRmaykgPyAiPGgyPiRm
azwvaDI+IiA6ICcnOwoKCWZvcmVhY2ggKCRmdiBhcyAkayA9PiAkdikgewoKCSAgJHR5cGUg
PSBpc3NldCgkdlsndHlwZSddKSA/ICR2Wyd0eXBlJ10gOiAndGV4dCc7CgoJICAkZm9ybSAu
PSAiPHAgY2xhc3M9JyRrJz4iCgkJLiI8c3BhbiBjbGFzcz0nZWRpdC1sYWJlbCc+PGxhYmVs
IGZvcj0nJGsnPiIuJHZbJ2xhYmVsJ10uIjwvbGFiZWw+PC9zcGFuPiI7CgoJICBzd2l0Y2gg
KCR0eXBlKSAgewoKCQljYXNlICd0ZXh0YXJlYSc6CgoJCSAgJGZvcm0gLj0gdGV4dF9hcmVh
KCRrLCAnNTAnLCAnNTUwJywgJHZbJ3ZhbHVlJ10sICRrKTsKCQkgIGJyZWFrOwoKCQljYXNl
ICd5ZXNub1JhZGlvJzoKCgkJICAkZm9ybSAuPSAiPHNwYW4gY2xhc3M9J2VkaXQtdmFsdWUn
PiIueWVzbm9SYWRpbygkaywgJHZbJ3ZhbHVlJ10sICcnLCAkaykuIjwvc3Bhbj4iOwoJCSAg
YnJlYWs7CgoJCWNhc2UgJ2FyY190d2l0dGVyX3RhYl9zZWxlY3QnOgoKCQkgICRmb3JtIC49
ICI8c3BhbiBjbGFzcz0nZWRpdC12YWx1ZSc+Ii5hcmNfdHdpdHRlcl90YWJfc2VsZWN0KCRr
LCAkdlsndmFsdWUnXSkuIjwvc3Bhbj4iOwoJCSAgYnJlYWs7CgoJCWNhc2UgJ2FyY190d2l0
dGVyX3VybF9tZXRob2Rfc2VsZWN0JzoKCgkJICAkZm9ybSAuPSAiPHNwYW4gY2xhc3M9J2Vk
aXQtdmFsdWUnPiIuYXJjX3R3aXR0ZXJfdXJsX21ldGhvZF9zZWxlY3QoJGssICR2Wyd2YWx1
ZSddKS4iPC9zcGFuPiI7CgkJICBicmVhazsKCgkJZGVmYXVsdDoKCgkJICAkZm9ybSAuPSAi
PHNwYW4gY2xhc3M9J2VkaXQtdmFsdWUnPiIuZklucHV0KCd0ZXh0JywkaywkdlsndmFsdWUn
XSwnJywnJywnJywnJywnJywkaykuIjwvc3Bhbj4iOwoJCSAgYnJlYWs7CgoJICB9CgoJICAk
Zm9ybSAuPSAiPC9wPiI7Cgl9CgogIH0KCiAgcmV0dXJuICRmb3JtOwp9CgovLyBBZGQgVHdp
dHRlciB0YWIgdG8gVGV4dHBhdHRlcm4KZnVuY3Rpb24gYXJjX2FkbWluX3R3aXR0ZXIoJGV2
ZW50LCRzdGVwKQp7CglnbG9iYWwgJHByZWZzLCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXks
ICRhcmNfdHdpdHRlcl9jb25zdW1lclNlY3JldDsKCgkkdHdpdCA9IG5ldyBhcmNfdHdpdHRl
cigkYXJjX3R3aXR0ZXJfY29uc3VtZXJLZXkKCQkJLCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJT
ZWNyZXQsICRwcmVmc1snYXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW4nXQoJCQksICRwcmVmc1sn
YXJjX3R3aXR0ZXJfYWNjZXNzVG9rZW5TZWNyZXQnXSk7CgoJJHR3aXQtPmNhY2hlRGlyKCRw
cmVmc1snYXJjX3R3aXR0ZXJfY2FjaGVfZGlyJ10pOwoKCSRkYXRhID0gJHR3aXQtPmdldCgn
dXNlcnMvc2hvdycKCQksIGFycmF5KCdzY3JlZW5fbmFtZSc9PiRwcmVmc1snYXJjX3R3aXR0
ZXJfdXNlciddKSk7CgkkdHdpdHRlclVzZXIgPSAkZGF0YTsKCSR0d2l0dGVyVXNlclVSTCA9
ICdodHRwOi8vd3d3LnR3aXR0ZXIuY29tLycuJHR3aXR0ZXJVc2VyLT5zY3JlZW5fbmFtZTsK
CglpZiAoJHN0ZXA9PSJ0d2VldCIpIHsgLy8gcG9zdCBhbiB1cGRhdGUgdG8gVHdpdHRlcgoK
CQkvLyBmZXRjaCBhbmQgY2xlYW4gbWVzc2FnZQoJCSRtZXNzYWdlID0gc3RyaXBfdGFncyhn
cHMoJ21lc3NhZ2UnKSk7CgkJLy8gV2UgbmVlZCB0byBhY2NvdW50IGZvciB0LmNvIFVSTCBz
aG9ydGVuaW5nIGluIG91ciBjb3VudCAoMjIgY2hhcmFjdGVycyBmb3IgYSBVUkwsIDIzIGlm
IGh0dHBzKS4KCQkkdXJsUGF0dGVybiA9ICIvKGh0dHB8aHR0cHMpOlwvXC9bXHctXSsoXC5b
XHctXSspKyhbXHcuLEA/Xj0lJmFtcDs6XC9+KyMtXSpbXHdAP149JSZhbXA7XC9+KyMtXSk/
LyI7CgkJJHRtcE1lc3NhZ2UgPSBwcmVnX3JlcGxhY2UoJHVybFBhdHRlcm4sICIkMXh4eHh4
eHh4eHh4eHh4eHh4eCIsICRtZXNzYWdlKTsKCQkkY291bnQgPSBzdHJsZW4oJHRtcE1lc3Nh
Z2UpOwoJCXVuc2V0KCR0bXBNZXNzYWdlKTsKCgkJaWYgKCRjb3VudDw9MTQwICYmICRjb3Vu
dD4wKSB7IC8vIHBvc3QgdXBkYXRlCgkJCSRyZXN1bHQgPSAkdHdpdC0+cG9zdCgnc3RhdHVz
ZXMvdXBkYXRlJywgYXJyYXkoJ3N0YXR1cycgPT4gJG1lc3NhZ2UpKTsKCQl9IGVsc2UgeyAv
LyBtZXNzYWdlIHRvbyBsb25nLCBKYXZhU2NyaXB0IGludGVyZmFjZSBzaG91bGQgcHJldmVu
dCB0aGlzCgkJCSRyZXN1bHQgPSBmYWxzZTsKCQl9CgoJCXBhZ2V0b3AoJ1R3aXR0ZXInLAoJ
CQkoKCRyZXN1bHQhPWZhbHNlKT8nVHdpdHRlciB1cGRhdGVkJzonRXJyb3IgdXBkYXRpbmcg
VHdpdHRlcicpKTsKCgl9IGVsc2VpZiAoJHN0ZXA9PSJkZWxldGUiKSB7IC8vIGRlbGV0ZSBh
biB1cGRhdGUgZnJvbSBUd2l0dGVyCgoJCSRpZCA9IHN0cmlwX3RhZ3MoZ3BzKCdpZCcpKTsK
CQlpZiAoJGlkKSB7CgkJCSR0d2l0LT5kZWxldGUoJ3N0YXR1c2VzL2Rlc3Ryb3kvJy4kaWQp
OwoJCQlzYWZlX2RlbGV0ZSgnYXJjX3R3aXR0ZXInLCJ0d2VldF9pZCA9ICRpZCIpOwoJCX0K
CgkJcGFnZXRvcCgnVHdpdHRlcicsJ1R3aXR0ZXIgdXBkYXRlZCcpOwoKCX0gZWxzZSB7CgoJ
CXBhZ2V0b3AoJ1R3aXR0ZXInKTsKCgl9CgoJLy8gUHJlcGFyZSBKYXZhU2NyaXB0IHRvIGNy
ZWF0ZSBUd2l0dGVyIHVwZGF0ZSBpbnRlcmZhY2UKCgkkanMgPSAnPHNjcmlwdCBsYW5ndWFn
ZT0iamF2YXNjcmlwdCIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4nOwoJJGpzLj0gPDw8SlMK
JChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXsKCXZhciBjb3VudGVyID0gJCgnPHNwYW4+
JywgewoJCSd0ZXh0JyA6ICcxNDAnLAoJCSdpZCcgOiAndHdlZXRjb3VudCcKCX0pOwoJJCgn
Lm1lc3NhZ2UnKS5hcHBlbmQoY291bnRlcik7Cgl2YXIgY291bnRlclN0eWxlID0gJ2ZvbnQt
d2VpZ2h0OmJvbGQ7cGFkZGluZy1sZWZ0Oi41ZW07Zm9udC1zaXplOjJlbTtsaW5lLWhlaWdo
dDoxLjJlbTsnOwoJJCgnI3R3ZWV0Y291bnQnKS5hdHRyKCdzdHlsZScsIGNvdW50ZXJTdHls
ZSsnY29sb3I6I2NjYzsnKTsKCSQoJyNtZXNzYWdlJykua2V5dXAoZnVuY3Rpb24oKSB7CgkJ
Ly8gV2UgbmVlZCB0byBhY2NvdW50IGZvciB0LmNvIFVSTCBzaG9ydGVuaW5nIGluIG91ciBj
b3VudCAoMjIgY2hhcmFjdGVycyBmb3IgYSBVUkwsIDIzIGlmIGh0dHBzKS4KCQl2YXIgbWVz
c2FnZSA9ICQoJyNtZXNzYWdlJykudmFsKCk7CgkJdmFyIHVybFBhdHRlcm4gPSAvKGh0dHB8
aHR0cHMpOlwvXC9bXHctXSsoXC5bXHctXSspKyhbXHcuLEA/Xj0lJmFtcDs6XC9+KyMtXSpb
XHdAP149JSZhbXA7XC9+KyMtXSk/LzsKCQltZXNzYWdlID0gbWVzc2FnZS5yZXBsYWNlKHVy
bFBhdHRlcm4sICckMXh4eHh4eHh4eHh4eHh4eHh4eCcpOwoJCXZhciBjb3VudCA9IDE0MC1t
ZXNzYWdlLmxlbmd0aDsKCQkkKCcjdHdlZXRjb3VudCcpLmh0bWwoY291bnQrJycpOyAvLyBo
YWNrIHRvIGZvcmNlIG91dHB1dCBvZiAwCgkJaWYgKGNvdW50PDApIHsKCQkJJCgnaW5wdXQu
cHVibGlzaCcpLnByb3AoJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyk7CgkJfSBlbHNlIHsKCQkJ
JCgnaW5wdXQucHVibGlzaCcpLnByb3AoJ2Rpc2FibGVkJywgJycpOwoJCX0KCQlpZiAoY291
bnQ8MCkgewoJCQkkKCcjdHdlZXRjb3VudCcpLmF0dHIoJ3N0eWxlJywgY291bnRlclN0eWxl
Kydjb2xvcjojZjAwOycpOwoJCX0gZWxzZSBpZiAoY291bnQ8MTApIHsKCQkJJCgnI3R3ZWV0
Y291bnQnKS5hdHRyKCdzdHlsZScsIGNvdW50ZXJTdHlsZSsnY29sb3I6IzAwMDsnKTsKCQl9
IGVsc2UgewoJCQkkKCcjdHdlZXRjb3VudCcpLmF0dHIoJ3N0eWxlJywgY291bnRlclN0eWxl
Kydjb2xvcjojY2NjOycpOwoJCX0KCX0pCn0pOwpKUzsKCSRqcy49ICI8L3NjcmlwdD4iOwoK
CSRvdXQgPSAnJzsKCSR0d2VldHMgPSAkdHdpdC0+Z2V0KCdzdGF0dXNlcy91c2VyX3RpbWVs
aW5lJwoJCSwgYXJyYXkoJ3NjcmVlbl9uYW1lJz0+JHByZWZzWydhcmNfdHdpdHRlcl91c2Vy
J10sJ2NvdW50Jz0+MjUpKTsKCWlmICgkdHdlZXRzKSBmb3JlYWNoICgkdHdlZXRzIGFzICR0
d2VldCkgewoJCSR0aW1lID0gc3RydG90aW1lKGh0bWxlbnRpdGllcygkdHdlZXQtPmNyZWF0
ZWRfYXQpKTsKCQkkZGF0ZSA9IHNhZmVfc3RyZnRpbWUoJHByZWZzWydhcmNoaXZlX2RhdGVm
b3JtYXQnXSwkdGltZSk7CgkJJGxpbmtzID0gZmFsc2U7CgkJaWYgKGlzc2V0KCR0d2VldC0+
ZW50aXRpZXMtPnVybHMpKSB7CgkJCSRsaW5rcyA9IGFycmF5KCk7CgkJCWZvcmVhY2ggKCR0
d2VldC0+ZW50aXRpZXMtPnVybHMgYXMgJHVybCkgewoJCQkJJGxpbmtzWyR1cmwtPnVybF0g
PSBhcnJheSgKCQkJCQknZXhwYW5kZWRfdXJsJyA9PiAkdXJsLT5leHBhbmRlZF91cmwsCgkJ
CQkJJ2Rpc3BsYXlfdXJsJyA9PiAkdXJsLT5kaXNwbGF5X3VybAoJCQkJKTsKCQkJfQoJCX0K
CQkkb3V0Lj0gdHIodGQoJGRhdGUsJ3NwYW4nKQoJCQkudGQoYXJjX1R3aXR0ZXI6Om1ha2VM
aW5rcyhodG1sZW50aXRpZXMoJHR3ZWV0LT50ZXh0CgkJCQksIEVOVF9RVU9URVMsJ1VURi04
JyksICRsaW5rcywgdHJ1ZSkpCgkJCS50ZChkTGluaygnYXJjX2FkbWluX3R3aXR0ZXInLCdk
ZWxldGUnLCdpZCcsJHR3ZWV0LT5pZF9zdHIsJycpKQoJCSk7Cgl9CgoJJGZpZWxkcyA9IGFy
cmF5KAoJJycgPT4gYXJyYXkoCgkgICdtZXNzYWdlJyA9PiBhcnJheSgKCQknbGFiZWwnID0+
ICdVcGRhdGUgVHdpdHRlcicsCgkJJ3R5cGUnID0+ICd0ZXh0YXJlYScsCgkJJ3ZhbHVlJyA9
PiAnJwoJICApCgkpCgkpOwoKCSRwcm9maWxlID0gJzxpbWcgc3JjPSInLiR0d2l0dGVyVXNl
ci0+cHJvZmlsZV9pbWFnZV91cmwuJyIgYWx0PSJUd2l0dGVyIGF2YXRhciIgc3R5bGU9ImZs
b2F0OmxlZnQ7IG1hcmdpbi1yaWdodDogMWVtIiAvPicKCS5ncmFmKGhyZWYoJHR3aXR0ZXJV
c2VyLT5uYW1lLCR0d2l0dGVyVXNlclVSTCksJyBzdHlsZT0iZm9udC1zaXplOjEuMmVtO2Zv
bnQtd2VpZ2h0OmJvbGQ7IicpCgkuZ3JhZihocmVmKCR0d2l0dGVyVXNlci0+ZnJpZW5kc19j
b3VudC4nIGZvbGxvd2luZycsJHR3aXR0ZXJVc2VyVVJMLicvZm9sbG93aW5nJykKCS4nLCAn
LmhyZWYoJHR3aXR0ZXJVc2VyLT5mb2xsb3dlcnNfY291bnQuJyBmb2xsb3dlcnMnLCR0d2l0
dGVyVXNlclVSTC4nL2ZvbGxvd2VycycpCgkuJywgJy5ocmVmKCR0d2l0dGVyVXNlci0+c3Rh
dHVzZXNfY291bnQuJyB1cGRhdGVzJywkdHdpdHRlclVzZXJVUkwpKTsKCgkkZm9ybSA9IF9h
cmNfdHdpdHRlcl9mb3JtX2J1aWxkZXIoJGZpZWxkcykKCS5lSW5wdXQoJ2FyY19hZG1pbl90
d2l0dGVyJykKCS5zSW5wdXQoJ3R3ZWV0Jyk7CiAgJGZvcm0gLj0gJzxwPicuZklucHV0KCdz
dWJtaXQnLCAnU3VibWl0JywgZ1R4dCgnVXBkYXRlJyksICdwdWJsaXNoJykuJzwvcD4nOwoK
ICAkaHRtbCA9ICI8aDEgY2xhc3M9J3R4cC1oZWFkaW5nJz5UWFAgVHdlZXQ8L2gxPiIKCS4i
PHAgY2xhc3M9J25hdi10ZXJ0aWFyeSc+IgoJLiI8YSBocmVmPScuLz9ldmVudD1hcmNfYWRt
aW5fdHdpdHRlcicgY2xhc3M9J25hdmxpbmstYWN0aXZlJz5Ud2l0dGVyPC9hPjxhIGhyZWY9
Jy4vP2V2ZW50PXBsdWdpbl9wcmVmcy5hcmNfdHdpdHRlcicgY2xhc3M9J25hdmxpbmsnPk9w
dGlvbnM8L2E+IgoJLiI8L3A+IjsKCgkkaHRtbCAuPSAiPGRpdiBjbGFzcz0ndGV4dC1jb2x1
bW4nPiIuJHByb2ZpbGUuIjwvZGl2PiIKCS4iPGJyIHN0eWxlPSdjbGVhcjpib3RoJyAvPiIK
CS5mb3JtKCI8ZGl2IGNsYXNzPSdwbHVnaW4tY29sdW1uJz4iLiRmb3JtLiI8L2Rpdj4iLmJy
KTsKCgkvLyBBdHRhY2ggcmVjZW50IFR3aXR0ZXIgdXBkYXRlcwoKCSRodG1sLj0gIjxkaXYg
Y2xhc3M9J3R4cC1saXN0dGFibGVzJz4iCgkuc3RhcnRUYWJsZSgnYXJjX3R3aXR0ZXJfdGlt
ZWxpbmUnLCcnLCd0eHAtbGlzdCcpLiRvdXQuZW5kVGFibGUoKQoJLiI8L2Rpdj4iOwoKCS8v
IE91dHB1dCBKYXZhU2NyaXB0IGFuZCBIVE1MCgoJZWNobyAkanMuJGh0bWw7Cn0KCi8vIEFk
ZCBUd2l0dGVyIG9wdGlvbnMgdG8gYXJ0aWNsZSBhcnRpY2xlIHNjcmVlbgpmdW5jdGlvbiBh
cmNfYXBwZW5kX3R3aXR0ZXIoJGV2ZW50LCAkc3RlcCwgJGRhdGEsICRyczEpCnsKCWdsb2Jh
bCAkcHJlZnMsICRhcmNfdHdpdHRlciwgJGFwcF9tb2RlOwoKCSRwcmVmaXggPSB0cmltKGdw
cygnYXJjX3R3aXR0ZXJfcHJlZml4JykpOwoJJHByZWZpeCA9ICgkcHJlZml4KSA/ICRwcmVm
aXggOiAkcHJlZnNbJ2FyY190d2l0dGVyX3ByZWZpeCddOwoJJHN1ZmZpeCA9IHRyaW0oZ3Bz
KCdhcmNfdHdpdHRlcl9zdWZmaXgnKSk7Cgkkc3VmZml4ID0gKCRzdWZmaXgpID8gJHN1ZmZp
eCA6ICRwcmVmc1snYXJjX3R3aXR0ZXJfc3VmZml4J107CgoJaWYgKCRyczFbJ0lEJ10pIHsK
CQkkc3FsID0gIlNFTEVDVCB0d2VldF9pZCx0d2VldCBGUk9NICIuUEZYLiJhcmNfdHdpdHRl
ciBXSEVSRSBhcnRpY2xlX2lkPSIuJHJzMVsnSUQnXS4iOyI7CgkJJHJzMiA9IHNhZmVfcXVl
cnkoJHNxbCk7ICRyczIgPSBuZXh0Um93KCRyczIpOwoJfSBlbHNlIHsgLy8gbmV3IGFydGlj
bGUKCQkkcnMyID0gJyc7Cgl9CgoJaWYgKCRhcHBfbW9kZSA9PSAnYXN5bmMnKQoJewoJIHNl
bmRfc2NyaXB0X3Jlc3BvbnNlKCckKCIjYXJjX3R3aXR0ZXIiKS5yZW1vdmUoKTsnKTsKCX0K
CglpZiAoJHJzMVsnSUQnXSAmJiAkcnMyWyd0d2VldF9pZCddKSB7CgkJJGNvbnRlbnQgPSB0
YWcoYXJjX1R3aXR0ZXI6Om1ha2VMaW5rcygkcnMyWyd0d2VldCddKSwncCcpOwoJCXJldHVy
biAkZGF0YS5maWVsZHNldCgkY29udGVudCwgJ1R3aXR0ZXIgdXBkYXRlJywgJ2FyY190d2l0
dGVyJyk7Cgl9IGVsc2UgewoJCSR2YXIgPSBncHMoJ2FyY190d2VldF90aGlzJyk7CgkJJHZh
ciA9ICgkcnMxWydJRCddJiYhJHZhcikgPyAwIDogJHByZWZzWydhcmNfdHdpdHRlcl90d2Vl
dF9kZWZhdWx0J107CgkJJGNvbnRlbnQgID0gdGFnKHllc25vUmFkaW8oJ2FyY190d2VldF90
aGlzJywgJHZhciwgJycsICdhcmNfdHdlZXRfdGhpcycpLCdwJyk7CgkJJGNvbnRlbnQgLj0g
dGFnKGhyZWYoJ09wdGlvbnMnLCcjYXJjX3R3aXR0ZXJfb3B0aW9ucycsICcgb25jbGljaz0i
JChcJyNhcmNfdHdpdHRlcl9vcHRpb25zXCcpLnRvZ2dsZSgpOyByZXR1cm4gZmFsc2U7Iicp
LCdwJywnIHN0eWxlPSJtYXJnaW4tdG9wOjVweDsiJyk7CgkJJGNvbnRlbnQgLj0gdGFnKHRh
Zyh0YWcoJ1R3ZWV0IHByZWZpeCcsJ2xhYmVsJywgJyBmb3I9ImFyY190d2l0dGVyX3ByZWZp
eCInKQoJCQkuZklucHV0KCd0ZXh0JywnYXJjX3R3aXR0ZXJfcHJlZml4JywkcHJlZml4LCdl
ZGl0JywnJywnJywnMjInLCcnLCdhcmNfdHdpdHRlcl9wcmVmaXgnKSwncCcpCgkJCS50YWco
dGFnKCdUd2VldCBzdWZmaXggKGVnICNoYXNodGFncyknLCdsYWJlbCcsICcgZm9yPSJhcmNf
dHdpdHRlcl9zdWZmaXgiJykKCQkJLmZJbnB1dCgndGV4dCcsJ2FyY190d2l0dGVyX3N1ZmZp
eCcsJHN1ZmZpeCwnZWRpdCcsJycsJycsJzIyJywnJywnYXJjX3R3aXR0ZXJfc3VmZml4Jyks
J3AnKQoJCQksJ2RpdicsJyBpZD0iYXJjX3R3aXR0ZXJfb3B0aW9ucyIgY2xhc3M9InRvZ2ds
ZSIgc3R5bGU9ImRpc3BsYXk6bm9uZSInKTsKCQlpZiAoaXNzZXQoJGFyY190d2l0dGVyWydl
cnJvciddKSkgewoJCQkkY29udGVudCAuPSAnPHA+Jy4kYXJjX3R3aXR0ZXJbJ2Vycm9yJ10u
JzwvcD4nOwoJCX0KCQlyZXR1cm4gJGRhdGEuZmllbGRzZXQoJGNvbnRlbnQsICdVcGRhdGUg
VHdpdHRlcicsICdhcmNfdHdpdHRlcicpOwoJfQoKfQoKLy8gVXBkYXRlIFR3aXR0ZXIgd2l0
aCBwb3N0ZWQgYXJ0aWNsZQpmdW5jdGlvbiBhcmNfYXJ0aWNsZV90d2VldCgkZXZlbnQsJHN0
ZXApCnsKCWdsb2JhbCAkcHJlZnMsICRhcmNfdHdpdHRlciwgJGFyY190d2l0dGVyX2NvbnN1
bWVyS2V5CgkJLCAkYXJjX3R3aXR0ZXJfY29uc3VtZXJTZWNyZXQ7CgoJJGFydGljbGVfaWQg
PSBlbXB0eSgkR0xPQkFMU1snSUQnXSkgPyBncHMoJ0lEJykgOiAkR0xPQkFMU1snSUQnXTsK
CWlmICghZW1wdHkoJGFydGljbGVfaWQpKSB7CgoJCWluY2x1ZGVfb25jZSB0eHBhdGguJy9w
dWJsaXNoL3RhZ2hhbmRsZXJzLnBocCc7CgoJCSRhcnRpY2xlID0gc2FmZV9yb3coIklELCBU
aXRsZSwgU2VjdGlvbiwgUG9zdGVkIiwgJ3RleHRwYXR0ZXJuJywKCQkJIklEPXskYXJ0aWNs
ZV9pZH0gQU5EIFN0YXR1cz00IEFORCBub3coKT49UG9zdGVkIik7CgoJCWlmICgkYXJ0aWNs
ZSAmJiBncHMoJ2FyY190d2VldF90aGlzJykpIHsgLy8gdHdlZXQgYXJ0aWNsZQoKCQkJLy8g
TmVlZCB0byBtYW51YWxseSB1cGRhdGUgdGhlICdVUkwgb25seSB0aXRsZScgYmVmb3JlIGJ1
aWxkaW5nIHRoZQoJCQkvLyBVUkwKCQkJJGFydGljbGVbJ3VybF90aXRsZSddID0gZ3BzKCd1
cmxfdGl0bGUnKTsKCQkJLy8gTWFrZSBzaG9ydCBVUkwKCQkJJHVybCA9IHBlcm1saW5rdXJs
KCRhcnRpY2xlKTsKCQkJJHNob3J0X3VybCA9IGFyY19zaG9ydGVuX3VybCgkdXJsLCRwcmVm
c1snYXJjX3R3aXR0ZXJfdXJsX21ldGhvZCddLAoJCQkJYXJyYXkoJ2lkJz0+JGFydGljbGVf
aWQpKTsKCgkJCWlmICghJHNob3J0X3VybCkgeyAvLyBGYWlsZWQgdG8gb2J0YWluIGEgc2hv
cnRlbmVkIFVSTCwgZG8gbm90IHR3ZWV0IQoJCQkJJGFyY190d2l0dGVyWydlcnJvciddID0g
J1VuYWJsZSB0byBvYnRhaW4gYSBzaG9ydCBVUkwgZm9yIHRoaXMgYXJ0aWNsZS4nOwoKCQkJ
CXJldHVybiBmYWxzZTsKCQkJfQoKCQkJLy8gQ29uc3RydWN0IFR3aXR0ZXIgdXBkYXRlCgkJ
CSRwcmVmaXggID0gdHJpbShncHMoJ2FyY190d2l0dGVyX3ByZWZpeCcpKTsKCQkJJHByZV9s
ZW4gPSBzdHJsZW4oJHByZWZpeCk7CgkJCSRwcmVmaXggID0gKCRwcmVmaXggJiYgJHByZV9s
ZW48PTIwKSA/ICRwcmVmaXguJyAnIDogJyc7CgkJCSRzdWZmaXggID0gdHJpbShncHMoJ2Fy
Y190d2l0dGVyX3N1ZmZpeCcpKTsKCQkJJHN1Zl9sZW4gPSBzdHJsZW4oJHN1ZmZpeCk7CgkJ
CSRzdWZmaXggID0gKCRzdWZmaXggJiYgJHN1Zl9sZW48PTQwKSA/ICcgJy4kc3VmZml4IDog
Jyc7CgkJCSR1cmxfbGVuID0gcHJlZ19tYXRjaCgnfF5odHRwc3xpJywgJHNob3J0X3VybCkg
PyAyMyA6IDIyOyAvLyBjb3VudCBVUkwgbGVuZ3RoICsgMSBmb3IgcHJlZml4ZWQgc3BhY2UK
CQkJaWYgKCRwcmVmaXgpIHsKCQkJCSRwcmVfbGVuICs9IDE7CgkJCX0KCQkJaWYgKCRzdWZm
aXgpIHsKCQkJCSRzdWZfbGVuICs9IDE7CgkJCX0KCQkJaWYgKChzdHJsZW4oJGFydGljbGVb
J1RpdGxlJ10pKyR1cmxfbGVuKyRwcmVfbGVuKyRzdWZfbGVuKT4xNDApIHsKCQkJCSRhcnRp
Y2xlWydUaXRsZSddID0gc3Vic3RyKCRhcnRpY2xlWydUaXRsZSddLDAsMTM1LSR1cmxfbGVu
LSRwcmVfbGVuLSRzdWZfbGVuKS4nLi4uJzsKCQkJfQoJCQkkdHdlZXQgPSAkcHJlZml4LiRh
cnRpY2xlWydUaXRsZSddLiIgIi4kc2hvcnRfdXJsLiRzdWZmaXg7CgoJCQkvLyBVcGRhdGUg
VHdpdHRlcgoJCQkkdHdpdCA9IG5ldyBhcmNfdHdpdHRlcigkYXJjX3R3aXR0ZXJfY29uc3Vt
ZXJLZXkKCQkJCSwgJGFyY190d2l0dGVyX2NvbnN1bWVyU2VjcmV0LCAkcHJlZnNbJ2FyY190
d2l0dGVyX2FjY2Vzc1Rva2VuJ10KCQkJCSwgJHByZWZzWydhcmNfdHdpdHRlcl9hY2Nlc3NU
b2tlblNlY3JldCddKTsKCQkJJHJlc3VsdCA9ICR0d2l0LT5wb3N0KCdzdGF0dXNlcy91cGRh
dGUnLCBhcnJheSgnc3RhdHVzJyA9PiAkdHdlZXQpKTsKCgkJCSR0d2VldF9pZCA9IChpc19v
YmplY3QoJHJlc3VsdCkpID8gJHJlc3VsdC0+aWRfc3RyIDogMDsKCgkJCWlmICgkdHdlZXRf
aWQpIHsKCgkJCQkkdHdlZXQgPSBhZGRzbGFzaGVzKCR0d2VldCk7CgoJCQkJLy8gSWYgd2Un
cmUgbm90IHVzaW5nIGEgVVJMIHNob3J0ZW5lciBkb24ndCBzdG9yZSB0aGUgc2hvcnQgVVJM
LgoJCQkJaWYgKCRwcmVmc1snYXJjX3R3aXR0ZXJfdXJsX21ldGhvZCddPT0nZnVsbCcpIHsK
CQkJCQkkc2hvcnRfdXJsID0gbnVsbDsKCQkJCX0KCgkJCQkvLyB1cGRhdGUgYXJjX3R3aXR0
ZXIgdGFibGUgd2l0aCB0d2VldAoJCQkJJHNxbCA9ICJJTlNFUlQgSU5UTyAiLlBGWC4iYXJj
X3R3aXR0ZXIgKGFydGljbGVfaWQsdHdlZXRfaWQsdHdlZXQsdGlueXVybCkgIjsKCQkJCSRz
cWwuPSAiVkFMVUVTKCRhcnRpY2xlX2lkLCR0d2VldF9pZCxcIiR0d2VldFwiLCckc2hvcnRf
dXJsJyk7IjsKCQkJCXNhZmVfcXVlcnkoJHNxbCk7CgoJCQkJcmV0dXJuIHRydWU7CgoJCQl9
IGVsc2UgewoKCQkJCSRhcmNfdHdpdHRlclsnZXJyb3InXSA9ICdUd2l0dGVyIHJlc3BvbnNl
OiAnCgkJCQkJLiR0d2l0LT5odHRwX2NvZGU7CgkJCQlyZXR1cm4gZmFsc2U7CgoJCQl9CgoJ
CX0KCgl9CgoJcmV0dXJuIGZhbHNlOwoKfQoKLyoKICogU2hvcnRlbiBVUkxzIHVzaW5nIHZh
cmlvdXMgbWV0aG9kcwogKi8KCmZ1bmN0aW9uIGFyY19zaG9ydGVuX3VybCgkdXJsLCAkbWV0
aG9kPScnLCAkYXR0cz1hcnJheSgpKQp7CiAgZ2xvYmFsICRwcmVmczsKCiAgJGNoID0gY3Vy
bF9pbml0KCk7CiAgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0hFQURFUiwgMCk7CiAgY3Vy
bF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsKICBjdXJsX3Nl
dG9wdCgkY2gsIENVUkxPUFRfVElNRU9VVCwgMTApOwoKICBzd2l0Y2ggKCRtZXRob2QpIHsK
CWNhc2UgJ3NtZCc6IC8vIGNyZWF0ZSBhIHNob3J0ZW5lZCBVUkwgdXNpbmcgU01EIFNob3J0
IFVSTAoJCXJldHVybiAoJGF0dHNbJ2lkJ10pID8gaHUuJGF0dHNbJ2lkJ10gOiBmYWxzZTsg
YnJlYWs7CgljYXNlICdhcmNfdHdpdHRlcic6IC8vIG5hdGl2ZSBVUkwgc2hvcnRlbmluZwoK
CQlyZXR1cm4gKCRhdHRzWydpZCddKSA/IFBST1RPQ09MLiRwcmVmc1snYXJjX3Nob3J0X3Np
dGVfdXJsJ10uJy8nLiRhdHRzWydpZCddIDogZmFsc2U7CgkJYnJlYWs7CgoJY2FzZSAnaXNn
ZCc6CgoJCSR1ID0gJ2h0dHA6Ly9pcy5nZC9hcGkucGhwP2xvbmd1cmw9Jy51cmxlbmNvZGUo
JHVybCk7CgkJY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1VSTCwgJHUpOwoKCQkkdGlueXVy
bCA9IGN1cmxfZXhlYygkY2gpOwoJCWlmICgkdGlueXVybCE9J0Vycm9yJyAmJiAkdGlueXVy
bCE9JycpIHsKCQkJcmV0dXJuICR0aW55dXJsOwoJCX0gZWxzZSB7CgkJCXRyaWdnZXJfZXJy
b3IoJ2FyY190d2l0dGVyIGZhaWxlZCB0byBnZXQgYSBpcy5nZCBVUkwgZm9yICcKCQkJCS4k
dXJsLEVfVVNFUl9XQVJOSU5HKTsKCQl9CgkJYnJlYWs7CgoJY2FzZSAndGlueXVybCc6IC8v
IGNyZWF0ZSBhIHNob3J0ZW5lZCBVUkwgdXNpbmcgVGlueVVSTAoKCQkkdSA9ICdodHRwOi8v
dGlueXVybC5jb20vYXBpLWNyZWF0ZS5waHA/dXJsPScudXJsZW5jb2RlKCR1cmwpOwoJCWN1
cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VUkwsICR1KTsKCQkkdGlueXVybCA9IGN1cmxfZXhl
YygkY2gpOwoJCWlmICgkdGlueXVybCE9J0Vycm9yJyAmJiAkdGlueXVybCE9JycpIHsKCQkJ
cmV0dXJuICR0aW55dXJsOwoJCX0gZWxzZSB7CgkJCXRyaWdnZXJfZXJyb3IoJ2FyY190d2l0
dGVyIGZhaWxlZCB0byBnZXQgYSBUaW55VVJMIGZvciAnLiR1cmwsRV9VU0VSX1dBUk5JTkcp
OwoJCX0KCglkZWZhdWx0OgoKCQlyZXR1cm4gJHVybDsKCiAgfQoKICByZXR1cm4gZmFsc2U7
IC8vIGZhaWwKCn0KCi8qCiAqIFNob3J0ZW5lZCBVUkwgcmVkaXJlY3QgYmFzZWQgb24gc21k
X3Nob3J0X3VybAogKi8KZnVuY3Rpb24gYXJjX3Nob3J0X3VybF9yZWRpcmVjdCgkZXZlbnQs
ICRzdGVwKSB7CiAgZ2xvYmFsICRwcmVmczsKCiAgJGhhdmVfaWQgPSAwOwoKICAvLyBDaGVj
ayBpZiB0aGVyZSBpcyBhbiBhdmFpbGFibGUgc2hvcnQgc2l0ZSB1cmwgYW5kIGlmIGl0IGlz
IGJlaW5nIHVzZWQgaW4KICAvLyB0aGlzIGluc3RhbmNlCiAgJHNob3J0X3NpdGVfdXJsID0g
JHByZWZzWydhcmNfc2hvcnRfc2l0ZV91cmwnXTsKICBpZiAoJHNob3J0X3NpdGVfdXJsKSB7
Cgkkc2hvcnRfc2l0ZV91cmwgPSBQUk9UT0NPTC4kc2hvcnRfc2l0ZV91cmwuJy8nOwoJJHVy
bF9wYXJ0cyA9IHBhcnNlX3VybCgkc2hvcnRfc2l0ZV91cmwpOwoJJHJlID0gJyNeJy4kdXJs
X3BhcnRzWydwYXRoJ10uJyhbMC05XS4qKSMnOwoJJGhhdmVfaWQgPSBwcmVnX21hdGNoKCRy
ZSwgJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10sICRtKTsKICB9CgogIC8vIEZhbGwgYmFjayB0
byBzdGFuZGFyZCBzaXRlIHVybCAoc21kX3Nob3J0X3VybCBiZWhhdmlvdXIpCiAgaWYgKCRo
YXZlX2lkKSB7CgkkdXJsX3BhcnRzID0gcGFyc2VfdXJsKGh1KTsKCSRyZSA9ICcjXicuJHVy
bF9wYXJ0c1sncGF0aCddLicoWzAtOV0uKikjJzsKCSRoYXZlX2lkID0gcHJlZ19tYXRjaCgk
cmUsICRfU0VSVkVSWydSRVFVRVNUX1VSSSddLCAkbSk7CiAgfQoKICAvLyBEbyB0aGUgcmVk
aXJlY3QgaWYgd2UndmUgZ290IGFuIGFydGljbGUgaWQKICBpZiAoJGhhdmVfaWQpIHsKCSRp
ZCA9ICRtWzFdOwoJJHBlcm1saW5rID0gcGVybWxpbmt1cmxfaWQoJGlkKTsKCglpZiAoJHBl
cm1saW5rKSB7CgkgIG9iX2VuZF9jbGVhbigpOwoKCSAgLy8gU3R1cGlkLCBvdmVyIHRoZSB0
b3AgaGVhZGVyIHNldHRpbmcgZm9yIElFCgkgIGhlYWRlcigiU3RhdHVzOiAzMDEiKTsKCSAg
aGVhZGVyKCJIVFRQLzEuMCAzMDEgTW92ZWQgUGVybWFuZW50bHkiKTsKCSAgaGVhZGVyKCJM
b2NhdGlvbjogIi4kcGVybWxpbmssIFRSVUUsIDMwMSk7CgoJICAvLyBJbiBjYXNlIHRoZSBo
ZWFkZXIoKSBtZXRob2QgZmFpbHMsIGZhbGwgYmFjayBvbiBhIGNsYXNzaWMgcmVkaXJlY3QK
CSAgZWNobyAnPGh0bWw+PGhlYWQ+PE1FVEEgSFRUUC1FUVVJVj0iUmVmcmVzaCIgQ09OVEVO
VD0iMDtVUkw9JwoJCS4kcGVybWxpbmsuJyI+PC9oZWFkPjxib2R5PjwvYm9keT48L2h0bWw+
JzsKCSAgZGllKCk7Cgl9CiAgfQoKfQoKLy8gQXV0byBlbmFibGUgcGx1Z2luIG9uIGluc3Rh
bGwgKG9yaWdpbmFsIGlkZWEgYnkgTWljaGFlbCBNYW5mcmUpCmZ1bmN0aW9uIF9hcmNfdHdp
dHRlcl9hdXRvX2VuYWJsZSgkZXZlbnQsICRzdGVwLCAkcHJlZml4PSdhcmNfdHdpdHRlcicp
CnsKICAkcGx1Z2luID0gc3Vic3RyKCRldmVudCwgc3RybGVuKCdwbHVnaW5fbGlmZWN5Y2xl
LicpKTsKICBpZiAoc3RybmNtcCgkcGx1Z2luLCAkcHJlZml4LCBzdHJsZW4oJHByZWZpeCkp
ID09IDApCiAgewoJc2FmZV91cGRhdGUoJ3R4cF9wbHVnaW4nLCAic3RhdHVzID0gMSIsICJu
YW1lID0gJyIgLiBkb1NsYXNoKCRwbHVnaW4pIC4gIiciKTsKICB9Cn0KCi8qCiAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCiovCgpjbGFzcyBhcmNfdHdpdHRlciBleHRlbmRzIFR3aXR0
ZXJPQXV0aCB7CgkvLyBDYWNoaW5nIHZhcmlhYmxlcwoJcHJpdmF0ZSAkX2NhY2hlID0gdHJ1
ZTsKCXByaXZhdGUgJF9jYWNoZV9kaXIgPSAnLi90bXAnOwoJcHJpdmF0ZSAkX2NhY2hlX3Rp
bWUgPSAxODAwOyAvLyAzMCBtaW51dGUgY2FjaGUKCglmdW5jdGlvbiBfX2NvbnN0cnVjdCgk
Y29uc3VtZXJfa2V5LCAkY29uc3VtZXJfc2VjcmV0LCAkb2F1dGhfdG9rZW4gPSBOVUxMCgkJ
LCAkb2F1dGhfdG9rZW5fc2VjcmV0ID0gTlVMTCkKCXsKCQlwYXJlbnQ6Ol9fY29uc3RydWN0
KCRjb25zdW1lcl9rZXksICRjb25zdW1lcl9zZWNyZXQsICRvYXV0aF90b2tlbgoJCQksICRv
YXV0aF90b2tlbl9zZWNyZXQpOwoJCSR0aGlzLT5mb3JtYXQgPSAnanNvbic7CgkJJHRoaXMt
PnRpbWVvdXQgPSAxNTsKCQkkdGhpcy0+Y29ubmVjdHRpbWVvdXQgPSAxNTsKCX0KCglwdWJs
aWMgZnVuY3Rpb24gY2FsbGJhY2tVUkwoJGV2ZW50LCRzdGVwKQoJewoJCXJldHVybiBwcmVn
X3JlcGxhY2UoJy9cPy4qLycsICcnLFBST1RPQ09MLiRfU0VSVkVSWydTRVJWRVJfTkFNRSdd
LiRfU0VSVkVSWydSRVFVRVNUX1VSSSddKQoJCSAgLic/ZXZlbnQ9Jy4kZXZlbnQuJyZhbXA7
c3RlcD0nLiRzdGVwOwoJfQoKCS8vIGNyZWF0ZSBUd2l0dGVyIGFuZCBleHRlcm5hbCBsaW5r
cyBpbiB0ZXh0CglwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIG1ha2VMaW5rcygkdGV4dCwgJHVy
bHMgPSBmYWxzZSwgJGV4cGFuZGVkVXJscyA9IGZhbHNlKQoJewoJCWlmICgkdXJscyE9PWZh
bHNlKSB7CgoJCQlmb3JlYWNoICgkdXJscyBhcyAkdGNvVXJsID0+ICR1cmwpCgkJCXsKCQkJ
CWlmICghJGV4cGFuZGVkVXJscykKCQkJCXsKCQkJCQkkdXJsWydleHBhbmRlZF91cmwnXSA9
ICR0Y29Vcmw7CgkJCQkJJHVybFsnZGlzcGxheV91cmwnXSA9IHByZWdfcmVwbGFjZSgnfF5o
dHRwcz86XC9cL3xpJywgJycsICR0Y29VcmwpOwoJCQkJfQoJCQkJJHRleHQgPSBzdHJfcmVw
bGFjZSgKCQkJCQkkdGNvVXJsLAoJCQkJCSI8YSBocmVmPSd7JHVybFsnZXhwYW5kZWRfdXJs
J119Jz57JHVybFsnZGlzcGxheV91cmwnXX08L2E+IiwKCQkJCQkkdGV4dAoJCQkJKTsKCQkJ
fQoKCQl9CgkJZWxzZWlmICgkdXJscyE9PWZhbHNlKQoJCXsKCgkJfQoJCWVsc2UKCQl7CgkJ
CSRsaW5rcyA9IGFycmF5KAoJCQkJJy9cYihodHRwfGh0dHBzfGZ0cCk6XC9cLyhbQS1aMC05
XVtBLVowLTlfLV0qKD86XC5bQS1aMC05XVtBLVowLTlfLV0qKSspOj8oXGQrKT9cLz8oW1wv
XHcrXC5dKylcYi9pJyA9PiAiPGEgaHJlZj0nJDAnIHJlbD0nZXh0ZXJuYWwnPiQwPC9hPiIs
CgkJCQknL1xiKF58XHMpd3d3LihbYS16X0EtWjAtOV0rKSgoXC5bYS16XSspKylcYi9pJyA9
PiAiPGEgaHJlZj0naHR0cDovL3d3dy4kMiQzJyByZWw9J2V4dGVybmFsJz53d3cuJDIkMzwv
YT4iCgkJCSk7CgkJCSR0ZXh0ID0gcHJlZ19yZXBsYWNlKAoJCQkJYXJyYXlfa2V5cygkbGlu
a3MpLAoJCQkJYXJyYXlfdmFsdWVzKCRsaW5rcyksCgkJCQkkdGV4dAoJCQkpOwoJCX0KCgkJ
JGxpbmtzID0gYXJyYXkoCgkJCScvKF58XHMpLj9AKFthLXpfQS1aMC05XSspLycgPT4gIiQx
PGEgaHJlZj0naHR0cDovL3R3aXR0ZXIuY29tLyQyJyByZWw9J2V4dGVybmFsJz5AJDI8L2E+
IiwKCQkJJy8oXnxccykoXCMoW2Etel9BLVowLTk6Xy1dKykpLycgPT4gIiQxPGEgaHJlZj0n
aHR0cDovL3R3aXR0ZXIuY29tL3NlYXJjaD9xPSUyMyQzJyByZWw9J2V4dGVybmFsJz4kMjwv
YT4iCgkJKTsKCQlyZXR1cm4gcHJlZ19yZXBsYWNlKAoJCQlhcnJheV9rZXlzKCRsaW5rcyks
CgkJCWFycmF5X3ZhbHVlcygkbGlua3MpLAoJCQkkdGV4dAoJCSk7CiAgfQoKCXB1YmxpYyBm
dW5jdGlvbiBnZXQoJHVybCwgJHBhcmFtcyA9IGFycmF5KCkpCgl7CgkJJGFwaV91cmwgPSBt
ZDUoJHVybC51cmxlbmNvZGUoc2VyaWFsaXplKCRwYXJhbXMpKSk7CgkJJGRhdGEgPSAnJzsK
CgkJaWYgKCR0aGlzLT5fY2FjaGUpIHsgLy8gY2hlY2sgZm9yIGNhY2hlZCBqc29uCgoJCQkk
ZGF0YSA9ICR0aGlzLT5fcmV0cmlldmVDYWNoZSgkYXBpX3VybCk7CgoJCX0KCQlpZiAoZW1w
dHkoJGRhdGEpKSB7CgkJCSRkYXRhID0gcGFyZW50OjpnZXQoJHVybCwgJHBhcmFtcyk7IC8v
IGRhdGEgYWxyZWFkeSBqc29uX2RlY29kZSdkCgkJCWlmICgkdGhpcy0+aHR0cF9jb2RlPT09
MjAwICYmICRlbmNvZGVkX2RhdGE9anNvbl9lbmNvZGUoJGRhdGEpKSB7IC8vIHNhdmUgY2Fj
aGUKCQkJCSRmaWxlID0gJHRoaXMtPl9jYWNoZV9kaXIuJy8nLiRhcGlfdXJsOwoJCQkJZmls
ZV9wdXRfY29udGVudHMoJGZpbGUsJGVuY29kZWRfZGF0YSxMT0NLX0VYKTsKCQkJCXJldHVy
biAkZGF0YTsKCQkJfSBlbHNlIHsgLy8gZmFpbGVkIHRvIHJldHJpZXZlIGRhdGEgZnJvbSBU
d2l0dGVyCgoJCQkJaWYgKCR0aGlzLT5fY2FjaGUpIHsgLy8gYXR0ZW1wdCB0byBmb3JjZSBj
YWNoZWQganNvbiByZXR1cm4KCgkJCQkJJGRhdGEgPSAkdGhpcy0+X3JldHJpZXZlQ2FjaGUo
JGFwaV91cmwsdHJ1ZSk7CgkJCQkJaWYgKCRkYXRhKSByZXR1cm4ganNvbl9kZWNvZGUoJGRh
dGEpOwoKCQkJCX0KCgkJCQlyZXR1cm4gZmFsc2U7CgoJCQl9CgkJfSBlbHNlIHsgLy8gcmV0
dXJuIGNhY2hlZCBqc29uCgkJCXJldHVybiBqc29uX2RlY29kZSgkZGF0YSk7CgkJfQoJfSAv
L2VuZCBnZXQoKQoKCWZ1bmN0aW9uIHBvc3QoJHVybCwgJHBhcmFtcyA9IGFycmF5KCkpCgl7
CgkJJGRhdGEgPSBwYXJlbnQ6OnBvc3QoJHVybCwkcGFyYW1zKTsKCQlyZXR1cm4gJGRhdGE7
Cgl9CgoJZnVuY3Rpb24gZGVsZXRlKCR1cmwsICRwYXJhbXMgPSBhcnJheSgpKQoJewoJCSRk
YXRhID0gcGFyZW50OjpkZWxldGUoJHVybCwkcGFyYW1zKTsKCQlyZXR1cm4gJGRhdGE7Cgl9
CgoJLy8gQ2FjaGUgbWV0aG9kcwoKCXB1YmxpYyBmdW5jdGlvbiBzZXRDYWNoaW5nKCRjYWNo
ZT10cnVlKQoJewoJCSR0aGlzLT5fY2FjaGUgPSAoJGNhY2hlKSA/IHRydWUgOiBmYWxzZTsK
CQlyZXR1cm4gdHJ1ZTsKCX0KCglwdWJsaWMgZnVuY3Rpb24gY2FjaGVEaXIoJGxvYykKCXsK
CQkkdGhpcy0+X2NhY2hlX2RpciA9ICRsb2M7CgkJcmV0dXJuIHRydWU7Cgl9CgoJcHVibGlj
IGZ1bmN0aW9uIGNhY2hlVGltZSgkbWlucykKCXsKCQkkdGhpcy0+X2NhY2hlX3RpbWUgPSAk
bWlucyo2MDsgLy8gY29udmVydCBtaW51dGVzIGludG8gc2Vjb25kcwoJCXJldHVybiB0cnVl
OwoJfQoKCXByaXZhdGUgZnVuY3Rpb24gX3JldHJpZXZlQ2FjaGUoJHVybCwkb3ZlcmlkZV90
aW1lb3V0PWZhbHNlKQoJewoJCSRmaWxlID0gJHRoaXMtPl9jYWNoZV9kaXIuJy8nLiR1cmw7
CgkJaWYgKGZpbGVfZXhpc3RzKCRmaWxlKSkgewoKCQkJJGRpZmYgPSB0aW1lKCkgLSBmaWxl
bXRpbWUoJGZpbGUpOwoJCQlpZiAoJG92ZXJpZGVfdGltZW91dCB8fCAkZGlmZiA8ICR0aGlz
LT5fY2FjaGVfdGltZSkgewoJCQkJcmV0dXJuIGZpbGVfZ2V0X2NvbnRlbnRzKCRmaWxlKTsK
CQkJfSBlbHNlIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoKCQl9IGVsc2UgewoJCQlyZXR1
cm4gZmFsc2U7CgkJfQoJfQp9CgovKgogKiBBYnJhaGFtIFdpbGxpYW1zIChhYnJhaGFtQGFi
cmFoLmFtKSBodHRwOi8vYWJyYWguYW0KICoKICogVGhlIGZpcnN0IFBIUCBMaWJyYXJ5IHRv
IHN1cHBvcnQgT0F1dGggZm9yIFR3aXR0ZXIncyBSRVNUIEFQSS4KICovCgovKioKICogVHdp
dHRlciBPQXV0aCBjbGFzcwogKi8KY2xhc3MgVHdpdHRlck9BdXRoIHsKICAvKiBDb250YWlu
cyB0aGUgbGFzdCBIVFRQIHN0YXR1cyBjb2RlIHJldHVybmVkLiAqLwogIHB1YmxpYyAkaHR0
cF9jb2RlOwogIC8qIENvbnRhaW5zIHRoZSBsYXN0IEFQSSBjYWxsLiAqLwogIHB1YmxpYyAk
dXJsOwogIC8qIFNldCB1cCB0aGUgQVBJIHJvb3QgVVJMLiAqLwogIHB1YmxpYyAkaG9zdCA9
ICJodHRwczovL2FwaS50d2l0dGVyLmNvbS8xLjEvIjsKICAvKiBTZXQgdGltZW91dCBkZWZh
dWx0LiAqLwogIHB1YmxpYyAkdGltZW91dCA9IDMwOwogIC8qIFNldCBjb25uZWN0IHRpbWVv
dXQuICovCiAgcHVibGljICRjb25uZWN0dGltZW91dCA9IDMwOwogIC8qIFZlcmlmeSBTU0wg
Q2VydC4gKi8KICBwdWJsaWMgJHNzbF92ZXJpZnlwZWVyID0gRkFMU0U7CiAgLyogUmVzcG9u
cyBmb3JtYXQuICovCiAgcHVibGljICRmb3JtYXQgPSAnanNvbic7CiAgLyogRGVjb2RlIHJl
dHVybmVkIGpzb24gZGF0YS4gKi8KICBwdWJsaWMgJGRlY29kZV9qc29uID0gVFJVRTsKICAv
KiBDb250YWlucyB0aGUgbGFzdCBIVFRQIGhlYWRlcnMgcmV0dXJuZWQuICovCiAgcHVibGlj
ICRodHRwX2luZm87CiAgLyogU2V0IHRoZSB1c2VyYWduZXQuICovCiAgcHVibGljICR1c2Vy
YWdlbnQgPSAnVHdpdHRlck9BdXRoIHYwLjIuMC1iZXRhMic7CiAgLyogSW1tZWRpYXRlbHkg
cmV0cnkgdGhlIEFQSSBjYWxsIGlmIHRoZSByZXNwb25zZSB3YXMgbm90IHN1Y2Nlc3NmdWwu
ICovCiAgLy9wdWJsaWMgJHJldHJ5ID0gVFJVRTsKCiAgLyoqCiAgICogU2V0IEFQSSBVUkxT
CiAgICovCiAgZnVuY3Rpb24gYWNjZXNzVG9rZW5VUkwoKSAgeyByZXR1cm4gJ2h0dHBzOi8v
YXBpLnR3aXR0ZXIuY29tL29hdXRoL2FjY2Vzc190b2tlbic7IH0KICBmdW5jdGlvbiBhdXRo
ZW50aWNhdGVVUkwoKSB7IHJldHVybiAnaHR0cHM6Ly9hcGkudHdpdHRlci5jb20vb2F1dGgv
YXV0aGVudGljYXRlJzsgfQogIGZ1bmN0aW9uIGF1dGhvcml6ZVVSTCgpICAgIHsgcmV0dXJu
ICdodHRwczovL2FwaS50d2l0dGVyLmNvbS9vYXV0aC9hdXRob3JpemUnOyB9CiAgZnVuY3Rp
b24gcmVxdWVzdFRva2VuVVJMKCkgeyByZXR1cm4gJ2h0dHBzOi8vYXBpLnR3aXR0ZXIuY29t
L29hdXRoL3JlcXVlc3RfdG9rZW4nOyB9CgogIC8qKgogICAqIERlYnVnIGhlbHBlcnMKICAg
Ki8KICBmdW5jdGlvbiBsYXN0U3RhdHVzQ29kZSgpIHsgcmV0dXJuICR0aGlzLT5odHRwX3N0
YXR1czsgfQogIGZ1bmN0aW9uIGxhc3RBUElDYWxsKCkgeyByZXR1cm4gJHRoaXMtPmxhc3Rf
YXBpX2NhbGw7IH0KCiAgLyoqCiAgICogY29uc3RydWN0IFR3aXR0ZXJPQXV0aCBvYmplY3QK
ICAgKi8KICBmdW5jdGlvbiBfX2NvbnN0cnVjdCgkY29uc3VtZXJfa2V5LCAkY29uc3VtZXJf
c2VjcmV0LCAkb2F1dGhfdG9rZW4gPSBOVUxMLCAkb2F1dGhfdG9rZW5fc2VjcmV0ID0gTlVM
TCkgewoJJHRoaXMtPnNoYTFfbWV0aG9kID0gbmV3IE9BdXRoU2lnbmF0dXJlTWV0aG9kX0hN
QUNfU0hBMSgpOwoJJHRoaXMtPmNvbnN1bWVyID0gbmV3IE9BdXRoQ29uc3VtZXIoJGNvbnN1
bWVyX2tleSwgJGNvbnN1bWVyX3NlY3JldCk7CglpZiAoIWVtcHR5KCRvYXV0aF90b2tlbikg
JiYgIWVtcHR5KCRvYXV0aF90b2tlbl9zZWNyZXQpKSB7CgkgICR0aGlzLT50b2tlbiA9IG5l
dyBPQXV0aENvbnN1bWVyKCRvYXV0aF90b2tlbiwgJG9hdXRoX3Rva2VuX3NlY3JldCk7Cgl9
IGVsc2UgewoJICAkdGhpcy0+dG9rZW4gPSBOVUxMOwoJfQogIH0KCgogIC8qKgogICAqIEdl
dCBhIHJlcXVlc3RfdG9rZW4gZnJvbSBUd2l0dGVyCiAgICoKICAgKiBAcmV0dXJucyBhIGtl
eS92YWx1ZSBhcnJheSBjb250YWluaW5nIG9hdXRoX3Rva2VuIGFuZCBvYXV0aF90b2tlbl9z
ZWNyZXQKICAgKi8KICBmdW5jdGlvbiBnZXRSZXF1ZXN0VG9rZW4oJG9hdXRoX2NhbGxiYWNr
KSB7CgkkcGFyYW1ldGVycyA9IGFycmF5KCk7CgkkcGFyYW1ldGVyc1snb2F1dGhfY2FsbGJh
Y2snXSA9ICRvYXV0aF9jYWxsYmFjazsKCSRyZXF1ZXN0ID0gJHRoaXMtPm9BdXRoUmVxdWVz
dCgkdGhpcy0+cmVxdWVzdFRva2VuVVJMKCksICdHRVQnLCAkcGFyYW1ldGVycyk7CgkkdG9r
ZW4gPSBPQXV0aFV0aWw6OnBhcnNlX3BhcmFtZXRlcnMoJHJlcXVlc3QpOwoJJHRoaXMtPnRv
a2VuID0gbmV3IE9BdXRoQ29uc3VtZXIoJHRva2VuWydvYXV0aF90b2tlbiddLCAkdG9rZW5b
J29hdXRoX3Rva2VuX3NlY3JldCddKTsKCXJldHVybiAkdG9rZW47CiAgfQoKICAvKioKICAg
KiBHZXQgdGhlIGF1dGhvcml6ZSBVUkwKICAgKgogICAqIEByZXR1cm5zIGEgc3RyaW5nCiAg
ICovCiAgZnVuY3Rpb24gZ2V0QXV0aG9yaXplVVJMKCR0b2tlbiwgJHNpZ25faW5fd2l0aF90
d2l0dGVyID0gVFJVRSkgewoJaWYgKGlzX2FycmF5KCR0b2tlbikpIHsKCSAgJHRva2VuID0g
JHRva2VuWydvYXV0aF90b2tlbiddOwoJfQoJaWYgKGVtcHR5KCRzaWduX2luX3dpdGhfdHdp
dHRlcikpIHsKCSAgcmV0dXJuICR0aGlzLT5hdXRob3JpemVVUkwoKSAuICI/b2F1dGhfdG9r
ZW49eyR0b2tlbn0iOwoJfSBlbHNlIHsKCSAgIHJldHVybiAkdGhpcy0+YXV0aGVudGljYXRl
VVJMKCkgLiAiP29hdXRoX3Rva2VuPXskdG9rZW59IjsKCX0KICB9CgogIC8qKgogICAqIEV4
Y2hhbmdlIHJlcXVlc3QgdG9rZW4gYW5kIHNlY3JldCBmb3IgYW4gYWNjZXNzIHRva2VuIGFu
ZAogICAqIHNlY3JldCwgdG8gc2lnbiBBUEkgY2FsbHMuCiAgICoKICAgKiBAcmV0dXJucyBh
cnJheSgib2F1dGhfdG9rZW4iID0+ICJ0aGUtYWNjZXNzLXRva2VuIiwKICAgKiAgICAgICAg
ICAgICAgICAib2F1dGhfdG9rZW5fc2VjcmV0IiA9PiAidGhlLWFjY2Vzcy1zZWNyZXQiLAog
ICAqICAgICAgICAgICAgICAgICJ1c2VyX2lkIiA9PiAiOTQzNjk5MiIsCiAgICogICAgICAg
ICAgICAgICAgInNjcmVlbl9uYW1lIiA9PiAiYWJyYWhhbSIpCiAgICovCiAgZnVuY3Rpb24g
Z2V0QWNjZXNzVG9rZW4oJG9hdXRoX3ZlcmlmaWVyKSB7CgkkcGFyYW1ldGVycyA9IGFycmF5
KCk7CgkkcGFyYW1ldGVyc1snb2F1dGhfdmVyaWZpZXInXSA9ICRvYXV0aF92ZXJpZmllcjsK
CSRyZXF1ZXN0ID0gJHRoaXMtPm9BdXRoUmVxdWVzdCgkdGhpcy0+YWNjZXNzVG9rZW5VUkwo
KSwgJ0dFVCcsICRwYXJhbWV0ZXJzKTsKCSR0b2tlbiA9IE9BdXRoVXRpbDo6cGFyc2VfcGFy
YW1ldGVycygkcmVxdWVzdCk7CgkkdGhpcy0+dG9rZW4gPSBuZXcgT0F1dGhDb25zdW1lcigk
dG9rZW5bJ29hdXRoX3Rva2VuJ10sICR0b2tlblsnb2F1dGhfdG9rZW5fc2VjcmV0J10pOwoJ
cmV0dXJuICR0b2tlbjsKICB9CgogIC8qKgogICAqIE9uZSB0aW1lIGV4Y2hhbmdlIG9mIHVz
ZXJuYW1lIGFuZCBwYXNzd29yZCBmb3IgYWNjZXNzIHRva2VuIGFuZCBzZWNyZXQuCiAgICoK
ICAgKiBAcmV0dXJucyBhcnJheSgib2F1dGhfdG9rZW4iID0+ICJ0aGUtYWNjZXNzLXRva2Vu
IiwKICAgKiAgICAgICAgICAgICAgICAib2F1dGhfdG9rZW5fc2VjcmV0IiA9PiAidGhlLWFj
Y2Vzcy1zZWNyZXQiLAogICAqICAgICAgICAgICAgICAgICJ1c2VyX2lkIiA9PiAiOTQzNjk5
MiIsCiAgICogICAgICAgICAgICAgICAgInNjcmVlbl9uYW1lIiA9PiAiYWJyYWhhbSIsCiAg
ICogICAgICAgICAgICAgICAgInhfYXV0aF9leHBpcmVzIiA9PiAiMCIpCiAgICovCiAgZnVu
Y3Rpb24gZ2V0WEF1dGhUb2tlbigkdXNlcm5hbWUsICRwYXNzd29yZCkgewoJJHBhcmFtZXRl
cnMgPSBhcnJheSgpOwoJJHBhcmFtZXRlcnNbJ3hfYXV0aF91c2VybmFtZSddID0gJHVzZXJu
YW1lOwoJJHBhcmFtZXRlcnNbJ3hfYXV0aF9wYXNzd29yZCddID0gJHBhc3N3b3JkOwoJJHBh
cmFtZXRlcnNbJ3hfYXV0aF9tb2RlJ10gPSAnY2xpZW50X2F1dGgnOwoJJHJlcXVlc3QgPSAk
dGhpcy0+b0F1dGhSZXF1ZXN0KCR0aGlzLT5hY2Nlc3NUb2tlblVSTCgpLCAnUE9TVCcsICRw
YXJhbWV0ZXJzKTsKCSR0b2tlbiA9IE9BdXRoVXRpbDo6cGFyc2VfcGFyYW1ldGVycygkcmVx
dWVzdCk7CgkkdGhpcy0+dG9rZW4gPSBuZXcgT0F1dGhDb25zdW1lcigkdG9rZW5bJ29hdXRo
X3Rva2VuJ10sICR0b2tlblsnb2F1dGhfdG9rZW5fc2VjcmV0J10pOwoJcmV0dXJuICR0b2tl
bjsKICB9CgogIC8qKgogICAqIEdFVCB3cmFwcGVyIGZvciBvQXV0aFJlcXVlc3QuCiAgICov
CiAgZnVuY3Rpb24gZ2V0KCR1cmwsICRwYXJhbWV0ZXJzID0gYXJyYXkoKSkgewoJJHJlc3Bv
bnNlID0gJHRoaXMtPm9BdXRoUmVxdWVzdCgkdXJsLCAnR0VUJywgJHBhcmFtZXRlcnMpOwoJ
aWYgKCR0aGlzLT5mb3JtYXQgPT09ICdqc29uJyAmJiAkdGhpcy0+ZGVjb2RlX2pzb24pIHsK
CSAgcmV0dXJuIGpzb25fZGVjb2RlKCRyZXNwb25zZSk7Cgl9CglyZXR1cm4gJHJlc3BvbnNl
OwogIH0KCiAgLyoqCiAgICogUE9TVCB3cmFwcGVyIGZvciBvQXV0aFJlcXVlc3QuCiAgICov
CiAgZnVuY3Rpb24gcG9zdCgkdXJsLCAkcGFyYW1ldGVycyA9IGFycmF5KCkpIHsKCSRyZXNw
b25zZSA9ICR0aGlzLT5vQXV0aFJlcXVlc3QoJHVybCwgJ1BPU1QnLCAkcGFyYW1ldGVycyk7
CglpZiAoJHRoaXMtPmZvcm1hdCA9PT0gJ2pzb24nICYmICR0aGlzLT5kZWNvZGVfanNvbikg
ewoJICByZXR1cm4ganNvbl9kZWNvZGUoJHJlc3BvbnNlKTsKCX0KCXJldHVybiAkcmVzcG9u
c2U7CiAgfQoKICAvKioKICAgKiBERUxFVEUgd3JhcHBlciBmb3Igb0F1dGhSZXFldXN0Lgog
ICAqLwogIGZ1bmN0aW9uIGRlbGV0ZSgkdXJsLCAkcGFyYW1ldGVycyA9IGFycmF5KCkpIHsK
CSRyZXNwb25zZSA9ICR0aGlzLT5vQXV0aFJlcXVlc3QoJHVybCwgJ0RFTEVURScsICRwYXJh
bWV0ZXJzKTsKCWlmICgkdGhpcy0+Zm9ybWF0ID09PSAnanNvbicgJiYgJHRoaXMtPmRlY29k
ZV9qc29uKSB7CgkgIHJldHVybiBqc29uX2RlY29kZSgkcmVzcG9uc2UpOwoJfQoJcmV0dXJu
ICRyZXNwb25zZTsKICB9CgogIC8qKgogICAqIEZvcm1hdCBhbmQgc2lnbiBhbiBPQXV0aCAv
IEFQSSByZXF1ZXN0CiAgICovCiAgZnVuY3Rpb24gb0F1dGhSZXF1ZXN0KCR1cmwsICRtZXRo
b2QsICRwYXJhbWV0ZXJzKSB7CglpZiAoc3RycnBvcygkdXJsLCAnaHR0cHM6Ly8nKSAhPT0g
MCAmJiBzdHJycG9zKCR1cmwsICdodHRwOi8vJykgIT09IDApIHsKCSAgJHVybCA9ICJ7JHRo
aXMtPmhvc3R9eyR1cmx9LnskdGhpcy0+Zm9ybWF0fSI7Cgl9CgkkcmVxdWVzdCA9IE9BdXRo
UmVxdWVzdDo6ZnJvbV9jb25zdW1lcl9hbmRfdG9rZW4oJHRoaXMtPmNvbnN1bWVyLCAkdGhp
cy0+dG9rZW4sICRtZXRob2QsICR1cmwsICRwYXJhbWV0ZXJzKTsKCSRyZXF1ZXN0LT5zaWdu
X3JlcXVlc3QoJHRoaXMtPnNoYTFfbWV0aG9kLCAkdGhpcy0+Y29uc3VtZXIsICR0aGlzLT50
b2tlbik7Cglzd2l0Y2ggKCRtZXRob2QpIHsKCWNhc2UgJ0dFVCc6CgkgIHJldHVybiAkdGhp
cy0+aHR0cCgkcmVxdWVzdC0+dG9fdXJsKCksICdHRVQnKTsKCWRlZmF1bHQ6CgkgIHJldHVy
biAkdGhpcy0+aHR0cCgkcmVxdWVzdC0+Z2V0X25vcm1hbGl6ZWRfaHR0cF91cmwoKSwgJG1l
dGhvZCwgJHJlcXVlc3QtPnRvX3Bvc3RkYXRhKCkpOwoJfQogIH0KCiAgLyoqCiAgICogTWFr
ZSBhbiBIVFRQIHJlcXVlc3QKICAgKgogICAqIEByZXR1cm4gQVBJIHJlc3VsdHMKICAgKi8K
ICBmdW5jdGlvbiBodHRwKCR1cmwsICRtZXRob2QsICRwb3N0ZmllbGRzID0gTlVMTCkgewoJ
JHRoaXMtPmh0dHBfaW5mbyA9IGFycmF5KCk7CgkkY2kgPSBjdXJsX2luaXQoKTsKCS8qIEN1
cmwgc2V0dGluZ3MgKi8KCWN1cmxfc2V0b3B0KCRjaSwgQ1VSTE9QVF9VU0VSQUdFTlQsICR0
aGlzLT51c2VyYWdlbnQpOwoJY3VybF9zZXRvcHQoJGNpLCBDVVJMT1BUX0NPTk5FQ1RUSU1F
T1VULCAkdGhpcy0+Y29ubmVjdHRpbWVvdXQpOwoJY3VybF9zZXRvcHQoJGNpLCBDVVJMT1BU
X1RJTUVPVVQsICR0aGlzLT50aW1lb3V0KTsKCWN1cmxfc2V0b3B0KCRjaSwgQ1VSTE9QVF9S
RVRVUk5UUkFOU0ZFUiwgVFJVRSk7CgljdXJsX3NldG9wdCgkY2ksIENVUkxPUFRfSFRUUEhF
QURFUiwgYXJyYXkoJ0V4cGVjdDonKSk7CgljdXJsX3NldG9wdCgkY2ksIENVUkxPUFRfU1NM
X1ZFUklGWVBFRVIsICR0aGlzLT5zc2xfdmVyaWZ5cGVlcik7CgljdXJsX3NldG9wdCgkY2ks
IENVUkxPUFRfSEVBREVSRlVOQ1RJT04sIGFycmF5KCR0aGlzLCAnZ2V0SGVhZGVyJykpOwoJ
Y3VybF9zZXRvcHQoJGNpLCBDVVJMT1BUX0hFQURFUiwgRkFMU0UpOwoKCXN3aXRjaCAoJG1l
dGhvZCkgewoJICBjYXNlICdQT1NUJzoKCQljdXJsX3NldG9wdCgkY2ksIENVUkxPUFRfUE9T
VCwgVFJVRSk7CgkJaWYgKCFlbXB0eSgkcG9zdGZpZWxkcykpIHsKCQkgIGN1cmxfc2V0b3B0
KCRjaSwgQ1VSTE9QVF9QT1NURklFTERTLCAkcG9zdGZpZWxkcyk7CgkJfQoJCWJyZWFrOwoJ
ICBjYXNlICdERUxFVEUnOgoJCWN1cmxfc2V0b3B0KCRjaSwgQ1VSTE9QVF9DVVNUT01SRVFV
RVNULCAnREVMRVRFJyk7CgkJaWYgKCFlbXB0eSgkcG9zdGZpZWxkcykpIHsKCQkgICR1cmwg
PSAieyR1cmx9P3skcG9zdGZpZWxkc30iOwoJCX0KCX0KCgljdXJsX3NldG9wdCgkY2ksIENV
UkxPUFRfVVJMLCAkdXJsKTsKCSRyZXNwb25zZSA9IGN1cmxfZXhlYygkY2kpOwoJJHRoaXMt
Pmh0dHBfY29kZSA9IGN1cmxfZ2V0aW5mbygkY2ksIENVUkxJTkZPX0hUVFBfQ09ERSk7Cgkk
dGhpcy0+aHR0cF9pbmZvID0gYXJyYXlfbWVyZ2UoJHRoaXMtPmh0dHBfaW5mbywgY3VybF9n
ZXRpbmZvKCRjaSkpOwoJJHRoaXMtPnVybCA9ICR1cmw7CgljdXJsX2Nsb3NlICgkY2kpOwoJ
cmV0dXJuICRyZXNwb25zZTsKICB9CgogIC8qKgogICAqIEdldCB0aGUgaGVhZGVyIGluZm8g
dG8gc3RvcmUuCiAgICovCiAgZnVuY3Rpb24gZ2V0SGVhZGVyKCRjaCwgJGhlYWRlcikgewoJ
JGkgPSBzdHJwb3MoJGhlYWRlciwgJzonKTsKCWlmICghZW1wdHkoJGkpKSB7CgkgICRrZXkg
PSBzdHJfcmVwbGFjZSgnLScsICdfJywgc3RydG9sb3dlcihzdWJzdHIoJGhlYWRlciwgMCwg
JGkpKSk7CgkgICR2YWx1ZSA9IHRyaW0oc3Vic3RyKCRoZWFkZXIsICRpICsgMikpOwoJICAk
dGhpcy0+aHR0cF9oZWFkZXJbJGtleV0gPSAkdmFsdWU7Cgl9CglyZXR1cm4gc3RybGVuKCRo
ZWFkZXIpOwogIH0KfQovKiBHZW5lcmljIGV4Y2VwdGlvbiBjbGFzcwogKi8KaWYgKCFjbGFz
c19leGlzdHMoJ09BdXRoRXhjZXB0aW9uJykpIHsKICBjbGFzcyBPQXV0aEV4Y2VwdGlvbiBl
eHRlbmRzIEV4Y2VwdGlvbiB7CgkvLyBwYXNzCiAgfQp9CgpjbGFzcyBPQXV0aENvbnN1bWVy
IHsKICBwdWJsaWMgJGtleTsKICBwdWJsaWMgJHNlY3JldDsKCiAgZnVuY3Rpb24gX19jb25z
dHJ1Y3QoJGtleSwgJHNlY3JldCwgJGNhbGxiYWNrX3VybD1OVUxMKSB7CgkkdGhpcy0+a2V5
ID0gJGtleTsKCSR0aGlzLT5zZWNyZXQgPSAkc2VjcmV0OwoJJHRoaXMtPmNhbGxiYWNrX3Vy
bCA9ICRjYWxsYmFja191cmw7CiAgfQoKICBmdW5jdGlvbiBfX3RvU3RyaW5nKCkgewoJcmV0
dXJuICJPQXV0aENvbnN1bWVyW2tleT0kdGhpcy0+a2V5LHNlY3JldD0kdGhpcy0+c2VjcmV0
XSI7CiAgfQp9CgpjbGFzcyBPQXV0aFRva2VuIHsKICAvLyBhY2Nlc3MgdG9rZW5zIGFuZCBy
ZXF1ZXN0IHRva2VucwogIHB1YmxpYyAka2V5OwogIHB1YmxpYyAkc2VjcmV0OwoKICAvKioK
ICAgKiBrZXkgPSB0aGUgdG9rZW4KICAgKiBzZWNyZXQgPSB0aGUgdG9rZW4gc2VjcmV0CiAg
ICovCiAgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJGtleSwgJHNlY3JldCkgewoJJHRoaXMtPmtl
eSA9ICRrZXk7CgkkdGhpcy0+c2VjcmV0ID0gJHNlY3JldDsKICB9CgogIC8qKgogICAqIGdl
bmVyYXRlcyB0aGUgYmFzaWMgc3RyaW5nIHNlcmlhbGl6YXRpb24gb2YgYSB0b2tlbiB0aGF0
IGEgc2VydmVyCiAgICogd291bGQgcmVzcG9uZCB0byByZXF1ZXN0X3Rva2VuIGFuZCBhY2Nl
c3NfdG9rZW4gY2FsbHMgd2l0aAogICAqLwogIGZ1bmN0aW9uIHRvX3N0cmluZygpIHsKCXJl
dHVybiAib2F1dGhfdG9rZW49IiAuCgkJICAgT0F1dGhVdGlsOjp1cmxlbmNvZGVfcmZjMzk4
NigkdGhpcy0+a2V5KSAuCgkJICAgIiZvYXV0aF90b2tlbl9zZWNyZXQ9IiAuCgkJICAgT0F1
dGhVdGlsOjp1cmxlbmNvZGVfcmZjMzk4NigkdGhpcy0+c2VjcmV0KTsKICB9CgogIGZ1bmN0
aW9uIF9fdG9TdHJpbmcoKSB7CglyZXR1cm4gJHRoaXMtPnRvX3N0cmluZygpOwogIH0KfQoK
LyoqCiAqIEEgY2xhc3MgZm9yIGltcGxlbWVudGluZyBhIFNpZ25hdHVyZSBNZXRob2QKICog
U2VlIHNlY3Rpb24gOSAoIlNpZ25pbmcgUmVxdWVzdHMiKSBpbiB0aGUgc3BlYwogKi8KYWJz
dHJhY3QgY2xhc3MgT0F1dGhTaWduYXR1cmVNZXRob2QgewogIC8qKgogICAqIE5lZWRzIHRv
IHJldHVybiB0aGUgbmFtZSBvZiB0aGUgU2lnbmF0dXJlIE1ldGhvZCAoaWUgSE1BQy1TSEEx
KQogICAqIEByZXR1cm4gc3RyaW5nCiAgICovCiAgYWJzdHJhY3QgcHVibGljIGZ1bmN0aW9u
IGdldF9uYW1lKCk7CgogIC8qKgogICAqIEJ1aWxkIHVwIHRoZSBzaWduYXR1cmUKICAgKiBO
T1RFOiBUaGUgb3V0cHV0IG9mIHRoaXMgZnVuY3Rpb24gTVVTVCBOT1QgYmUgdXJsZW5jb2Rl
ZC4KICAgKiB0aGUgZW5jb2RpbmcgaXMgaGFuZGxlZCBpbiBPQXV0aFJlcXVlc3Qgd2hlbiB0
aGUgZmluYWwKICAgKiByZXF1ZXN0IGlzIHNlcmlhbGl6ZWQKICAgKiBAcGFyYW0gT0F1dGhS
ZXF1ZXN0ICRyZXF1ZXN0CiAgICogQHBhcmFtIE9BdXRoQ29uc3VtZXIgJGNvbnN1bWVyCiAg
ICogQHBhcmFtIE9BdXRoVG9rZW4gJHRva2VuCiAgICogQHJldHVybiBzdHJpbmcKICAgKi8K
ICBhYnN0cmFjdCBwdWJsaWMgZnVuY3Rpb24gYnVpbGRfc2lnbmF0dXJlKCRyZXF1ZXN0LCAk
Y29uc3VtZXIsICR0b2tlbik7CgogIC8qKgogICAqIFZlcmlmaWVzIHRoYXQgYSBnaXZlbiBz
aWduYXR1cmUgaXMgY29ycmVjdAogICAqIEBwYXJhbSBPQXV0aFJlcXVlc3QgJHJlcXVlc3QK
ICAgKiBAcGFyYW0gT0F1dGhDb25zdW1lciAkY29uc3VtZXIKICAgKiBAcGFyYW0gT0F1dGhU
b2tlbiAkdG9rZW4KICAgKiBAcGFyYW0gc3RyaW5nICRzaWduYXR1cmUKICAgKiBAcmV0dXJu
IGJvb2wKICAgKi8KICBwdWJsaWMgZnVuY3Rpb24gY2hlY2tfc2lnbmF0dXJlKCRyZXF1ZXN0
LCAkY29uc3VtZXIsICR0b2tlbiwgJHNpZ25hdHVyZSkgewoJJGJ1aWx0ID0gJHRoaXMtPmJ1
aWxkX3NpZ25hdHVyZSgkcmVxdWVzdCwgJGNvbnN1bWVyLCAkdG9rZW4pOwoJcmV0dXJuICRi
dWlsdCA9PSAkc2lnbmF0dXJlOwogIH0KfQoKLyoqCiAqIFRoZSBITUFDLVNIQTEgc2lnbmF0
dXJlIG1ldGhvZCB1c2VzIHRoZSBITUFDLVNIQTEgc2lnbmF0dXJlIGFsZ29yaXRobSBhcyBk
ZWZpbmVkIGluIFtSRkMyMTA0XQogKiB3aGVyZSB0aGUgU2lnbmF0dXJlIEJhc2UgU3RyaW5n
IGlzIHRoZSB0ZXh0IGFuZCB0aGUga2V5IGlzIHRoZSBjb25jYXRlbmF0ZWQgdmFsdWVzIChl
YWNoIGZpcnN0CiAqIGVuY29kZWQgcGVyIFBhcmFtZXRlciBFbmNvZGluZykgb2YgdGhlIENv
bnN1bWVyIFNlY3JldCBhbmQgVG9rZW4gU2VjcmV0LCBzZXBhcmF0ZWQgYnkgYW4gJyYnCiAq
IGNoYXJhY3RlciAoQVNDSUkgY29kZSAzOCkgZXZlbiBpZiBlbXB0eS4KICogICAtIENoYXB0
ZXIgOS4yICgiSE1BQy1TSEExIikKICovCmNsYXNzIE9BdXRoU2lnbmF0dXJlTWV0aG9kX0hN
QUNfU0hBMSBleHRlbmRzIE9BdXRoU2lnbmF0dXJlTWV0aG9kIHsKICBmdW5jdGlvbiBnZXRf
bmFtZSgpIHsKCXJldHVybiAiSE1BQy1TSEExIjsKICB9CgogIHB1YmxpYyBmdW5jdGlvbiBi
dWlsZF9zaWduYXR1cmUoJHJlcXVlc3QsICRjb25zdW1lciwgJHRva2VuKSB7CgkkYmFzZV9z
dHJpbmcgPSAkcmVxdWVzdC0+Z2V0X3NpZ25hdHVyZV9iYXNlX3N0cmluZygpOwoJJHJlcXVl
c3QtPmJhc2Vfc3RyaW5nID0gJGJhc2Vfc3RyaW5nOwoKCSRrZXlfcGFydHMgPSBhcnJheSgK
CSAgJGNvbnN1bWVyLT5zZWNyZXQsCgkgICgkdG9rZW4pID8gJHRva2VuLT5zZWNyZXQgOiAi
IgoJKTsKCgkka2V5X3BhcnRzID0gT0F1dGhVdGlsOjp1cmxlbmNvZGVfcmZjMzk4Nigka2V5
X3BhcnRzKTsKCSRrZXkgPSBpbXBsb2RlKCcmJywgJGtleV9wYXJ0cyk7CgoJcmV0dXJuIGJh
c2U2NF9lbmNvZGUoaGFzaF9obWFjKCdzaGExJywgJGJhc2Vfc3RyaW5nLCAka2V5LCB0cnVl
KSk7CiAgfQp9CgovKioKICogVGhlIFBMQUlOVEVYVCBtZXRob2QgZG9lcyBub3QgcHJvdmlk
ZSBhbnkgc2VjdXJpdHkgcHJvdGVjdGlvbiBhbmQgU0hPVUxEIG9ubHkgYmUgdXNlZAogKiBv
dmVyIGEgc2VjdXJlIGNoYW5uZWwgc3VjaCBhcyBIVFRQUy4gSXQgZG9lcyBub3QgdXNlIHRo
ZSBTaWduYXR1cmUgQmFzZSBTdHJpbmcuCiAqICAgLSBDaGFwdGVyIDkuNCAoIlBMQUlOVEVY
VCIpCiAqLwpjbGFzcyBPQXV0aFNpZ25hdHVyZU1ldGhvZF9QTEFJTlRFWFQgZXh0ZW5kcyBP
QXV0aFNpZ25hdHVyZU1ldGhvZCB7CiAgcHVibGljIGZ1bmN0aW9uIGdldF9uYW1lKCkgewoJ
cmV0dXJuICJQTEFJTlRFWFQiOwogIH0KCiAgLyoqCiAgICogb2F1dGhfc2lnbmF0dXJlIGlz
IHNldCB0byB0aGUgY29uY2F0ZW5hdGVkIGVuY29kZWQgdmFsdWVzIG9mIHRoZSBDb25zdW1l
ciBTZWNyZXQgYW5kCiAgICogVG9rZW4gU2VjcmV0LCBzZXBhcmF0ZWQgYnkgYSAnJicgY2hh
cmFjdGVyIChBU0NJSSBjb2RlIDM4KSwgZXZlbiBpZiBlaXRoZXIgc2VjcmV0IGlzCiAgICog
ZW1wdHkuIFRoZSByZXN1bHQgTVVTVCBiZSBlbmNvZGVkIGFnYWluLgogICAqICAgLSBDaGFw
dGVyIDkuNC4xICgiR2VuZXJhdGluZyBTaWduYXR1cmVzIikKICAgKgogICAqIFBsZWFzZSBu
b3RlIHRoYXQgdGhlIHNlY29uZCBlbmNvZGluZyBNVVNUIE5PVCBoYXBwZW4gaW4gdGhlIFNp
Z25hdHVyZU1ldGhvZCwgYXMKICAgKiBPQXV0aFJlcXVlc3QgaGFuZGxlcyB0aGlzIQogICAq
LwogIHB1YmxpYyBmdW5jdGlvbiBidWlsZF9zaWduYXR1cmUoJHJlcXVlc3QsICRjb25zdW1l
ciwgJHRva2VuKSB7Cgkka2V5X3BhcnRzID0gYXJyYXkoCgkgICRjb25zdW1lci0+c2VjcmV0
LAoJICAoJHRva2VuKSA/ICR0b2tlbi0+c2VjcmV0IDogIiIKCSk7CgoJJGtleV9wYXJ0cyA9
IE9BdXRoVXRpbDo6dXJsZW5jb2RlX3JmYzM5ODYoJGtleV9wYXJ0cyk7Cgkka2V5ID0gaW1w
bG9kZSgnJicsICRrZXlfcGFydHMpOwoJJHJlcXVlc3QtPmJhc2Vfc3RyaW5nID0gJGtleTsK
CglyZXR1cm4gJGtleTsKICB9Cn0KCi8qKgogKiBUaGUgUlNBLVNIQTEgc2lnbmF0dXJlIG1l
dGhvZCB1c2VzIHRoZSBSU0FTU0EtUEtDUzEtdjFfNSBzaWduYXR1cmUgYWxnb3JpdGhtIGFz
IGRlZmluZWQgaW4KICogW1JGQzM0NDddIHNlY3Rpb24gOC4yIChtb3JlIHNpbXBseSBrbm93
biBhcyBQS0NTIzEpLCB1c2luZyBTSEEtMSBhcyB0aGUgaGFzaCBmdW5jdGlvbiBmb3IKICog
RU1TQS1QS0NTMS12MV81LiBJdCBpcyBhc3N1bWVkIHRoYXQgdGhlIENvbnN1bWVyIGhhcyBw
cm92aWRlZCBpdHMgUlNBIHB1YmxpYyBrZXkgaW4gYQogKiB2ZXJpZmllZCB3YXkgdG8gdGhl
IFNlcnZpY2UgUHJvdmlkZXIsIGluIGEgbWFubmVyIHdoaWNoIGlzIGJleW9uZCB0aGUgc2Nv
cGUgb2YgdGhpcwogKiBzcGVjaWZpY2F0aW9uLgogKiAgIC0gQ2hhcHRlciA5LjMgKCJSU0Et
U0hBMSIpCiAqLwphYnN0cmFjdCBjbGFzcyBPQXV0aFNpZ25hdHVyZU1ldGhvZF9SU0FfU0hB
MSBleHRlbmRzIE9BdXRoU2lnbmF0dXJlTWV0aG9kIHsKICBwdWJsaWMgZnVuY3Rpb24gZ2V0
X25hbWUoKSB7CglyZXR1cm4gIlJTQS1TSEExIjsKICB9CgogIC8vIFVwIHRvIHRoZSBTUCB0
byBpbXBsZW1lbnQgdGhpcyBsb29rdXAgb2Yga2V5cy4gUG9zc2libGUgaWRlYXMgYXJlOgog
IC8vICgxKSBkbyBhIGxvb2t1cCBpbiBhIHRhYmxlIG9mIHRydXN0ZWQgY2VydHMga2V5ZWQg
b2ZmIG9mIGNvbnN1bWVyCiAgLy8gKDIpIGZldGNoIHZpYSBodHRwIHVzaW5nIGEgdXJsIHBy
b3ZpZGVkIGJ5IHRoZSByZXF1ZXN0ZXIKICAvLyAoMykgc29tZSBzb3J0IG9mIHNwZWNpZmlj
IGRpc2NvdmVyeSBjb2RlIGJhc2VkIG9uIHJlcXVlc3QKICAvLwogIC8vIEVpdGhlciB3YXkg
c2hvdWxkIHJldHVybiBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgY2VydGlmaWNh
dGUKICBwcm90ZWN0ZWQgYWJzdHJhY3QgZnVuY3Rpb24gZmV0Y2hfcHVibGljX2NlcnQoJiRy
ZXF1ZXN0KTsKCiAgLy8gVXAgdG8gdGhlIFNQIHRvIGltcGxlbWVudCB0aGlzIGxvb2t1cCBv
ZiBrZXlzLiBQb3NzaWJsZSBpZGVhcyBhcmU6CiAgLy8gKDEpIGRvIGEgbG9va3VwIGluIGEg
dGFibGUgb2YgdHJ1c3RlZCBjZXJ0cyBrZXllZCBvZmYgb2YgY29uc3VtZXIKICAvLwogIC8v
IEVpdGhlciB3YXkgc2hvdWxkIHJldHVybiBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0
aGUgY2VydGlmaWNhdGUKICBwcm90ZWN0ZWQgYWJzdHJhY3QgZnVuY3Rpb24gZmV0Y2hfcHJp
dmF0ZV9jZXJ0KCYkcmVxdWVzdCk7CgogIHB1YmxpYyBmdW5jdGlvbiBidWlsZF9zaWduYXR1
cmUoJHJlcXVlc3QsICRjb25zdW1lciwgJHRva2VuKSB7CgkkYmFzZV9zdHJpbmcgPSAkcmVx
dWVzdC0+Z2V0X3NpZ25hdHVyZV9iYXNlX3N0cmluZygpOwoJJHJlcXVlc3QtPmJhc2Vfc3Ry
aW5nID0gJGJhc2Vfc3RyaW5nOwoKCS8vIEZldGNoIHRoZSBwcml2YXRlIGtleSBjZXJ0IGJh
c2VkIG9uIHRoZSByZXF1ZXN0CgkkY2VydCA9ICR0aGlzLT5mZXRjaF9wcml2YXRlX2NlcnQo
JHJlcXVlc3QpOwoKCS8vIFB1bGwgdGhlIHByaXZhdGUga2V5IElEIGZyb20gdGhlIGNlcnRp
ZmljYXRlCgkkcHJpdmF0ZWtleWlkID0gb3BlbnNzbF9nZXRfcHJpdmF0ZWtleSgkY2VydCk7
CgoJLy8gU2lnbiB1c2luZyB0aGUga2V5Cgkkb2sgPSBvcGVuc3NsX3NpZ24oJGJhc2Vfc3Ry
aW5nLCAkc2lnbmF0dXJlLCAkcHJpdmF0ZWtleWlkKTsKCgkvLyBSZWxlYXNlIHRoZSBrZXkg
cmVzb3VyY2UKCW9wZW5zc2xfZnJlZV9rZXkoJHByaXZhdGVrZXlpZCk7CgoJcmV0dXJuIGJh
c2U2NF9lbmNvZGUoJHNpZ25hdHVyZSk7CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gY2hlY2tf
c2lnbmF0dXJlKCRyZXF1ZXN0LCAkY29uc3VtZXIsICR0b2tlbiwgJHNpZ25hdHVyZSkgewoJ
JGRlY29kZWRfc2lnID0gYmFzZTY0X2RlY29kZSgkc2lnbmF0dXJlKTsKCgkkYmFzZV9zdHJp
bmcgPSAkcmVxdWVzdC0+Z2V0X3NpZ25hdHVyZV9iYXNlX3N0cmluZygpOwoKCS8vIEZldGNo
IHRoZSBwdWJsaWMga2V5IGNlcnQgYmFzZWQgb24gdGhlIHJlcXVlc3QKCSRjZXJ0ID0gJHRo
aXMtPmZldGNoX3B1YmxpY19jZXJ0KCRyZXF1ZXN0KTsKCgkvLyBQdWxsIHRoZSBwdWJsaWMg
a2V5IElEIGZyb20gdGhlIGNlcnRpZmljYXRlCgkkcHVibGlja2V5aWQgPSBvcGVuc3NsX2dl
dF9wdWJsaWNrZXkoJGNlcnQpOwoKCS8vIENoZWNrIHRoZSBjb21wdXRlZCBzaWduYXR1cmUg
YWdhaW5zdCB0aGUgb25lIHBhc3NlZCBpbiB0aGUgcXVlcnkKCSRvayA9IG9wZW5zc2xfdmVy
aWZ5KCRiYXNlX3N0cmluZywgJGRlY29kZWRfc2lnLCAkcHVibGlja2V5aWQpOwoKCS8vIFJl
bGVhc2UgdGhlIGtleSByZXNvdXJjZQoJb3BlbnNzbF9mcmVlX2tleSgkcHVibGlja2V5aWQp
OwoKCXJldHVybiAkb2sgPT0gMTsKICB9Cn0KCmNsYXNzIE9BdXRoUmVxdWVzdCB7CiAgcHJp
dmF0ZSAkcGFyYW1ldGVyczsKICBwcml2YXRlICRodHRwX21ldGhvZDsKICBwcml2YXRlICRo
dHRwX3VybDsKICAvLyBmb3IgZGVidWcgcHVycG9zZXMKICBwdWJsaWMgJGJhc2Vfc3RyaW5n
OwogIHB1YmxpYyBzdGF0aWMgJHZlcnNpb24gPSAnMS4wJzsKICBwdWJsaWMgc3RhdGljICRQ
T1NUX0lOUFVUID0gJ3BocDovL2lucHV0JzsKCiAgZnVuY3Rpb24gX19jb25zdHJ1Y3QoJGh0
dHBfbWV0aG9kLCAkaHR0cF91cmwsICRwYXJhbWV0ZXJzPU5VTEwpIHsKCUAkcGFyYW1ldGVy
cyBvciAkcGFyYW1ldGVycyA9IGFycmF5KCk7CgkkcGFyYW1ldGVycyA9IGFycmF5X21lcmdl
KCBPQXV0aFV0aWw6OnBhcnNlX3BhcmFtZXRlcnMocGFyc2VfdXJsKCRodHRwX3VybCwgUEhQ
X1VSTF9RVUVSWSkpLCAkcGFyYW1ldGVycyk7CgkkdGhpcy0+cGFyYW1ldGVycyA9ICRwYXJh
bWV0ZXJzOwoJJHRoaXMtPmh0dHBfbWV0aG9kID0gJGh0dHBfbWV0aG9kOwoJJHRoaXMtPmh0
dHBfdXJsID0gJGh0dHBfdXJsOwogIH0KCgogIC8qKgogICAqIGF0dGVtcHQgdG8gYnVpbGQg
dXAgYSByZXF1ZXN0IGZyb20gd2hhdCB3YXMgcGFzc2VkIHRvIHRoZSBzZXJ2ZXIKICAgKi8K
ICBwdWJsaWMgc3RhdGljIGZ1bmN0aW9uIGZyb21fcmVxdWVzdCgkaHR0cF9tZXRob2Q9TlVM
TCwgJGh0dHBfdXJsPU5VTEwsICRwYXJhbWV0ZXJzPU5VTEwpIHsKCSRzY2hlbWUgPSAoIWlz
c2V0KCRfU0VSVkVSWydIVFRQUyddKSB8fCAkX1NFUlZFUlsnSFRUUFMnXSAhPSAib24iKQoJ
CQkgID8gJ2h0dHAnCgkJCSAgOiAnaHR0cHMnOwoJQCRodHRwX3VybCBvciAkaHR0cF91cmwg
PSAkc2NoZW1lIC4KCQkJCQkJCSAgJzovLycgLiAkX1NFUlZFUlsnSFRUUF9IT1NUJ10gLgoJ
CQkJCQkJICAnOicgLgoJCQkJCQkJICAkX1NFUlZFUlsnU0VSVkVSX1BPUlQnXSAuCgkJCQkJ
CQkgICRfU0VSVkVSWydSRVFVRVNUX1VSSSddOwoJQCRodHRwX21ldGhvZCBvciAkaHR0cF9t
ZXRob2QgPSAkX1NFUlZFUlsnUkVRVUVTVF9NRVRIT0QnXTsKCgkvLyBXZSB3ZXJlbid0IGhh
bmRlZCBhbnkgcGFyYW1ldGVycywgc28gbGV0J3MgZmluZCB0aGUgb25lcyByZWxldmFudCB0
bwoJLy8gdGhpcyByZXF1ZXN0LgoJLy8gSWYgeW91IHJ1biBYTUwtUlBDIG9yIHNpbWlsYXIg
eW91IHNob3VsZCB1c2UgdGhpcyB0byBwcm92aWRlIHlvdXIgb3duCgkvLyBwYXJzZWQgcGFy
YW1ldGVyLWxpc3QKCWlmICghJHBhcmFtZXRlcnMpIHsKCSAgLy8gRmluZCByZXF1ZXN0IGhl
YWRlcnMKCSAgJHJlcXVlc3RfaGVhZGVycyA9IE9BdXRoVXRpbDo6Z2V0X2hlYWRlcnMoKTsK
CgkgIC8vIFBhcnNlIHRoZSBxdWVyeS1zdHJpbmcgdG8gZmluZCBHRVQgcGFyYW1ldGVycwoJ
ICAkcGFyYW1ldGVycyA9IE9BdXRoVXRpbDo6cGFyc2VfcGFyYW1ldGVycygkX1NFUlZFUlsn
UVVFUllfU1RSSU5HJ10pOwoKCSAgLy8gSXQncyBhIFBPU1QgcmVxdWVzdCBvZiB0aGUgcHJv
cGVyIGNvbnRlbnQtdHlwZSwgc28gcGFyc2UgUE9TVAoJICAvLyBwYXJhbWV0ZXJzIGFuZCBh
ZGQgdGhvc2Ugb3ZlcnJpZGluZyBhbnkgZHVwbGljYXRlcyBmcm9tIEdFVAoJICBpZiAoJGh0
dHBfbWV0aG9kID09ICJQT1NUIgoJCSAgJiYgQHN0cnN0cigkcmVxdWVzdF9oZWFkZXJzWyJD
b250ZW50LVR5cGUiXSwKCQkJCQkgImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2Rl
ZCIpCgkJICApIHsKCQkkcG9zdF9kYXRhID0gT0F1dGhVdGlsOjpwYXJzZV9wYXJhbWV0ZXJz
KAoJCSAgZmlsZV9nZXRfY29udGVudHMoc2VsZjo6JFBPU1RfSU5QVVQpCgkJKTsKCQkkcGFy
YW1ldGVycyA9IGFycmF5X21lcmdlKCRwYXJhbWV0ZXJzLCAkcG9zdF9kYXRhKTsKCSAgfQoK
CSAgLy8gV2UgaGF2ZSBhIEF1dGhvcml6YXRpb24taGVhZGVyIHdpdGggT0F1dGggZGF0YS4g
UGFyc2UgdGhlIGhlYWRlcgoJICAvLyBhbmQgYWRkIHRob3NlIG92ZXJyaWRpbmcgYW55IGR1
cGxpY2F0ZXMgZnJvbSBHRVQgb3IgUE9TVAoJICBpZiAoQHN1YnN0cigkcmVxdWVzdF9oZWFk
ZXJzWydBdXRob3JpemF0aW9uJ10sIDAsIDYpID09ICJPQXV0aCAiKSB7CgkJJGhlYWRlcl9w
YXJhbWV0ZXJzID0gT0F1dGhVdGlsOjpzcGxpdF9oZWFkZXIoCgkJICAkcmVxdWVzdF9oZWFk
ZXJzWydBdXRob3JpemF0aW9uJ10KCQkpOwoJCSRwYXJhbWV0ZXJzID0gYXJyYXlfbWVyZ2Uo
JHBhcmFtZXRlcnMsICRoZWFkZXJfcGFyYW1ldGVycyk7CgkgIH0KCgl9CgoJcmV0dXJuIG5l
dyBPQXV0aFJlcXVlc3QoJGh0dHBfbWV0aG9kLCAkaHR0cF91cmwsICRwYXJhbWV0ZXJzKTsK
ICB9CgogIC8qKgogICAqIHByZXR0eSBtdWNoIGEgaGVscGVyIGZ1bmN0aW9uIHRvIHNldCB1
cCB0aGUgcmVxdWVzdAogICAqLwogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gZnJvbV9jb25z
dW1lcl9hbmRfdG9rZW4oJGNvbnN1bWVyLCAkdG9rZW4sICRodHRwX21ldGhvZCwgJGh0dHBf
dXJsLCAkcGFyYW1ldGVycz1OVUxMKSB7CglAJHBhcmFtZXRlcnMgb3IgJHBhcmFtZXRlcnMg
PSBhcnJheSgpOwoJJGRlZmF1bHRzID0gYXJyYXkoIm9hdXRoX3ZlcnNpb24iID0+IE9BdXRo
UmVxdWVzdDo6JHZlcnNpb24sCgkJCQkJICAib2F1dGhfbm9uY2UiID0+IE9BdXRoUmVxdWVz
dDo6Z2VuZXJhdGVfbm9uY2UoKSwKCQkJCQkgICJvYXV0aF90aW1lc3RhbXAiID0+IE9BdXRo
UmVxdWVzdDo6Z2VuZXJhdGVfdGltZXN0YW1wKCksCgkJCQkJICAib2F1dGhfY29uc3VtZXJf
a2V5IiA9PiAkY29uc3VtZXItPmtleSk7CglpZiAoJHRva2VuKQoJICAkZGVmYXVsdHNbJ29h
dXRoX3Rva2VuJ10gPSAkdG9rZW4tPmtleTsKCgkkcGFyYW1ldGVycyA9IGFycmF5X21lcmdl
KCRkZWZhdWx0cywgJHBhcmFtZXRlcnMpOwoKCXJldHVybiBuZXcgT0F1dGhSZXF1ZXN0KCRo
dHRwX21ldGhvZCwgJGh0dHBfdXJsLCAkcGFyYW1ldGVycyk7CiAgfQoKICBwdWJsaWMgZnVu
Y3Rpb24gc2V0X3BhcmFtZXRlcigkbmFtZSwgJHZhbHVlLCAkYWxsb3dfZHVwbGljYXRlcyA9
IHRydWUpIHsKCWlmICgkYWxsb3dfZHVwbGljYXRlcyAmJiBpc3NldCgkdGhpcy0+cGFyYW1l
dGVyc1skbmFtZV0pKSB7CgkgIC8vIFdlIGhhdmUgYWxyZWFkeSBhZGRlZCBwYXJhbWV0ZXIo
cykgd2l0aCB0aGlzIG5hbWUsIHNvIGFkZCB0byB0aGUgbGlzdAoJICBpZiAoaXNfc2NhbGFy
KCR0aGlzLT5wYXJhbWV0ZXJzWyRuYW1lXSkpIHsKCQkvLyBUaGlzIGlzIHRoZSBmaXJzdCBk
dXBsaWNhdGUsIHNvIHRyYW5zZm9ybSBzY2FsYXIgKHN0cmluZykKCQkvLyBpbnRvIGFuIGFy
cmF5IHNvIHdlIGNhbiBhZGQgdGhlIGR1cGxpY2F0ZXMKCQkkdGhpcy0+cGFyYW1ldGVyc1sk
bmFtZV0gPSBhcnJheSgkdGhpcy0+cGFyYW1ldGVyc1skbmFtZV0pOwoJICB9CgoJICAkdGhp
cy0+cGFyYW1ldGVyc1skbmFtZV1bXSA9ICR2YWx1ZTsKCX0gZWxzZSB7CgkgICR0aGlzLT5w
YXJhbWV0ZXJzWyRuYW1lXSA9ICR2YWx1ZTsKCX0KICB9CgogIHB1YmxpYyBmdW5jdGlvbiBn
ZXRfcGFyYW1ldGVyKCRuYW1lKSB7CglyZXR1cm4gaXNzZXQoJHRoaXMtPnBhcmFtZXRlcnNb
JG5hbWVdKSA/ICR0aGlzLT5wYXJhbWV0ZXJzWyRuYW1lXSA6IG51bGw7CiAgfQoKICBwdWJs
aWMgZnVuY3Rpb24gZ2V0X3BhcmFtZXRlcnMoKSB7CglyZXR1cm4gJHRoaXMtPnBhcmFtZXRl
cnM7CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gdW5zZXRfcGFyYW1ldGVyKCRuYW1lKSB7Cgl1
bnNldCgkdGhpcy0+cGFyYW1ldGVyc1skbmFtZV0pOwogIH0KCiAgLyoqCiAgICogVGhlIHJl
cXVlc3QgcGFyYW1ldGVycywgc29ydGVkIGFuZCBjb25jYXRlbmF0ZWQgaW50byBhIG5vcm1h
bGl6ZWQgc3RyaW5nLgogICAqIEByZXR1cm4gc3RyaW5nCiAgICovCiAgcHVibGljIGZ1bmN0
aW9uIGdldF9zaWduYWJsZV9wYXJhbWV0ZXJzKCkgewoJLy8gR3JhYiBhbGwgcGFyYW1ldGVy
cwoJJHBhcmFtcyA9ICR0aGlzLT5wYXJhbWV0ZXJzOwoKCS8vIFJlbW92ZSBvYXV0aF9zaWdu
YXR1cmUgaWYgcHJlc2VudAoJLy8gUmVmOiBTcGVjOiA5LjEuMSAoIlRoZSBvYXV0aF9zaWdu
YXR1cmUgcGFyYW1ldGVyIE1VU1QgYmUgZXhjbHVkZWQuIikKCWlmIChpc3NldCgkcGFyYW1z
WydvYXV0aF9zaWduYXR1cmUnXSkpIHsKCSAgdW5zZXQoJHBhcmFtc1snb2F1dGhfc2lnbmF0
dXJlJ10pOwoJfQoKCXJldHVybiBPQXV0aFV0aWw6OmJ1aWxkX2h0dHBfcXVlcnkoJHBhcmFt
cyk7CiAgfQoKICAvKioKICAgKiBSZXR1cm5zIHRoZSBiYXNlIHN0cmluZyBvZiB0aGlzIHJl
cXVlc3QKICAgKgogICAqIFRoZSBiYXNlIHN0cmluZyBkZWZpbmVkIGFzIHRoZSBtZXRob2Qs
IHRoZSB1cmwKICAgKiBhbmQgdGhlIHBhcmFtZXRlcnMgKG5vcm1hbGl6ZWQpLCBlYWNoIHVy
bGVuY29kZWQKICAgKiBhbmQgdGhlIGNvbmNhdGVkIHdpdGggJi4KICAgKi8KICBwdWJsaWMg
ZnVuY3Rpb24gZ2V0X3NpZ25hdHVyZV9iYXNlX3N0cmluZygpIHsKCSRwYXJ0cyA9IGFycmF5
KAoJICAkdGhpcy0+Z2V0X25vcm1hbGl6ZWRfaHR0cF9tZXRob2QoKSwKCSAgJHRoaXMtPmdl
dF9ub3JtYWxpemVkX2h0dHBfdXJsKCksCgkgICR0aGlzLT5nZXRfc2lnbmFibGVfcGFyYW1l
dGVycygpCgkpOwoKCSRwYXJ0cyA9IE9BdXRoVXRpbDo6dXJsZW5jb2RlX3JmYzM5ODYoJHBh
cnRzKTsKCglyZXR1cm4gaW1wbG9kZSgnJicsICRwYXJ0cyk7CiAgfQoKICAvKioKICAgKiBq
dXN0IHVwcGVyY2FzZXMgdGhlIGh0dHAgbWV0aG9kCiAgICovCiAgcHVibGljIGZ1bmN0aW9u
IGdldF9ub3JtYWxpemVkX2h0dHBfbWV0aG9kKCkgewoJcmV0dXJuIHN0cnRvdXBwZXIoJHRo
aXMtPmh0dHBfbWV0aG9kKTsKICB9CgogIC8qKgogICAqIHBhcnNlcyB0aGUgdXJsIGFuZCBy
ZWJ1aWxkcyBpdCB0byBiZQogICAqIHNjaGVtZTovL2hvc3QvcGF0aAogICAqLwogIHB1Ymxp
YyBmdW5jdGlvbiBnZXRfbm9ybWFsaXplZF9odHRwX3VybCgpIHsKCSRwYXJ0cyA9IHBhcnNl
X3VybCgkdGhpcy0+aHR0cF91cmwpOwoKCSRwb3J0ID0gQCRwYXJ0c1sncG9ydCddOwoJJHNj
aGVtZSA9ICRwYXJ0c1snc2NoZW1lJ107CgkkaG9zdCA9ICRwYXJ0c1snaG9zdCddOwoJJHBh
dGggPSBAJHBhcnRzWydwYXRoJ107CgoJJHBvcnQgb3IgJHBvcnQgPSAoJHNjaGVtZSA9PSAn
aHR0cHMnKSA/ICc0NDMnIDogJzgwJzsKCglpZiAoKCRzY2hlbWUgPT0gJ2h0dHBzJyAmJiAk
cG9ydCAhPSAnNDQzJykKCQl8fCAoJHNjaGVtZSA9PSAnaHR0cCcgJiYgJHBvcnQgIT0gJzgw
JykpIHsKCSAgJGhvc3QgPSAiJGhvc3Q6JHBvcnQiOwoJfQoJcmV0dXJuICIkc2NoZW1lOi8v
JGhvc3QkcGF0aCI7CiAgfQoKICAvKioKICAgKiBidWlsZHMgYSB1cmwgdXNhYmxlIGZvciBh
IEdFVCByZXF1ZXN0CiAgICovCiAgcHVibGljIGZ1bmN0aW9uIHRvX3VybCgpIHsKCSRwb3N0
X2RhdGEgPSAkdGhpcy0+dG9fcG9zdGRhdGEoKTsKCSRvdXQgPSAkdGhpcy0+Z2V0X25vcm1h
bGl6ZWRfaHR0cF91cmwoKTsKCWlmICgkcG9zdF9kYXRhKSB7CgkgICRvdXQgLj0gJz8nLiRw
b3N0X2RhdGE7Cgl9CglyZXR1cm4gJG91dDsKICB9CgogIC8qKgogICAqIGJ1aWxkcyB0aGUg
ZGF0YSBvbmUgd291bGQgc2VuZCBpbiBhIFBPU1QgcmVxdWVzdAogICAqLwogIHB1YmxpYyBm
dW5jdGlvbiB0b19wb3N0ZGF0YSgpIHsKCXJldHVybiBPQXV0aFV0aWw6OmJ1aWxkX2h0dHBf
cXVlcnkoJHRoaXMtPnBhcmFtZXRlcnMpOwogIH0KCiAgLyoqCiAgICogYnVpbGRzIHRoZSBB
dXRob3JpemF0aW9uOiBoZWFkZXIKICAgKi8KICBwdWJsaWMgZnVuY3Rpb24gdG9faGVhZGVy
KCRyZWFsbT1udWxsKSB7CgkkZmlyc3QgPSB0cnVlOwogIGlmKCRyZWFsbSkgewoJICAkb3V0
ID0gJ0F1dGhvcml6YXRpb246IE9BdXRoIHJlYWxtPSInIC4gT0F1dGhVdGlsOjp1cmxlbmNv
ZGVfcmZjMzk4NigkcmVhbG0pIC4gJyInOwoJICAkZmlyc3QgPSBmYWxzZTsKCX0gZWxzZQoJ
ICAkb3V0ID0gJ0F1dGhvcml6YXRpb246IE9BdXRoJzsKCgkkdG90YWwgPSBhcnJheSgpOwoJ
Zm9yZWFjaCAoJHRoaXMtPnBhcmFtZXRlcnMgYXMgJGsgPT4gJHYpIHsKCSAgaWYgKHN1YnN0
cigkaywgMCwgNSkgIT0gIm9hdXRoIikgY29udGludWU7CgkgIGlmIChpc19hcnJheSgkdikp
IHsKCQl0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24oJ0FycmF5cyBub3Qgc3VwcG9ydGVkIGlu
IGhlYWRlcnMnKTsKCSAgfQoJICAkb3V0IC49ICgkZmlyc3QpID8gJyAnIDogJywnOwoJICAk
b3V0IC49IE9BdXRoVXRpbDo6dXJsZW5jb2RlX3JmYzM5ODYoJGspIC4KCQkJICAnPSInIC4K
CQkJICBPQXV0aFV0aWw6OnVybGVuY29kZV9yZmMzOTg2KCR2KSAuCgkJCSAgJyInOwoJICAk
Zmlyc3QgPSBmYWxzZTsKCX0KCXJldHVybiAkb3V0OwogIH0KCiAgcHVibGljIGZ1bmN0aW9u
IF9fdG9TdHJpbmcoKSB7CglyZXR1cm4gJHRoaXMtPnRvX3VybCgpOwogIH0KCgogIHB1Ymxp
YyBmdW5jdGlvbiBzaWduX3JlcXVlc3QoJHNpZ25hdHVyZV9tZXRob2QsICRjb25zdW1lciwg
JHRva2VuKSB7CgkkdGhpcy0+c2V0X3BhcmFtZXRlcigKCSAgIm9hdXRoX3NpZ25hdHVyZV9t
ZXRob2QiLAoJICAkc2lnbmF0dXJlX21ldGhvZC0+Z2V0X25hbWUoKSwKCSAgZmFsc2UKCSk7
Cgkkc2lnbmF0dXJlID0gJHRoaXMtPmJ1aWxkX3NpZ25hdHVyZSgkc2lnbmF0dXJlX21ldGhv
ZCwgJGNvbnN1bWVyLCAkdG9rZW4pOwoJJHRoaXMtPnNldF9wYXJhbWV0ZXIoIm9hdXRoX3Np
Z25hdHVyZSIsICRzaWduYXR1cmUsIGZhbHNlKTsKICB9CgogIHB1YmxpYyBmdW5jdGlvbiBi
dWlsZF9zaWduYXR1cmUoJHNpZ25hdHVyZV9tZXRob2QsICRjb25zdW1lciwgJHRva2VuKSB7
Cgkkc2lnbmF0dXJlID0gJHNpZ25hdHVyZV9tZXRob2QtPmJ1aWxkX3NpZ25hdHVyZSgkdGhp
cywgJGNvbnN1bWVyLCAkdG9rZW4pOwoJcmV0dXJuICRzaWduYXR1cmU7CiAgfQoKICAvKioK
ICAgKiB1dGlsIGZ1bmN0aW9uOiBjdXJyZW50IHRpbWVzdGFtcAogICAqLwogIHByaXZhdGUg
c3RhdGljIGZ1bmN0aW9uIGdlbmVyYXRlX3RpbWVzdGFtcCgpIHsKCXJldHVybiB0aW1lKCk7
CiAgfQoKICAvKioKICAgKiB1dGlsIGZ1bmN0aW9uOiBjdXJyZW50IG5vbmNlCiAgICovCiAg
cHJpdmF0ZSBzdGF0aWMgZnVuY3Rpb24gZ2VuZXJhdGVfbm9uY2UoKSB7CgkkbXQgPSBtaWNy
b3RpbWUoKTsKCSRyYW5kID0gbXRfcmFuZCgpOwoKCXJldHVybiBtZDUoJG10IC4gJHJhbmQp
OyAvLyBtZDVzIGxvb2sgbmljZXIgdGhhbiBudW1iZXJzCiAgfQp9CgpjbGFzcyBPQXV0aFNl
cnZlciB7CiAgcHJvdGVjdGVkICR0aW1lc3RhbXBfdGhyZXNob2xkID0gMzAwOyAvLyBpbiBz
ZWNvbmRzLCBmaXZlIG1pbnV0ZXMKICBwcm90ZWN0ZWQgJHZlcnNpb24gPSAnMS4wJzsgICAg
ICAgICAgICAgLy8gaGkgYmxhaW5lCiAgcHJvdGVjdGVkICRzaWduYXR1cmVfbWV0aG9kcyA9
IGFycmF5KCk7CgogIHByb3RlY3RlZCAkZGF0YV9zdG9yZTsKCiAgZnVuY3Rpb24gX19jb25z
dHJ1Y3QoJGRhdGFfc3RvcmUpIHsKCSR0aGlzLT5kYXRhX3N0b3JlID0gJGRhdGFfc3RvcmU7
CiAgfQoKICBwdWJsaWMgZnVuY3Rpb24gYWRkX3NpZ25hdHVyZV9tZXRob2QoJHNpZ25hdHVy
ZV9tZXRob2QpIHsKCSR0aGlzLT5zaWduYXR1cmVfbWV0aG9kc1skc2lnbmF0dXJlX21ldGhv
ZC0+Z2V0X25hbWUoKV0gPQoJICAkc2lnbmF0dXJlX21ldGhvZDsKICB9CgogIC8vIGhpZ2gg
bGV2ZWwgZnVuY3Rpb25zCgogIC8qKgogICAqIHByb2Nlc3MgYSByZXF1ZXN0X3Rva2VuIHJl
cXVlc3QKICAgKiByZXR1cm5zIHRoZSByZXF1ZXN0IHRva2VuIG9uIHN1Y2Nlc3MKICAgKi8K
ICBwdWJsaWMgZnVuY3Rpb24gZmV0Y2hfcmVxdWVzdF90b2tlbigmJHJlcXVlc3QpIHsKCSR0
aGlzLT5nZXRfdmVyc2lvbigkcmVxdWVzdCk7CgoJJGNvbnN1bWVyID0gJHRoaXMtPmdldF9j
b25zdW1lcigkcmVxdWVzdCk7CgoJLy8gbm8gdG9rZW4gcmVxdWlyZWQgZm9yIHRoZSBpbml0
aWFsIHRva2VuIHJlcXVlc3QKCSR0b2tlbiA9IE5VTEw7CgoJJHRoaXMtPmNoZWNrX3NpZ25h
dHVyZSgkcmVxdWVzdCwgJGNvbnN1bWVyLCAkdG9rZW4pOwoKCS8vIFJldiBBIGNoYW5nZQoJ
JGNhbGxiYWNrID0gJHJlcXVlc3QtPmdldF9wYXJhbWV0ZXIoJ29hdXRoX2NhbGxiYWNrJyk7
CgkkbmV3X3Rva2VuID0gJHRoaXMtPmRhdGFfc3RvcmUtPm5ld19yZXF1ZXN0X3Rva2VuKCRj
b25zdW1lciwgJGNhbGxiYWNrKTsKCglyZXR1cm4gJG5ld190b2tlbjsKICB9CgogIC8qKgog
ICAqIHByb2Nlc3MgYW4gYWNjZXNzX3Rva2VuIHJlcXVlc3QKICAgKiByZXR1cm5zIHRoZSBh
Y2Nlc3MgdG9rZW4gb24gc3VjY2VzcwogICAqLwogIHB1YmxpYyBmdW5jdGlvbiBmZXRjaF9h
Y2Nlc3NfdG9rZW4oJiRyZXF1ZXN0KSB7CgkkdGhpcy0+Z2V0X3ZlcnNpb24oJHJlcXVlc3Qp
OwoKCSRjb25zdW1lciA9ICR0aGlzLT5nZXRfY29uc3VtZXIoJHJlcXVlc3QpOwoKCS8vIHJl
cXVpcmVzIGF1dGhvcml6ZWQgcmVxdWVzdCB0b2tlbgoJJHRva2VuID0gJHRoaXMtPmdldF90
b2tlbigkcmVxdWVzdCwgJGNvbnN1bWVyLCAicmVxdWVzdCIpOwoKCSR0aGlzLT5jaGVja19z
aWduYXR1cmUoJHJlcXVlc3QsICRjb25zdW1lciwgJHRva2VuKTsKCgkvLyBSZXYgQSBjaGFu
Z2UKCSR2ZXJpZmllciA9ICRyZXF1ZXN0LT5nZXRfcGFyYW1ldGVyKCdvYXV0aF92ZXJpZmll
cicpOwoJJG5ld190b2tlbiA9ICR0aGlzLT5kYXRhX3N0b3JlLT5uZXdfYWNjZXNzX3Rva2Vu
KCR0b2tlbiwgJGNvbnN1bWVyLCAkdmVyaWZpZXIpOwoKCXJldHVybiAkbmV3X3Rva2VuOwog
IH0KCiAgLyoqCiAgICogdmVyaWZ5IGFuIGFwaSBjYWxsLCBjaGVja3MgYWxsIHRoZSBwYXJh
bWV0ZXJzCiAgICovCiAgcHVibGljIGZ1bmN0aW9uIHZlcmlmeV9yZXF1ZXN0KCYkcmVxdWVz
dCkgewoJJHRoaXMtPmdldF92ZXJzaW9uKCRyZXF1ZXN0KTsKCSRjb25zdW1lciA9ICR0aGlz
LT5nZXRfY29uc3VtZXIoJHJlcXVlc3QpOwoJJHRva2VuID0gJHRoaXMtPmdldF90b2tlbigk
cmVxdWVzdCwgJGNvbnN1bWVyLCAiYWNjZXNzIik7CgkkdGhpcy0+Y2hlY2tfc2lnbmF0dXJl
KCRyZXF1ZXN0LCAkY29uc3VtZXIsICR0b2tlbik7CglyZXR1cm4gYXJyYXkoJGNvbnN1bWVy
LCAkdG9rZW4pOwogIH0KCiAgLy8gSW50ZXJuYWxzIGZyb20gaGVyZQogIC8qKgogICAqIHZl
cnNpb24gMQogICAqLwogIHByaXZhdGUgZnVuY3Rpb24gZ2V0X3ZlcnNpb24oJiRyZXF1ZXN0
KSB7CgkkdmVyc2lvbiA9ICRyZXF1ZXN0LT5nZXRfcGFyYW1ldGVyKCJvYXV0aF92ZXJzaW9u
Iik7CglpZiAoISR2ZXJzaW9uKSB7CgkgIC8vIFNlcnZpY2UgUHJvdmlkZXJzIE1VU1QgYXNz
dW1lIHRoZSBwcm90b2NvbCB2ZXJzaW9uIHRvIGJlIDEuMCBpZiB0aGlzIHBhcmFtZXRlciBp
cyBub3QgcHJlc2VudC4KCSAgLy8gQ2hhcHRlciA3LjAgKCJBY2Nlc3NpbmcgUHJvdGVjdGVk
IFJlc3NvdXJjZXMiKQoJICAkdmVyc2lvbiA9ICcxLjAnOwoJfQoJaWYgKCR2ZXJzaW9uICE9
PSAkdGhpcy0+dmVyc2lvbikgewoJICB0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24oIk9BdXRo
IHZlcnNpb24gJyR2ZXJzaW9uJyBub3Qgc3VwcG9ydGVkIik7Cgl9CglyZXR1cm4gJHZlcnNp
b247CiAgfQoKICAvKioKICAgKiBmaWd1cmUgb3V0IHRoZSBzaWduYXR1cmUgd2l0aCBzb21l
IGRlZmF1bHRzCiAgICovCiAgcHJpdmF0ZSBmdW5jdGlvbiBnZXRfc2lnbmF0dXJlX21ldGhv
ZCgmJHJlcXVlc3QpIHsKCSRzaWduYXR1cmVfbWV0aG9kID0KCQlAJHJlcXVlc3QtPmdldF9w
YXJhbWV0ZXIoIm9hdXRoX3NpZ25hdHVyZV9tZXRob2QiKTsKCglpZiAoISRzaWduYXR1cmVf
bWV0aG9kKSB7CgkgIC8vIEFjY29yZGluZyB0byBjaGFwdGVyIDcgKCJBY2Nlc3NpbmcgUHJv
dGVjdGVkIFJlc3NvdXJjZXMiKSB0aGUgc2lnbmF0dXJlLW1ldGhvZAoJICAvLyBwYXJhbWV0
ZXIgaXMgcmVxdWlyZWQsIGFuZCB3ZSBjYW4ndCBqdXN0IGZhbGxiYWNrIHRvIFBMQUlOVEVY
VAoJICB0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24oJ05vIHNpZ25hdHVyZSBtZXRob2QgcGFy
YW1ldGVyLiBUaGlzIHBhcmFtZXRlciBpcyByZXF1aXJlZCcpOwoJfQoKCWlmICghaW5fYXJy
YXkoJHNpZ25hdHVyZV9tZXRob2QsCgkJCQkgIGFycmF5X2tleXMoJHRoaXMtPnNpZ25hdHVy
ZV9tZXRob2RzKSkpIHsKCSAgdGhyb3cgbmV3IE9BdXRoRXhjZXB0aW9uKAoJCSJTaWduYXR1
cmUgbWV0aG9kICckc2lnbmF0dXJlX21ldGhvZCcgbm90IHN1cHBvcnRlZCAiIC4KCQkidHJ5
IG9uZSBvZiB0aGUgZm9sbG93aW5nOiAiIC4KCQlpbXBsb2RlKCIsICIsIGFycmF5X2tleXMo
JHRoaXMtPnNpZ25hdHVyZV9tZXRob2RzKSkKCSAgKTsKCX0KCXJldHVybiAkdGhpcy0+c2ln
bmF0dXJlX21ldGhvZHNbJHNpZ25hdHVyZV9tZXRob2RdOwogIH0KCiAgLyoqCiAgICogdHJ5
IHRvIGZpbmQgdGhlIGNvbnN1bWVyIGZvciB0aGUgcHJvdmlkZWQgcmVxdWVzdCdzIGNvbnN1
bWVyIGtleQogICAqLwogIHByaXZhdGUgZnVuY3Rpb24gZ2V0X2NvbnN1bWVyKCYkcmVxdWVz
dCkgewoJJGNvbnN1bWVyX2tleSA9IEAkcmVxdWVzdC0+Z2V0X3BhcmFtZXRlcigib2F1dGhf
Y29uc3VtZXJfa2V5Iik7CglpZiAoISRjb25zdW1lcl9rZXkpIHsKCSAgdGhyb3cgbmV3IE9B
dXRoRXhjZXB0aW9uKCJJbnZhbGlkIGNvbnN1bWVyIGtleSIpOwoJfQoKCSRjb25zdW1lciA9
ICR0aGlzLT5kYXRhX3N0b3JlLT5sb29rdXBfY29uc3VtZXIoJGNvbnN1bWVyX2tleSk7Cglp
ZiAoISRjb25zdW1lcikgewoJICB0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24oIkludmFsaWQg
Y29uc3VtZXIiKTsKCX0KCglyZXR1cm4gJGNvbnN1bWVyOwogIH0KCiAgLyoqCiAgICogdHJ5
IHRvIGZpbmQgdGhlIHRva2VuIGZvciB0aGUgcHJvdmlkZWQgcmVxdWVzdCdzIHRva2VuIGtl
eQogICAqLwogIHByaXZhdGUgZnVuY3Rpb24gZ2V0X3Rva2VuKCYkcmVxdWVzdCwgJGNvbnN1
bWVyLCAkdG9rZW5fdHlwZT0iYWNjZXNzIikgewoJJHRva2VuX2ZpZWxkID0gQCRyZXF1ZXN0
LT5nZXRfcGFyYW1ldGVyKCdvYXV0aF90b2tlbicpOwoJJHRva2VuID0gJHRoaXMtPmRhdGFf
c3RvcmUtPmxvb2t1cF90b2tlbigKCSAgJGNvbnN1bWVyLCAkdG9rZW5fdHlwZSwgJHRva2Vu
X2ZpZWxkCgkpOwoJaWYgKCEkdG9rZW4pIHsKCSAgdGhyb3cgbmV3IE9BdXRoRXhjZXB0aW9u
KCJJbnZhbGlkICR0b2tlbl90eXBlIHRva2VuOiAkdG9rZW5fZmllbGQiKTsKCX0KCXJldHVy
biAkdG9rZW47CiAgfQoKICAvKioKICAgKiBhbGwtaW4tb25lIGZ1bmN0aW9uIHRvIGNoZWNr
IHRoZSBzaWduYXR1cmUgb24gYSByZXF1ZXN0CiAgICogc2hvdWxkIGd1ZXNzIHRoZSBzaWdu
YXR1cmUgbWV0aG9kIGFwcHJvcHJpYXRlbHkKICAgKi8KICBwcml2YXRlIGZ1bmN0aW9uIGNo
ZWNrX3NpZ25hdHVyZSgmJHJlcXVlc3QsICRjb25zdW1lciwgJHRva2VuKSB7CgkvLyB0aGlz
IHNob3VsZCBwcm9iYWJseSBiZSBpbiBhIGRpZmZlcmVudCBtZXRob2QKCSR0aW1lc3RhbXAg
PSBAJHJlcXVlc3QtPmdldF9wYXJhbWV0ZXIoJ29hdXRoX3RpbWVzdGFtcCcpOwoJJG5vbmNl
ID0gQCRyZXF1ZXN0LT5nZXRfcGFyYW1ldGVyKCdvYXV0aF9ub25jZScpOwoKCSR0aGlzLT5j
aGVja190aW1lc3RhbXAoJHRpbWVzdGFtcCk7CgkkdGhpcy0+Y2hlY2tfbm9uY2UoJGNvbnN1
bWVyLCAkdG9rZW4sICRub25jZSwgJHRpbWVzdGFtcCk7CgoJJHNpZ25hdHVyZV9tZXRob2Qg
PSAkdGhpcy0+Z2V0X3NpZ25hdHVyZV9tZXRob2QoJHJlcXVlc3QpOwoKCSRzaWduYXR1cmUg
PSAkcmVxdWVzdC0+Z2V0X3BhcmFtZXRlcignb2F1dGhfc2lnbmF0dXJlJyk7CgkkdmFsaWRf
c2lnID0gJHNpZ25hdHVyZV9tZXRob2QtPmNoZWNrX3NpZ25hdHVyZSgKCSAgJHJlcXVlc3Qs
CgkgICRjb25zdW1lciwKCSAgJHRva2VuLAoJICAkc2lnbmF0dXJlCgkpOwoKCWlmICghJHZh
bGlkX3NpZykgewoJICB0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24oIkludmFsaWQgc2lnbmF0
dXJlIik7Cgl9CiAgfQoKICAvKioKICAgKiBjaGVjayB0aGF0IHRoZSB0aW1lc3RhbXAgaXMg
bmV3IGVub3VnaAogICAqLwogIHByaXZhdGUgZnVuY3Rpb24gY2hlY2tfdGltZXN0YW1wKCR0
aW1lc3RhbXApIHsKCWlmKCAhICR0aW1lc3RhbXAgKQoJICB0aHJvdyBuZXcgT0F1dGhFeGNl
cHRpb24oCgkJJ01pc3NpbmcgdGltZXN0YW1wIHBhcmFtZXRlci4gVGhlIHBhcmFtZXRlciBp
cyByZXF1aXJlZCcKCSAgKTsKCgkvLyB2ZXJpZnkgdGhhdCB0aW1lc3RhbXAgaXMgcmVjZW50
aXNoCgkkbm93ID0gdGltZSgpOwoJaWYgKGFicygkbm93IC0gJHRpbWVzdGFtcCkgPiAkdGhp
cy0+dGltZXN0YW1wX3RocmVzaG9sZCkgewoJICB0aHJvdyBuZXcgT0F1dGhFeGNlcHRpb24o
CgkJIkV4cGlyZWQgdGltZXN0YW1wLCB5b3VycyAkdGltZXN0YW1wLCBvdXJzICRub3ciCgkg
ICk7Cgl9CiAgfQoKICAvKioKICAgKiBjaGVjayB0aGF0IHRoZSBub25jZSBpcyBub3QgcmVw
ZWF0ZWQKICAgKi8KICBwcml2YXRlIGZ1bmN0aW9uIGNoZWNrX25vbmNlKCRjb25zdW1lciwg
JHRva2VuLCAkbm9uY2UsICR0aW1lc3RhbXApIHsKCWlmKCAhICRub25jZSApCgkgIHRocm93
IG5ldyBPQXV0aEV4Y2VwdGlvbigKCQknTWlzc2luZyBub25jZSBwYXJhbWV0ZXIuIFRoZSBw
YXJhbWV0ZXIgaXMgcmVxdWlyZWQnCgkgICk7CgoJLy8gdmVyaWZ5IHRoYXQgdGhlIG5vbmNl
IGlzIHVuaXF1ZWlzaAoJJGZvdW5kID0gJHRoaXMtPmRhdGFfc3RvcmUtPmxvb2t1cF9ub25j
ZSgKCSAgJGNvbnN1bWVyLAoJICAkdG9rZW4sCgkgICRub25jZSwKCSAgJHRpbWVzdGFtcAoJ
KTsKCWlmICgkZm91bmQpIHsKCSAgdGhyb3cgbmV3IE9BdXRoRXhjZXB0aW9uKCJOb25jZSBh
bHJlYWR5IHVzZWQ6ICRub25jZSIpOwoJfQogIH0KCn0KCmNsYXNzIE9BdXRoRGF0YVN0b3Jl
IHsKICBmdW5jdGlvbiBsb29rdXBfY29uc3VtZXIoJGNvbnN1bWVyX2tleSkgewoJLy8gaW1w
bGVtZW50IG1lCiAgfQoKICBmdW5jdGlvbiBsb29rdXBfdG9rZW4oJGNvbnN1bWVyLCAkdG9r
ZW5fdHlwZSwgJHRva2VuKSB7CgkvLyBpbXBsZW1lbnQgbWUKICB9CgogIGZ1bmN0aW9uIGxv
b2t1cF9ub25jZSgkY29uc3VtZXIsICR0b2tlbiwgJG5vbmNlLCAkdGltZXN0YW1wKSB7Cgkv
LyBpbXBsZW1lbnQgbWUKICB9CgogIGZ1bmN0aW9uIG5ld19yZXF1ZXN0X3Rva2VuKCRjb25z
dW1lciwgJGNhbGxiYWNrID0gbnVsbCkgewoJLy8gcmV0dXJuIGEgbmV3IHRva2VuIGF0dGFj
aGVkIHRvIHRoaXMgY29uc3VtZXIKICB9CgogIGZ1bmN0aW9uIG5ld19hY2Nlc3NfdG9rZW4o
JHRva2VuLCAkY29uc3VtZXIsICR2ZXJpZmllciA9IG51bGwpIHsKCS8vIHJldHVybiBhIG5l
dyBhY2Nlc3MgdG9rZW4gYXR0YWNoZWQgdG8gdGhpcyBjb25zdW1lcgoJLy8gZm9yIHRoZSB1
c2VyIGFzc29jaWF0ZWQgd2l0aCB0aGlzIHRva2VuIGlmIHRoZSByZXF1ZXN0IHRva2VuCgkv
LyBpcyBhdXRob3JpemVkCgkvLyBzaG91bGQgYWxzbyBpbnZhbGlkYXRlIHRoZSByZXF1ZXN0
IHRva2VuCiAgfQoKfQoKY2xhc3MgT0F1dGhVdGlsIHsKICBwdWJsaWMgc3RhdGljIGZ1bmN0
aW9uIHVybGVuY29kZV9yZmMzOTg2KCRpbnB1dCkgewogIGlmIChpc19hcnJheSgkaW5wdXQp
KSB7CglyZXR1cm4gYXJyYXlfbWFwKGFycmF5KCdPQXV0aFV0aWwnLCAndXJsZW5jb2RlX3Jm
YzM5ODYnKSwgJGlucHV0KTsKICB9IGVsc2UgaWYgKGlzX3NjYWxhcigkaW5wdXQpKSB7Cgly
ZXR1cm4gc3RyX3JlcGxhY2UoCgkgICcrJywKCSAgJyAnLAoJICBzdHJfcmVwbGFjZSgnJTdF
JywgJ34nLCByYXd1cmxlbmNvZGUoJGlucHV0KSkKCSk7CiAgfSBlbHNlIHsKCXJldHVybiAn
JzsKICB9Cn0KCgogIC8vIFRoaXMgZGVjb2RlIGZ1bmN0aW9uIGlzbid0IHRha2luZyBpbnRv
IGNvbnNpZGVyYXRpb24gdGhlIGFib3ZlCiAgLy8gbW9kaWZpY2F0aW9ucyB0byB0aGUgZW5j
b2RpbmcgcHJvY2Vzcy4gSG93ZXZlciwgdGhpcyBtZXRob2QgZG9lc24ndAogIC8vIHNlZW0g
dG8gYmUgdXNlZCBhbnl3aGVyZSBzbyBsZWF2aW5nIGl0IGFzIGlzLgogIHB1YmxpYyBzdGF0
aWMgZnVuY3Rpb24gdXJsZGVjb2RlX3JmYzM5ODYoJHN0cmluZykgewoJcmV0dXJuIHVybGRl
Y29kZSgkc3RyaW5nKTsKICB9CgogIC8vIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHR1cm5pbmcg
dGhlIEF1dGhvcml6YXRpb246IGhlYWRlciBpbnRvCiAgLy8gcGFyYW1ldGVycywgaGFzIHRv
IGRvIHNvbWUgdW5lc2NhcGluZwogIC8vIENhbiBmaWx0ZXIgb3V0IGFueSBub24tb2F1dGgg
cGFyYW1ldGVycyBpZiBuZWVkZWQgKGRlZmF1bHQgYmVoYXZpb3VyKQogIHB1YmxpYyBzdGF0
aWMgZnVuY3Rpb24gc3BsaXRfaGVhZGVyKCRoZWFkZXIsICRvbmx5X2FsbG93X29hdXRoX3Bh
cmFtZXRlcnMgPSB0cnVlKSB7CgkkcGF0dGVybiA9ICcvKChbLV9hLXpdKik9KCIoW14iXSop
InwoW14sXSopKSw/KS8nOwoJJG9mZnNldCA9IDA7CgkkcGFyYW1zID0gYXJyYXkoKTsKCXdo
aWxlIChwcmVnX21hdGNoKCRwYXR0ZXJuLCAkaGVhZGVyLCAkbWF0Y2hlcywgUFJFR19PRkZT
RVRfQ0FQVFVSRSwgJG9mZnNldCkgPiAwKSB7CgkgICRtYXRjaCA9ICRtYXRjaGVzWzBdOwoJ
ICAkaGVhZGVyX25hbWUgPSAkbWF0Y2hlc1syXVswXTsKCSAgJGhlYWRlcl9jb250ZW50ID0g
KGlzc2V0KCRtYXRjaGVzWzVdKSkgPyAkbWF0Y2hlc1s1XVswXSA6ICRtYXRjaGVzWzRdWzBd
OwoJICBpZiAocHJlZ19tYXRjaCgnL15vYXV0aF8vJywgJGhlYWRlcl9uYW1lKSB8fCAhJG9u
bHlfYWxsb3dfb2F1dGhfcGFyYW1ldGVycykgewoJCSRwYXJhbXNbJGhlYWRlcl9uYW1lXSA9
IE9BdXRoVXRpbDo6dXJsZGVjb2RlX3JmYzM5ODYoJGhlYWRlcl9jb250ZW50KTsKCSAgfQoJ
ICAkb2Zmc2V0ID0gJG1hdGNoWzFdICsgc3RybGVuKCRtYXRjaFswXSk7Cgl9CgoJaWYgKGlz
c2V0KCRwYXJhbXNbJ3JlYWxtJ10pKSB7CgkgIHVuc2V0KCRwYXJhbXNbJ3JlYWxtJ10pOwoJ
fQoKCXJldHVybiAkcGFyYW1zOwogIH0KCiAgLy8gaGVscGVyIHRvIHRyeSB0byBzb3J0IG91
dCBoZWFkZXJzIGZvciBwZW9wbGUgd2hvIGFyZW4ndCBydW5uaW5nIGFwYWNoZQogIHB1Ymxp
YyBzdGF0aWMgZnVuY3Rpb24gZ2V0X2hlYWRlcnMoKSB7CglpZiAoZnVuY3Rpb25fZXhpc3Rz
KCdhcGFjaGVfcmVxdWVzdF9oZWFkZXJzJykpIHsKCSAgLy8gd2UgbmVlZCB0aGlzIHRvIGdl
dCB0aGUgYWN0dWFsIEF1dGhvcml6YXRpb246IGhlYWRlcgoJICAvLyBiZWNhdXNlIGFwYWNo
ZSB0ZW5kcyB0byB0ZWxsIHVzIGl0IGRvZXNuJ3QgZXhpc3QKCSAgJGhlYWRlcnMgPSBhcGFj
aGVfcmVxdWVzdF9oZWFkZXJzKCk7CgoJICAvLyBzYW5pdGl6ZSB0aGUgb3V0cHV0IG9mIGFw
YWNoZV9yZXF1ZXN0X2hlYWRlcnMgYmVjYXVzZQoJICAvLyB3ZSBhbHdheXMgd2FudCB0aGUg
a2V5cyB0byBiZSBDYXNlZC1MaWtlLVRoaXMgYW5kIGFyaCgpCgkgIC8vIHJldHVybnMgdGhl
IGhlYWRlcnMgaW4gdGhlIHNhbWUgY2FzZSBhcyB0aGV5IGFyZSBpbiB0aGUKCSAgLy8gcmVx
dWVzdAoJICAkb3V0ID0gYXJyYXkoKTsKCSAgZm9yZWFjaCggJGhlYWRlcnMgQVMgJGtleSA9
PiAkdmFsdWUgKSB7CgkJJGtleSA9IHN0cl9yZXBsYWNlKAoJCQkiICIsCgkJCSItIiwKCQkJ
dWN3b3JkcyhzdHJ0b2xvd2VyKHN0cl9yZXBsYWNlKCItIiwgIiAiLCAka2V5KSkpCgkJICAp
OwoJCSRvdXRbJGtleV0gPSAkdmFsdWU7CgkgIH0KCX0gZWxzZSB7CgkgIC8vIG90aGVyd2lz
ZSB3ZSBkb24ndCBoYXZlIGFwYWNoZSBhbmQgYXJlIGp1c3QgZ29pbmcgdG8gaGF2ZSB0byBo
b3BlCgkgIC8vIHRoYXQgJF9TRVJWRVIgYWN0dWFsbHkgY29udGFpbnMgd2hhdCB3ZSBuZWVk
CgkgICRvdXQgPSBhcnJheSgpOwoJICBpZiggaXNzZXQoJF9TRVJWRVJbJ0NPTlRFTlRfVFlQ
RSddKSApCgkJJG91dFsnQ29udGVudC1UeXBlJ10gPSAkX1NFUlZFUlsnQ09OVEVOVF9UWVBF
J107CgkgIGlmKCBpc3NldCgkX0VOVlsnQ09OVEVOVF9UWVBFJ10pICkKCQkkb3V0WydDb250
ZW50LVR5cGUnXSA9ICRfRU5WWydDT05URU5UX1RZUEUnXTsKCgkgIGZvcmVhY2ggKCRfU0VS
VkVSIGFzICRrZXkgPT4gJHZhbHVlKSB7CgkJaWYgKHN1YnN0cigka2V5LCAwLCA1KSA9PSAi
SFRUUF8iKSB7CgkJICAvLyB0aGlzIGlzIGNoYW9zLCBiYXNpY2FsbHkgaXQgaXMganVzdCB0
aGVyZSB0byBjYXBpdGFsaXplIHRoZSBmaXJzdAoJCSAgLy8gbGV0dGVyIG9mIGV2ZXJ5IHdv
cmQgdGhhdCBpcyBub3QgYW4gaW5pdGlhbCBIVFRQIGFuZCBzdHJpcCBIVFRQCgkJICAvLyBj
b2RlIGZyb20gcHJ6ZW1lawoJCSAgJGtleSA9IHN0cl9yZXBsYWNlKAoJCQkiICIsCgkJCSIt
IiwKCQkJdWN3b3JkcyhzdHJ0b2xvd2VyKHN0cl9yZXBsYWNlKCJfIiwgIiAiLCBzdWJzdHIo
JGtleSwgNSkpKSkKCQkgICk7CgkJICAkb3V0WyRrZXldID0gJHZhbHVlOwoJCX0KCSAgfQoJ
fQoJcmV0dXJuICRvdXQ7CiAgfQoKICAvLyBUaGlzIGZ1bmN0aW9uIHRha2VzIGEgaW5wdXQg
bGlrZSBhPWImYT1jJmQ9ZSBhbmQgcmV0dXJucyB0aGUgcGFyc2VkCiAgLy8gcGFyYW1ldGVy
cyBsaWtlIHRoaXMKICAvLyBhcnJheSgnYScgPT4gYXJyYXkoJ2InLCdjJyksICdkJyA9PiAn
ZScpCiAgcHVibGljIHN0YXRpYyBmdW5jdGlvbiBwYXJzZV9wYXJhbWV0ZXJzKCAkaW5wdXQg
KSB7CglpZiAoIWlzc2V0KCRpbnB1dCkgfHwgISRpbnB1dCkgcmV0dXJuIGFycmF5KCk7CgoJ
JHBhaXJzID0gZXhwbG9kZSgnJicsICRpbnB1dCk7CgoJJHBhcnNlZF9wYXJhbWV0ZXJzID0g
YXJyYXkoKTsKCWZvcmVhY2ggKCRwYWlycyBhcyAkcGFpcikgewoJICAkc3BsaXQgPSBleHBs
b2RlKCc9JywgJHBhaXIsIDIpOwoJICAkcGFyYW1ldGVyID0gT0F1dGhVdGlsOjp1cmxkZWNv
ZGVfcmZjMzk4Nigkc3BsaXRbMF0pOwoJICAkdmFsdWUgPSBpc3NldCgkc3BsaXRbMV0pID8g
T0F1dGhVdGlsOjp1cmxkZWNvZGVfcmZjMzk4Nigkc3BsaXRbMV0pIDogJyc7CgoJICBpZiAo
aXNzZXQoJHBhcnNlZF9wYXJhbWV0ZXJzWyRwYXJhbWV0ZXJdKSkgewoJCS8vIFdlIGhhdmUg
YWxyZWFkeSByZWNpZXZlZCBwYXJhbWV0ZXIocykgd2l0aCB0aGlzIG5hbWUsIHNvIGFkZCB0
byB0aGUgbGlzdAoJCS8vIG9mIHBhcmFtZXRlcnMgd2l0aCB0aGlzIG5hbWUKCgkJaWYgKGlz
X3NjYWxhcigkcGFyc2VkX3BhcmFtZXRlcnNbJHBhcmFtZXRlcl0pKSB7CgkJICAvLyBUaGlz
IGlzIHRoZSBmaXJzdCBkdXBsaWNhdGUsIHNvIHRyYW5zZm9ybSBzY2FsYXIgKHN0cmluZykg
aW50byBhbiBhcnJheQoJCSAgLy8gc28gd2UgY2FuIGFkZCB0aGUgZHVwbGljYXRlcwoJCSAg
JHBhcnNlZF9wYXJhbWV0ZXJzWyRwYXJhbWV0ZXJdID0gYXJyYXkoJHBhcnNlZF9wYXJhbWV0
ZXJzWyRwYXJhbWV0ZXJdKTsKCQl9CgoJCSRwYXJzZWRfcGFyYW1ldGVyc1skcGFyYW1ldGVy
XVtdID0gJHZhbHVlOwoJICB9IGVsc2UgewoJCSRwYXJzZWRfcGFyYW1ldGVyc1skcGFyYW1l
dGVyXSA9ICR2YWx1ZTsKCSAgfQoJfQoJcmV0dXJuICRwYXJzZWRfcGFyYW1ldGVyczsKICB9
CgogIHB1YmxpYyBzdGF0aWMgZnVuY3Rpb24gYnVpbGRfaHR0cF9xdWVyeSgkcGFyYW1zKSB7
CglpZiAoISRwYXJhbXMpIHJldHVybiAnJzsKCgkvLyBVcmxlbmNvZGUgYm90aCBrZXlzIGFu
ZCB2YWx1ZXMKCSRrZXlzID0gT0F1dGhVdGlsOjp1cmxlbmNvZGVfcmZjMzk4NihhcnJheV9r
ZXlzKCRwYXJhbXMpKTsKCSR2YWx1ZXMgPSBPQXV0aFV0aWw6OnVybGVuY29kZV9yZmMzOTg2
KGFycmF5X3ZhbHVlcygkcGFyYW1zKSk7CgkkcGFyYW1zID0gYXJyYXlfY29tYmluZSgka2V5
cywgJHZhbHVlcyk7CgoJLy8gUGFyYW1ldGVycyBhcmUgc29ydGVkIGJ5IG5hbWUsIHVzaW5n
IGxleGljb2dyYXBoaWNhbCBieXRlIHZhbHVlIG9yZGVyaW5nLgoJLy8gUmVmOiBTcGVjOiA5
LjEuMSAoMSkKCXVrc29ydCgkcGFyYW1zLCAnc3RyY21wJyk7CgoJJHBhaXJzID0gYXJyYXko
KTsKCWZvcmVhY2ggKCRwYXJhbXMgYXMgJHBhcmFtZXRlciA9PiAkdmFsdWUpIHsKCSAgaWYg
KGlzX2FycmF5KCR2YWx1ZSkpIHsKCQkvLyBJZiB0d28gb3IgbW9yZSBwYXJhbWV0ZXJzIHNo
YXJlIHRoZSBzYW1lIG5hbWUsIHRoZXkgYXJlIHNvcnRlZCBieSB0aGVpciB2YWx1ZQoJCS8v
IFJlZjogU3BlYzogOS4xLjEgKDEpCgkJbmF0c29ydCgkdmFsdWUpOwoJCWZvcmVhY2ggKCR2
YWx1ZSBhcyAkZHVwbGljYXRlX3ZhbHVlKSB7CgkJICAkcGFpcnNbXSA9ICRwYXJhbWV0ZXIg
LiAnPScgLiAkZHVwbGljYXRlX3ZhbHVlOwoJCX0KCSAgfSBlbHNlIHsKCQkkcGFpcnNbXSA9
ICRwYXJhbWV0ZXIgLiAnPScgLiAkdmFsdWU7CgkgIH0KCX0KCS8vIEZvciBlYWNoIHBhcmFt
ZXRlciwgdGhlIG5hbWUgaXMgc2VwYXJhdGVkIGZyb20gdGhlIGNvcnJlc3BvbmRpbmcgdmFs
dWUgYnkgYW4gJz0nIGNoYXJhY3RlciAoQVNDSUkgY29kZSA2MSkKCS8vIEVhY2ggbmFtZS12
YWx1ZSBwYWlyIGlzIHNlcGFyYXRlZCBieSBhbiAnJicgY2hhcmFjdGVyIChBU0NJSSBjb2Rl
IDM4KQoJcmV0dXJuIGltcGxvZGUoJyYnLCAkcGFpcnMpOwogIH0KfSI7czozOiJtZDUiO3M6
MzI6IjIwMjQwMTliZWIwODlkMDVhYjAzOTZkYTY3ZTY5ODYzIjt9
